[INFO]  :  Starting HospitalManageSpringRestApplication using Java 21.0.6 with PID 1260 (D:\spring workspace\HospitalManage_SpringRest\target\classes started by admin in D:\spring workspace\HospitalManage_SpringRest)
[INFO]  :  No active profile set, falling back to 1 default profile: "default"
[INFO]  :  Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO]  :  Finished Spring Data repository scanning in 99 ms. Found 7 JPA repository interfaces.
[INFO]  :  Tomcat initialized with port 8080 (http)
[INFO]  :  Starting service [Tomcat]
[INFO]  :  Starting Servlet engine: [Apache Tomcat/10.1.40]
[INFO]  :  Initializing Spring embedded WebApplicationContext
[INFO]  :  Root WebApplicationContext: initialization completed in 2825 ms
[INFO]  :  HHH000204: Processing PersistenceUnitInfo [name: default]
[INFO]  :  HHH000412: Hibernate ORM core version 6.5.3.Final
[INFO]  :  HHH000026: Second-level cache disabled
[INFO]  :  No LoadTimeWeaver setup: ignoring JPA class transformer
[INFO]  :  HikariPool-1 - Starting...
[INFO]  :  HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@26cdd4af
[INFO]  :  HikariPool-1 - Start completed.
[WARN]  :  HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
[INFO]  :  HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
[INFO]  :  Initialized JPA EntityManagerFactory for persistence unit 'default'
[INFO]  :  Hibernate is in classpath; If applicable, HQL parser will be used.
[INFO]  :  Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
[WARN]  :  Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider.
[WARN]  :  spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[DEBUG]  :  129 mappings in 'requestMappingHandlerMapping'
[DEBUG]  :  Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
[DEBUG]  :  Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
[DEBUG]  :  ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
[DEBUG]  :  ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice
[INFO]  :  Tomcat started on port 8080 (http) with context path '/'
[INFO]  :  Started HospitalManageSpringRestApplication in 16.597 seconds (process running for 25.774)
[INFO]  :  Initializing Spring DispatcherServlet 'dispatcherServlet'
[INFO]  :  Initializing Servlet 'dispatcherServlet'
[DEBUG]  :  Detected StandardServletMultipartResolver
[DEBUG]  :  Detected AcceptHeaderLocaleResolver
[DEBUG]  :  Detected FixedThemeResolver
[DEBUG]  :  Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@30e3544d
[DEBUG]  :  Detected org.springframework.web.servlet.support.SessionFlashMapManager@2c84d6c4
[DEBUG]  :  enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
[INFO]  :  Completed initialization in 105 ms
[DEBUG]  :  Securing OPTIONS /api/users/login/authenticate
[DEBUG]  :  Securing POST /api/users/login/authenticate
[INFO]  :  Checking path for skipping JWT filter: /api/users/login/authenticate
[INFO]  :  Skip JWT filter? true
[DEBUG]  :  Set SecurityContextHolder to anonymous SecurityContext
[DEBUG]  :  Secured POST /api/users/login/authenticate
[INFO]  :  Checking path for skipping JWT filter: /api/users/login/authenticate
[INFO]  :  Skip JWT filter? true
[DEBUG]  :  POST "/api/users/login/authenticate", parameters={}
[DEBUG]  :  Mapped to com.hexaware.HospitalManagement.restController.AuthController#authenticateAndGetToken(AuthRequestDTO)
[DEBUG]  :  Read "application/json;charset=UTF-8" to [AuthRequestDTO(userName=neha.doctor@gmail.com, password=pass@123)]
[DEBUG]  :  Authenticated user
[INFO]  :  Token :eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiRE9DVE9SIiwiaWQiOjksInN1YiI6Im5laGEuZG9jdG9yQGdtYWlsLmNvbSIsImlhdCI6MTc1MDM5MDQ5MCwiZXhwIjoxNzUwNDc2ODkwfQ.1kZwmSCFoO33tIZM-C93JMZZ_qFFySEgSMRpSi1ddRc
[DEBUG]  :  Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[DEBUG]  :  Writing [{token=eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiRE9DVE9SIiwiaWQiOjksInN1YiI6Im5laGEuZG9jdG9yQGdtYWlsLmNvbSIs (truncated)...]
[DEBUG]  :  Completed 200 OK
[DEBUG]  :  Securing OPTIONS /api/doctors/byuserId/9
[DEBUG]  :  Securing GET /api/doctors/byuserId/9
[INFO]  :  Checking path for skipping JWT filter: /api/doctors/byuserId/9
[INFO]  :  Skip JWT filter? false
[INFO]  :  JwtAuthFilter is processing the request: /api/doctors/byuserId/9
[INFO]  :  Authorization header: Bearer eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiRE9DVE9SIiwiaWQiOjksInN1YiI6Im5laGEuZG9jdG9yQGdtYWlsLmNvbSIsImlhdCI6MTc1MDM5MDQ5MCwiZXhwIjoxNzUwNDc2ODkwfQ.1kZwmSCFoO33tIZM-C93JMZZ_qFFySEgSMRpSi1ddRc
[INFO]  :  Extracted username: neha.doctor@gmail.com
[INFO]  :  Authenticated user: neha.doctor@gmail.com
[INFO]  :  Authorities: [ROLE_DOCTOR]
[INFO]  :  Authenticated user: neha.doctor@gmail.com
[INFO]  :  Authorities: [ROLE_DOCTOR]
[DEBUG]  :  Secured GET /api/doctors/byuserId/9
[INFO]  :  Checking path for skipping JWT filter: /api/doctors/byuserId/9
[INFO]  :  Skip JWT filter? false
[DEBUG]  :  GET "/api/doctors/byuserId/9", parameters={}
[DEBUG]  :  Mapped to com.hexaware.HospitalManagement.restController.DoctorController#getDoctorByUserId(Long)
[DEBUG]  :  Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[DEBUG]  :  Writing [Doctor [doctorId=4, user=User [userId=9, name=Neha, email=neha.doctor@gmail.com, password=$2a$10$eNF (truncated)...]
[DEBUG]  :  Completed 200 OK
[DEBUG]  :  Securing OPTIONS /api/appointments/doctor/4
[DEBUG]  :  Securing GET /api/appointments/doctor/4
[INFO]  :  Checking path for skipping JWT filter: /api/appointments/doctor/4
[INFO]  :  Skip JWT filter? false
[INFO]  :  JwtAuthFilter is processing the request: /api/appointments/doctor/4
[INFO]  :  Authorization header: Bearer eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiRE9DVE9SIiwiaWQiOjksInN1YiI6Im5laGEuZG9jdG9yQGdtYWlsLmNvbSIsImlhdCI6MTc1MDM5MDQ5MCwiZXhwIjoxNzUwNDc2ODkwfQ.1kZwmSCFoO33tIZM-C93JMZZ_qFFySEgSMRpSi1ddRc
[INFO]  :  Extracted username: neha.doctor@gmail.com
[INFO]  :  Authenticated user: neha.doctor@gmail.com
[INFO]  :  Authorities: [ROLE_DOCTOR]
[INFO]  :  Authenticated user: neha.doctor@gmail.com
[INFO]  :  Authorities: [ROLE_DOCTOR]
[DEBUG]  :  Secured GET /api/appointments/doctor/4
[INFO]  :  Checking path for skipping JWT filter: /api/appointments/doctor/4
[INFO]  :  Skip JWT filter? false
[DEBUG]  :  GET "/api/appointments/doctor/4", parameters={}
[DEBUG]  :  Mapped to com.hexaware.HospitalManagement.restController.AppointmentController#getAppointmentsByDoctorId(Long)
[INFO]  :  Fetching appointments for doctorId: 4
[DEBUG]  :  Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[DEBUG]  :  Writing [[Appointment [appointmentId=12, patient=Patient [patientId=12, user=User [userId=38, name=Renuka, em (truncated)...]
[DEBUG]  :  Completed 200 OK
[DEBUG]  :  Securing POST /api/users/login/authenticate
[INFO]  :  Checking path for skipping JWT filter: /api/users/login/authenticate
[INFO]  :  Skip JWT filter? true
[DEBUG]  :  Set SecurityContextHolder to anonymous SecurityContext
[DEBUG]  :  Secured POST /api/users/login/authenticate
[INFO]  :  Checking path for skipping JWT filter: /api/users/login/authenticate
[INFO]  :  Skip JWT filter? true
[DEBUG]  :  POST "/api/users/login/authenticate", parameters={}
[DEBUG]  :  Mapped to com.hexaware.HospitalManagement.restController.AuthController#authenticateAndGetToken(AuthRequestDTO)
[DEBUG]  :  Read "application/json;charset=UTF-8" to [AuthRequestDTO(userName=neha.doctor@gmail.com, password=pass@123)]
[DEBUG]  :  Authenticated user
[INFO]  :  Token :eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiRE9DVE9SIiwiaWQiOjksInN1YiI6Im5laGEuZG9jdG9yQGdtYWlsLmNvbSIsImlhdCI6MTc1MDM5MDg1MiwiZXhwIjoxNzUwNDc3MjUyfQ.6Ssneg4zKlTq84RHEiITTwQ_hZsw2TV5mdj-3shdJiM
[DEBUG]  :  Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[DEBUG]  :  Writing [{token=eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiRE9DVE9SIiwiaWQiOjksInN1YiI6Im5laGEuZG9jdG9yQGdtYWlsLmNvbSIs (truncated)...]
[DEBUG]  :  Completed 200 OK
[DEBUG]  :  Securing OPTIONS /api/patients/getall
[DEBUG]  :  Securing GET /api/patients/getall
[INFO]  :  Checking path for skipping JWT filter: /api/patients/getall
[INFO]  :  Skip JWT filter? false
[INFO]  :  JwtAuthFilter is processing the request: /api/patients/getall
[INFO]  :  Authorization header: Bearer eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiRE9DVE9SIiwiaWQiOjksInN1YiI6Im5laGEuZG9jdG9yQGdtYWlsLmNvbSIsImlhdCI6MTc1MDM5MDg1MiwiZXhwIjoxNzUwNDc3MjUyfQ.6Ssneg4zKlTq84RHEiITTwQ_hZsw2TV5mdj-3shdJiM
[INFO]  :  Extracted username: neha.doctor@gmail.com
[INFO]  :  Authenticated user: neha.doctor@gmail.com
[INFO]  :  Authorities: [ROLE_DOCTOR]
[INFO]  :  Authenticated user: neha.doctor@gmail.com
[INFO]  :  Authorities: [ROLE_DOCTOR]
[DEBUG]  :  Secured GET /api/patients/getall
[INFO]  :  Checking path for skipping JWT filter: /api/patients/getall
[INFO]  :  Skip JWT filter? false
[DEBUG]  :  GET "/api/patients/getall", parameters={}
[DEBUG]  :  Mapped to com.hexaware.HospitalManagement.restController.PatientController#getAllPatients()
[DEBUG]  :  Authorizing method invocation ReflectiveMethodInvocation: public java.util.List com.hexaware.HospitalManagement.restController.PatientController.getAllPatients(); target is of class [com.hexaware.HospitalManagement.restController.PatientController]
[DEBUG]  :  Authorized method invocation ReflectiveMethodInvocation: public java.util.List com.hexaware.HospitalManagement.restController.PatientController.getAllPatients(); target is of class [com.hexaware.HospitalManagement.restController.PatientController]
[INFO]  :  Fetching all patients
[DEBUG]  :  Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[DEBUG]  :  Writing [[Patient [patientId=1, user=User [userId=1, name=Arvindkumar, email=arvind.patient@gmail.com, passwo (truncated)...]
[DEBUG]  :  Completed 200 OK
[DEBUG]  :  Securing GET /api/doctors/byuserId/9
[INFO]  :  Checking path for skipping JWT filter: /api/doctors/byuserId/9
[INFO]  :  Skip JWT filter? false
[INFO]  :  JwtAuthFilter is processing the request: /api/doctors/byuserId/9
[INFO]  :  Authorization header: Bearer eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiRE9DVE9SIiwiaWQiOjksInN1YiI6Im5laGEuZG9jdG9yQGdtYWlsLmNvbSIsImlhdCI6MTc1MDM5MDg1MiwiZXhwIjoxNzUwNDc3MjUyfQ.6Ssneg4zKlTq84RHEiITTwQ_hZsw2TV5mdj-3shdJiM
[INFO]  :  Extracted username: neha.doctor@gmail.com
[INFO]  :  Authenticated user: neha.doctor@gmail.com
[INFO]  :  Authorities: [ROLE_DOCTOR]
[INFO]  :  Authenticated user: neha.doctor@gmail.com
[INFO]  :  Authorities: [ROLE_DOCTOR]
[DEBUG]  :  Secured GET /api/doctors/byuserId/9
[INFO]  :  Checking path for skipping JWT filter: /api/doctors/byuserId/9
[INFO]  :  Skip JWT filter? false
[DEBUG]  :  GET "/api/doctors/byuserId/9", parameters={}
[DEBUG]  :  Mapped to com.hexaware.HospitalManagement.restController.DoctorController#getDoctorByUserId(Long)
[DEBUG]  :  Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[DEBUG]  :  Writing [Doctor [doctorId=4, user=User [userId=9, name=Neha, email=neha.doctor@gmail.com, password=$2a$10$eNF (truncated)...]
[DEBUG]  :  Completed 200 OK
[DEBUG]  :  Securing OPTIONS /api/doctors/messages/4/4
[DEBUG]  :  Securing GET /api/doctors/messages/4/4
[INFO]  :  Checking path for skipping JWT filter: /api/doctors/messages/4/4
[INFO]  :  Skip JWT filter? false
[INFO]  :  JwtAuthFilter is processing the request: /api/doctors/messages/4/4
[INFO]  :  Authorization header: Bearer eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiRE9DVE9SIiwiaWQiOjksInN1YiI6Im5laGEuZG9jdG9yQGdtYWlsLmNvbSIsImlhdCI6MTc1MDM5MDg1MiwiZXhwIjoxNzUwNDc3MjUyfQ.6Ssneg4zKlTq84RHEiITTwQ_hZsw2TV5mdj-3shdJiM
[INFO]  :  Extracted username: neha.doctor@gmail.com
[INFO]  :  Authenticated user: neha.doctor@gmail.com
[INFO]  :  Authorities: [ROLE_DOCTOR]
[INFO]  :  Authenticated user: neha.doctor@gmail.com
[INFO]  :  Authorities: [ROLE_DOCTOR]
[DEBUG]  :  Secured GET /api/doctors/messages/4/4
[INFO]  :  Checking path for skipping JWT filter: /api/doctors/messages/4/4
[INFO]  :  Skip JWT filter? false
[DEBUG]  :  GET "/api/doctors/messages/4/4", parameters={}
[DEBUG]  :  Mapped to com.hexaware.HospitalManagement.restController.DoctorController#getMessagesBetweenDoctorAndPatient(int, int)
[DEBUG]  :  Authorizing method invocation ReflectiveMethodInvocation: public java.util.List com.hexaware.HospitalManagement.restController.DoctorController.getMessagesBetweenDoctorAndPatient(int,int); target is of class [com.hexaware.HospitalManagement.restController.DoctorController]
[DEBUG]  :  Authorized method invocation ReflectiveMethodInvocation: public java.util.List com.hexaware.HospitalManagement.restController.DoctorController.getMessagesBetweenDoctorAndPatient(int,int); target is of class [com.hexaware.HospitalManagement.restController.DoctorController]
[DEBUG]  :  HTTP GET http://localhost:8282/api/messages/messageBetween/doctor/4/patient/4
[DEBUG]  :  Accept=[application/json, application/*+json]
[INFO]  :  Credentials from SecurityContext: eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiRE9DVE9SIiwiaWQiOjksInN1YiI6Im5laGEuZG9jdG9yQGdtYWlsLmNvbSIsImlhdCI6MTc1MDM5MDg1MiwiZXhwIjoxNzUwNDc3MjUyfQ.6Ssneg4zKlTq84RHEiITTwQ_hZsw2TV5mdj-3shdJiM
[INFO]  :   Added token to header: Bearer eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiRE9DVE9SIiwiaWQiOjksInN1YiI6Im5laGEuZG9jdG9yQGdtYWlsLmNvbSIsImlhdCI6MTc1MDM5MDg1MiwiZXhwIjoxNzUwNDc3MjUyfQ.6Ssneg4zKlTq84RHEiITTwQ_hZsw2TV5mdj-3shdJiM
[DEBUG]  :  Response 200 OK
[DEBUG]  :  Reading to [com.hexaware.HospitalManagement.entity.Message[]]
[DEBUG]  :  Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[DEBUG]  :  Writing [[]]
[DEBUG]  :  Completed 200 OK
[DEBUG]  :  Securing GET /api/patients/getall
[INFO]  :  Checking path for skipping JWT filter: /api/patients/getall
[INFO]  :  Skip JWT filter? false
[INFO]  :  JwtAuthFilter is processing the request: /api/patients/getall
[INFO]  :  Authorization header: Bearer eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiRE9DVE9SIiwiaWQiOjksInN1YiI6Im5laGEuZG9jdG9yQGdtYWlsLmNvbSIsImlhdCI6MTc1MDM5MDg1MiwiZXhwIjoxNzUwNDc3MjUyfQ.6Ssneg4zKlTq84RHEiITTwQ_hZsw2TV5mdj-3shdJiM
[INFO]  :  Extracted username: neha.doctor@gmail.com
[INFO]  :  Authenticated user: neha.doctor@gmail.com
[INFO]  :  Authorities: [ROLE_DOCTOR]
[INFO]  :  Authenticated user: neha.doctor@gmail.com
[INFO]  :  Authorities: [ROLE_DOCTOR]
[DEBUG]  :  Secured GET /api/patients/getall
[INFO]  :  Checking path for skipping JWT filter: /api/patients/getall
[INFO]  :  Skip JWT filter? false
[DEBUG]  :  GET "/api/patients/getall", parameters={}
[DEBUG]  :  Mapped to com.hexaware.HospitalManagement.restController.PatientController#getAllPatients()
[DEBUG]  :  Authorizing method invocation ReflectiveMethodInvocation: public java.util.List com.hexaware.HospitalManagement.restController.PatientController.getAllPatients(); target is of class [com.hexaware.HospitalManagement.restController.PatientController]
[DEBUG]  :  Authorized method invocation ReflectiveMethodInvocation: public java.util.List com.hexaware.HospitalManagement.restController.PatientController.getAllPatients(); target is of class [com.hexaware.HospitalManagement.restController.PatientController]
[INFO]  :  Fetching all patients
[DEBUG]  :  Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[DEBUG]  :  Writing [[Patient [patientId=1, user=User [userId=1, name=Arvindkumar, email=arvind.patient@gmail.com, passwo (truncated)...]
[DEBUG]  :  Completed 200 OK
[DEBUG]  :  Securing GET /api/doctors/byuserId/9
[INFO]  :  Checking path for skipping JWT filter: /api/doctors/byuserId/9
[INFO]  :  Skip JWT filter? false
[INFO]  :  JwtAuthFilter is processing the request: /api/doctors/byuserId/9
[INFO]  :  Authorization header: Bearer eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiRE9DVE9SIiwiaWQiOjksInN1YiI6Im5laGEuZG9jdG9yQGdtYWlsLmNvbSIsImlhdCI6MTc1MDM5MDg1MiwiZXhwIjoxNzUwNDc3MjUyfQ.6Ssneg4zKlTq84RHEiITTwQ_hZsw2TV5mdj-3shdJiM
[INFO]  :  Extracted username: neha.doctor@gmail.com
[INFO]  :  Authenticated user: neha.doctor@gmail.com
[INFO]  :  Authorities: [ROLE_DOCTOR]
[INFO]  :  Authenticated user: neha.doctor@gmail.com
[INFO]  :  Authorities: [ROLE_DOCTOR]
[DEBUG]  :  Secured GET /api/doctors/byuserId/9
[INFO]  :  Checking path for skipping JWT filter: /api/doctors/byuserId/9
[INFO]  :  Skip JWT filter? false
[DEBUG]  :  GET "/api/doctors/byuserId/9", parameters={}
[DEBUG]  :  Mapped to com.hexaware.HospitalManagement.restController.DoctorController#getDoctorByUserId(Long)
[DEBUG]  :  Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[DEBUG]  :  Writing [Doctor [doctorId=4, user=User [userId=9, name=Neha, email=neha.doctor@gmail.com, password=$2a$10$eNF (truncated)...]
[DEBUG]  :  Completed 200 OK
[DEBUG]  :  Securing OPTIONS /api/doctors/messages/4/3
[DEBUG]  :  Securing GET /api/doctors/messages/4/3
[INFO]  :  Checking path for skipping JWT filter: /api/doctors/messages/4/3
[INFO]  :  Skip JWT filter? false
[INFO]  :  JwtAuthFilter is processing the request: /api/doctors/messages/4/3
[INFO]  :  Authorization header: Bearer eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiRE9DVE9SIiwiaWQiOjksInN1YiI6Im5laGEuZG9jdG9yQGdtYWlsLmNvbSIsImlhdCI6MTc1MDM5MDg1MiwiZXhwIjoxNzUwNDc3MjUyfQ.6Ssneg4zKlTq84RHEiITTwQ_hZsw2TV5mdj-3shdJiM
[INFO]  :  Extracted username: neha.doctor@gmail.com
[INFO]  :  Authenticated user: neha.doctor@gmail.com
[INFO]  :  Authorities: [ROLE_DOCTOR]
[INFO]  :  Authenticated user: neha.doctor@gmail.com
[INFO]  :  Authorities: [ROLE_DOCTOR]
[DEBUG]  :  Secured GET /api/doctors/messages/4/3
[INFO]  :  Checking path for skipping JWT filter: /api/doctors/messages/4/3
[INFO]  :  Skip JWT filter? false
[DEBUG]  :  GET "/api/doctors/messages/4/3", parameters={}
[DEBUG]  :  Mapped to com.hexaware.HospitalManagement.restController.DoctorController#getMessagesBetweenDoctorAndPatient(int, int)
[DEBUG]  :  Authorizing method invocation ReflectiveMethodInvocation: public java.util.List com.hexaware.HospitalManagement.restController.DoctorController.getMessagesBetweenDoctorAndPatient(int,int); target is of class [com.hexaware.HospitalManagement.restController.DoctorController]
[DEBUG]  :  Authorized method invocation ReflectiveMethodInvocation: public java.util.List com.hexaware.HospitalManagement.restController.DoctorController.getMessagesBetweenDoctorAndPatient(int,int); target is of class [com.hexaware.HospitalManagement.restController.DoctorController]
[DEBUG]  :  HTTP GET http://localhost:8282/api/messages/messageBetween/doctor/4/patient/3
[DEBUG]  :  Accept=[application/json, application/*+json]
[INFO]  :  Credentials from SecurityContext: eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiRE9DVE9SIiwiaWQiOjksInN1YiI6Im5laGEuZG9jdG9yQGdtYWlsLmNvbSIsImlhdCI6MTc1MDM5MDg1MiwiZXhwIjoxNzUwNDc3MjUyfQ.6Ssneg4zKlTq84RHEiITTwQ_hZsw2TV5mdj-3shdJiM
[INFO]  :   Added token to header: Bearer eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiRE9DVE9SIiwiaWQiOjksInN1YiI6Im5laGEuZG9jdG9yQGdtYWlsLmNvbSIsImlhdCI6MTc1MDM5MDg1MiwiZXhwIjoxNzUwNDc3MjUyfQ.6Ssneg4zKlTq84RHEiITTwQ_hZsw2TV5mdj-3shdJiM
[DEBUG]  :  Response 200 OK
[DEBUG]  :  Reading to [com.hexaware.HospitalManagement.entity.Message[]]
[DEBUG]  :  Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[DEBUG]  :  Writing [[com.hexaware.HospitalManagement.DTO.MessageDTO@2bc8f550, com.hexaware.HospitalManagement.DTO.Messag (truncated)...]
[DEBUG]  :  Completed 200 OK
[DEBUG]  :  Securing GET /api/patients/getall
[INFO]  :  Checking path for skipping JWT filter: /api/patients/getall
[INFO]  :  Skip JWT filter? false
[INFO]  :  JwtAuthFilter is processing the request: /api/patients/getall
[INFO]  :  Authorization header: Bearer eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiRE9DVE9SIiwiaWQiOjksInN1YiI6Im5laGEuZG9jdG9yQGdtYWlsLmNvbSIsImlhdCI6MTc1MDM5MDg1MiwiZXhwIjoxNzUwNDc3MjUyfQ.6Ssneg4zKlTq84RHEiITTwQ_hZsw2TV5mdj-3shdJiM
[INFO]  :  Extracted username: neha.doctor@gmail.com
[INFO]  :  Authenticated user: neha.doctor@gmail.com
[INFO]  :  Authorities: [ROLE_DOCTOR]
[INFO]  :  Authenticated user: neha.doctor@gmail.com
[INFO]  :  Authorities: [ROLE_DOCTOR]
[DEBUG]  :  Secured GET /api/patients/getall
[INFO]  :  Checking path for skipping JWT filter: /api/patients/getall
[INFO]  :  Skip JWT filter? false
[DEBUG]  :  GET "/api/patients/getall", parameters={}
[DEBUG]  :  Mapped to com.hexaware.HospitalManagement.restController.PatientController#getAllPatients()
[DEBUG]  :  Authorizing method invocation ReflectiveMethodInvocation: public java.util.List com.hexaware.HospitalManagement.restController.PatientController.getAllPatients(); target is of class [com.hexaware.HospitalManagement.restController.PatientController]
[DEBUG]  :  Authorized method invocation ReflectiveMethodInvocation: public java.util.List com.hexaware.HospitalManagement.restController.PatientController.getAllPatients(); target is of class [com.hexaware.HospitalManagement.restController.PatientController]
[INFO]  :  Fetching all patients
[DEBUG]  :  Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[DEBUG]  :  Writing [[Patient [patientId=1, user=User [userId=1, name=Arvindkumar, email=arvind.patient@gmail.com, passwo (truncated)...]
[DEBUG]  :  Completed 200 OK
[DEBUG]  :  Securing GET /api/doctors/byuserId/9
[INFO]  :  Checking path for skipping JWT filter: /api/doctors/byuserId/9
[INFO]  :  Skip JWT filter? false
[INFO]  :  JwtAuthFilter is processing the request: /api/doctors/byuserId/9
[INFO]  :  Authorization header: Bearer eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiRE9DVE9SIiwiaWQiOjksInN1YiI6Im5laGEuZG9jdG9yQGdtYWlsLmNvbSIsImlhdCI6MTc1MDM5MDg1MiwiZXhwIjoxNzUwNDc3MjUyfQ.6Ssneg4zKlTq84RHEiITTwQ_hZsw2TV5mdj-3shdJiM
[INFO]  :  Extracted username: neha.doctor@gmail.com
[INFO]  :  Authenticated user: neha.doctor@gmail.com
[INFO]  :  Authorities: [ROLE_DOCTOR]
[INFO]  :  Authenticated user: neha.doctor@gmail.com
[INFO]  :  Authorities: [ROLE_DOCTOR]
[DEBUG]  :  Secured GET /api/doctors/byuserId/9
[INFO]  :  Checking path for skipping JWT filter: /api/doctors/byuserId/9
[INFO]  :  Skip JWT filter? false
[DEBUG]  :  GET "/api/doctors/byuserId/9", parameters={}
[DEBUG]  :  Mapped to com.hexaware.HospitalManagement.restController.DoctorController#getDoctorByUserId(Long)
[DEBUG]  :  Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[DEBUG]  :  Writing [Doctor [doctorId=4, user=User [userId=9, name=Neha, email=neha.doctor@gmail.com, password=$2a$10$eNF (truncated)...]
[DEBUG]  :  Completed 200 OK
[DEBUG]  :  Securing OPTIONS /api/doctors/messages/4/5
[DEBUG]  :  Securing GET /api/doctors/messages/4/5
[INFO]  :  Checking path for skipping JWT filter: /api/doctors/messages/4/5
[INFO]  :  Skip JWT filter? false
[INFO]  :  JwtAuthFilter is processing the request: /api/doctors/messages/4/5
[INFO]  :  Authorization header: Bearer eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiRE9DVE9SIiwiaWQiOjksInN1YiI6Im5laGEuZG9jdG9yQGdtYWlsLmNvbSIsImlhdCI6MTc1MDM5MDg1MiwiZXhwIjoxNzUwNDc3MjUyfQ.6Ssneg4zKlTq84RHEiITTwQ_hZsw2TV5mdj-3shdJiM
[INFO]  :  Extracted username: neha.doctor@gmail.com
[INFO]  :  Authenticated user: neha.doctor@gmail.com
[INFO]  :  Authorities: [ROLE_DOCTOR]
[INFO]  :  Authenticated user: neha.doctor@gmail.com
[INFO]  :  Authorities: [ROLE_DOCTOR]
[DEBUG]  :  Secured GET /api/doctors/messages/4/5
[INFO]  :  Checking path for skipping JWT filter: /api/doctors/messages/4/5
[INFO]  :  Skip JWT filter? false
[DEBUG]  :  GET "/api/doctors/messages/4/5", parameters={}
[DEBUG]  :  Mapped to com.hexaware.HospitalManagement.restController.DoctorController#getMessagesBetweenDoctorAndPatient(int, int)
[DEBUG]  :  Authorizing method invocation ReflectiveMethodInvocation: public java.util.List com.hexaware.HospitalManagement.restController.DoctorController.getMessagesBetweenDoctorAndPatient(int,int); target is of class [com.hexaware.HospitalManagement.restController.DoctorController]
[DEBUG]  :  Authorized method invocation ReflectiveMethodInvocation: public java.util.List com.hexaware.HospitalManagement.restController.DoctorController.getMessagesBetweenDoctorAndPatient(int,int); target is of class [com.hexaware.HospitalManagement.restController.DoctorController]
[DEBUG]  :  HTTP GET http://localhost:8282/api/messages/messageBetween/doctor/4/patient/5
[DEBUG]  :  Accept=[application/json, application/*+json]
[INFO]  :  Credentials from SecurityContext: eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiRE9DVE9SIiwiaWQiOjksInN1YiI6Im5laGEuZG9jdG9yQGdtYWlsLmNvbSIsImlhdCI6MTc1MDM5MDg1MiwiZXhwIjoxNzUwNDc3MjUyfQ.6Ssneg4zKlTq84RHEiITTwQ_hZsw2TV5mdj-3shdJiM
[INFO]  :   Added token to header: Bearer eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiRE9DVE9SIiwiaWQiOjksInN1YiI6Im5laGEuZG9jdG9yQGdtYWlsLmNvbSIsImlhdCI6MTc1MDM5MDg1MiwiZXhwIjoxNzUwNDc3MjUyfQ.6Ssneg4zKlTq84RHEiITTwQ_hZsw2TV5mdj-3shdJiM
[DEBUG]  :  Response 200 OK
[DEBUG]  :  Reading to [com.hexaware.HospitalManagement.entity.Message[]]
[DEBUG]  :  Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[DEBUG]  :  Writing [[]]
[DEBUG]  :  Completed 200 OK
[DEBUG]  :  Securing GET /api/patients/getall
[INFO]  :  Checking path for skipping JWT filter: /api/patients/getall
[INFO]  :  Skip JWT filter? false
[INFO]  :  JwtAuthFilter is processing the request: /api/patients/getall
[INFO]  :  Authorization header: Bearer eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiRE9DVE9SIiwiaWQiOjksInN1YiI6Im5laGEuZG9jdG9yQGdtYWlsLmNvbSIsImlhdCI6MTc1MDM5MDg1MiwiZXhwIjoxNzUwNDc3MjUyfQ.6Ssneg4zKlTq84RHEiITTwQ_hZsw2TV5mdj-3shdJiM
[INFO]  :  Extracted username: neha.doctor@gmail.com
[INFO]  :  Authenticated user: neha.doctor@gmail.com
[INFO]  :  Authorities: [ROLE_DOCTOR]
[INFO]  :  Authenticated user: neha.doctor@gmail.com
[INFO]  :  Authorities: [ROLE_DOCTOR]
[DEBUG]  :  Secured GET /api/patients/getall
[INFO]  :  Checking path for skipping JWT filter: /api/patients/getall
[INFO]  :  Skip JWT filter? false
[DEBUG]  :  GET "/api/patients/getall", parameters={}
[DEBUG]  :  Mapped to com.hexaware.HospitalManagement.restController.PatientController#getAllPatients()
[DEBUG]  :  Authorizing method invocation ReflectiveMethodInvocation: public java.util.List com.hexaware.HospitalManagement.restController.PatientController.getAllPatients(); target is of class [com.hexaware.HospitalManagement.restController.PatientController]
[DEBUG]  :  Authorized method invocation ReflectiveMethodInvocation: public java.util.List com.hexaware.HospitalManagement.restController.PatientController.getAllPatients(); target is of class [com.hexaware.HospitalManagement.restController.PatientController]
[INFO]  :  Fetching all patients
[DEBUG]  :  Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[DEBUG]  :  Writing [[Patient [patientId=1, user=User [userId=1, name=Arvindkumar, email=arvind.patient@gmail.com, passwo (truncated)...]
[DEBUG]  :  Completed 200 OK
[DEBUG]  :  Securing GET /api/doctors/byuserId/9
[INFO]  :  Checking path for skipping JWT filter: /api/doctors/byuserId/9
[INFO]  :  Skip JWT filter? false
[INFO]  :  JwtAuthFilter is processing the request: /api/doctors/byuserId/9
[INFO]  :  Authorization header: Bearer eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiRE9DVE9SIiwiaWQiOjksInN1YiI6Im5laGEuZG9jdG9yQGdtYWlsLmNvbSIsImlhdCI6MTc1MDM5MDg1MiwiZXhwIjoxNzUwNDc3MjUyfQ.6Ssneg4zKlTq84RHEiITTwQ_hZsw2TV5mdj-3shdJiM
[INFO]  :  Extracted username: neha.doctor@gmail.com
[INFO]  :  Authenticated user: neha.doctor@gmail.com
[INFO]  :  Authorities: [ROLE_DOCTOR]
[INFO]  :  Authenticated user: neha.doctor@gmail.com
[INFO]  :  Authorities: [ROLE_DOCTOR]
[DEBUG]  :  Secured GET /api/doctors/byuserId/9
[INFO]  :  Checking path for skipping JWT filter: /api/doctors/byuserId/9
[INFO]  :  Skip JWT filter? false
[DEBUG]  :  GET "/api/doctors/byuserId/9", parameters={}
[DEBUG]  :  Mapped to com.hexaware.HospitalManagement.restController.DoctorController#getDoctorByUserId(Long)
[DEBUG]  :  Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[DEBUG]  :  Writing [Doctor [doctorId=4, user=User [userId=9, name=Neha, email=neha.doctor@gmail.com, password=$2a$10$eNF (truncated)...]
[DEBUG]  :  Completed 200 OK
[DEBUG]  :  Securing GET /api/doctors/messages/4/5
[INFO]  :  Checking path for skipping JWT filter: /api/doctors/messages/4/5
[INFO]  :  Skip JWT filter? false
[INFO]  :  JwtAuthFilter is processing the request: /api/doctors/messages/4/5
[INFO]  :  Authorization header: Bearer eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiRE9DVE9SIiwiaWQiOjksInN1YiI6Im5laGEuZG9jdG9yQGdtYWlsLmNvbSIsImlhdCI6MTc1MDM5MDg1MiwiZXhwIjoxNzUwNDc3MjUyfQ.6Ssneg4zKlTq84RHEiITTwQ_hZsw2TV5mdj-3shdJiM
[INFO]  :  Extracted username: neha.doctor@gmail.com
[INFO]  :  Authenticated user: neha.doctor@gmail.com
[INFO]  :  Authorities: [ROLE_DOCTOR]
[INFO]  :  Authenticated user: neha.doctor@gmail.com
[INFO]  :  Authorities: [ROLE_DOCTOR]
[DEBUG]  :  Secured GET /api/doctors/messages/4/5
[INFO]  :  Checking path for skipping JWT filter: /api/doctors/messages/4/5
[INFO]  :  Skip JWT filter? false
[DEBUG]  :  GET "/api/doctors/messages/4/5", parameters={}
[DEBUG]  :  Mapped to com.hexaware.HospitalManagement.restController.DoctorController#getMessagesBetweenDoctorAndPatient(int, int)
[DEBUG]  :  Authorizing method invocation ReflectiveMethodInvocation: public java.util.List com.hexaware.HospitalManagement.restController.DoctorController.getMessagesBetweenDoctorAndPatient(int,int); target is of class [com.hexaware.HospitalManagement.restController.DoctorController]
[DEBUG]  :  Authorized method invocation ReflectiveMethodInvocation: public java.util.List com.hexaware.HospitalManagement.restController.DoctorController.getMessagesBetweenDoctorAndPatient(int,int); target is of class [com.hexaware.HospitalManagement.restController.DoctorController]
[DEBUG]  :  HTTP GET http://localhost:8282/api/messages/messageBetween/doctor/4/patient/5
[DEBUG]  :  Accept=[application/json, application/*+json]
[INFO]  :  Credentials from SecurityContext: eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiRE9DVE9SIiwiaWQiOjksInN1YiI6Im5laGEuZG9jdG9yQGdtYWlsLmNvbSIsImlhdCI6MTc1MDM5MDg1MiwiZXhwIjoxNzUwNDc3MjUyfQ.6Ssneg4zKlTq84RHEiITTwQ_hZsw2TV5mdj-3shdJiM
[INFO]  :   Added token to header: Bearer eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiRE9DVE9SIiwiaWQiOjksInN1YiI6Im5laGEuZG9jdG9yQGdtYWlsLmNvbSIsImlhdCI6MTc1MDM5MDg1MiwiZXhwIjoxNzUwNDc3MjUyfQ.6Ssneg4zKlTq84RHEiITTwQ_hZsw2TV5mdj-3shdJiM
[DEBUG]  :  Response 200 OK
[DEBUG]  :  Reading to [com.hexaware.HospitalManagement.entity.Message[]]
[DEBUG]  :  Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[DEBUG]  :  Writing [[]]
[DEBUG]  :  Completed 200 OK
[DEBUG]  :  Securing GET /api/patients/getall
[INFO]  :  Checking path for skipping JWT filter: /api/patients/getall
[INFO]  :  Skip JWT filter? false
[INFO]  :  JwtAuthFilter is processing the request: /api/patients/getall
[INFO]  :  Authorization header: Bearer eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiRE9DVE9SIiwiaWQiOjksInN1YiI6Im5laGEuZG9jdG9yQGdtYWlsLmNvbSIsImlhdCI6MTc1MDM5MDg1MiwiZXhwIjoxNzUwNDc3MjUyfQ.6Ssneg4zKlTq84RHEiITTwQ_hZsw2TV5mdj-3shdJiM
[INFO]  :  Extracted username: neha.doctor@gmail.com
[INFO]  :  Authenticated user: neha.doctor@gmail.com
[INFO]  :  Authorities: [ROLE_DOCTOR]
[INFO]  :  Authenticated user: neha.doctor@gmail.com
[INFO]  :  Authorities: [ROLE_DOCTOR]
[DEBUG]  :  Secured GET /api/patients/getall
[INFO]  :  Checking path for skipping JWT filter: /api/patients/getall
[INFO]  :  Skip JWT filter? false
[DEBUG]  :  GET "/api/patients/getall", parameters={}
[DEBUG]  :  Mapped to com.hexaware.HospitalManagement.restController.PatientController#getAllPatients()
[DEBUG]  :  Authorizing method invocation ReflectiveMethodInvocation: public java.util.List com.hexaware.HospitalManagement.restController.PatientController.getAllPatients(); target is of class [com.hexaware.HospitalManagement.restController.PatientController]
[DEBUG]  :  Authorized method invocation ReflectiveMethodInvocation: public java.util.List com.hexaware.HospitalManagement.restController.PatientController.getAllPatients(); target is of class [com.hexaware.HospitalManagement.restController.PatientController]
[INFO]  :  Fetching all patients
[DEBUG]  :  Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[DEBUG]  :  Writing [[Patient [patientId=1, user=User [userId=1, name=Arvindkumar, email=arvind.patient@gmail.com, passwo (truncated)...]
[DEBUG]  :  Completed 200 OK
[DEBUG]  :  Securing POST /api/users/login/authenticate
[INFO]  :  Checking path for skipping JWT filter: /api/users/login/authenticate
[INFO]  :  Skip JWT filter? true
[DEBUG]  :  Set SecurityContextHolder to anonymous SecurityContext
[DEBUG]  :  Secured POST /api/users/login/authenticate
[INFO]  :  Checking path for skipping JWT filter: /api/users/login/authenticate
[INFO]  :  Skip JWT filter? true
[DEBUG]  :  POST "/api/users/login/authenticate", parameters={}
[DEBUG]  :  Mapped to com.hexaware.HospitalManagement.restController.AuthController#authenticateAndGetToken(AuthRequestDTO)
[DEBUG]  :  Read "application/json;charset=UTF-8" to [AuthRequestDTO(userName=neha.doctor@gmail.com, password=pass@123)]
[DEBUG]  :  Authenticated user
[INFO]  :  Token :eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiRE9DVE9SIiwiaWQiOjksInN1YiI6Im5laGEuZG9jdG9yQGdtYWlsLmNvbSIsImlhdCI6MTc1MDM5MjE3MCwiZXhwIjoxNzUwNDc4NTcwfQ.QyPK0LVdSM2A63N6ZB0ZP0fFr0wRaF9qLChWIlAYWnA
[DEBUG]  :  Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[DEBUG]  :  Writing [{token=eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiRE9DVE9SIiwiaWQiOjksInN1YiI6Im5laGEuZG9jdG9yQGdtYWlsLmNvbSIs (truncated)...]
[DEBUG]  :  Completed 200 OK
[DEBUG]  :  Securing OPTIONS /api/users/getById/NaN
[DEBUG]  :  Securing GET /api/users/getById/NaN
[INFO]  :  Checking path for skipping JWT filter: /api/users/getById/NaN
[INFO]  :  Skip JWT filter? false
[INFO]  :  JwtAuthFilter is processing the request: /api/users/getById/NaN
[INFO]  :  Authorization header: Bearer eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiRE9DVE9SIiwiaWQiOjksInN1YiI6Im5laGEuZG9jdG9yQGdtYWlsLmNvbSIsImlhdCI6MTc1MDM5MjE3MCwiZXhwIjoxNzUwNDc4NTcwfQ.QyPK0LVdSM2A63N6ZB0ZP0fFr0wRaF9qLChWIlAYWnA
[INFO]  :  Extracted username: neha.doctor@gmail.com
[INFO]  :  Authenticated user: neha.doctor@gmail.com
[INFO]  :  Authorities: [ROLE_DOCTOR]
[INFO]  :  Authenticated user: neha.doctor@gmail.com
[INFO]  :  Authorities: [ROLE_DOCTOR]
[DEBUG]  :  Secured GET /api/users/getById/NaN
[INFO]  :  Checking path for skipping JWT filter: /api/users/getById/NaN
[INFO]  :  Skip JWT filter? false
[DEBUG]  :  GET "/api/users/getById/NaN", parameters={}
[DEBUG]  :  Mapped to com.hexaware.HospitalManagement.restController.UserController#getUserById(Long)
[DEBUG]  :  Could not resolve parameter [0] in public com.hexaware.HospitalManagement.entity.User com.hexaware.HospitalManagement.restController.UserController.getUserById(java.lang.Long) throws com.hexaware.HospitalManagement.exception.UserNotFoundException: Method parameter 'id': Failed to convert value of type 'java.lang.String' to required type 'java.lang.Long'; For input string: "NaN"
[DEBUG]  :  Using @ExceptionHandler com.hexaware.HospitalManagement.exception.GlobalExceptionHandler#handleIllegalArgument(IllegalArgumentException)
[DEBUG]  :  Using 'application/json', given [application/json, text/plain, */*] and supported [text/plain, */*, application/json, application/*+json]
[DEBUG]  :  Writing ["For input string: "NaN""]
[DEBUG]  :  Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Method parameter 'id': Failed to convert value of type 'java.lang.String' to required type 'java.lang.Long'; For input string: "NaN"]
[DEBUG]  :  Completed 400 BAD_REQUEST
[DEBUG]  :  Securing GET /api/users/getById/NaN
[INFO]  :  Checking path for skipping JWT filter: /api/users/getById/NaN
[INFO]  :  Skip JWT filter? false
[INFO]  :  JwtAuthFilter is processing the request: /api/users/getById/NaN
[INFO]  :  Authorization header: Bearer eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiRE9DVE9SIiwiaWQiOjksInN1YiI6Im5laGEuZG9jdG9yQGdtYWlsLmNvbSIsImlhdCI6MTc1MDM5MjE3MCwiZXhwIjoxNzUwNDc4NTcwfQ.QyPK0LVdSM2A63N6ZB0ZP0fFr0wRaF9qLChWIlAYWnA
[INFO]  :  Extracted username: neha.doctor@gmail.com
[INFO]  :  Authenticated user: neha.doctor@gmail.com
[INFO]  :  Authorities: [ROLE_DOCTOR]
[INFO]  :  Authenticated user: neha.doctor@gmail.com
[INFO]  :  Authorities: [ROLE_DOCTOR]
[DEBUG]  :  Secured GET /api/users/getById/NaN
[INFO]  :  Checking path for skipping JWT filter: /api/users/getById/NaN
[INFO]  :  Skip JWT filter? false
[DEBUG]  :  GET "/api/users/getById/NaN", parameters={}
[DEBUG]  :  Mapped to com.hexaware.HospitalManagement.restController.UserController#getUserById(Long)
[DEBUG]  :  Could not resolve parameter [0] in public com.hexaware.HospitalManagement.entity.User com.hexaware.HospitalManagement.restController.UserController.getUserById(java.lang.Long) throws com.hexaware.HospitalManagement.exception.UserNotFoundException: Method parameter 'id': Failed to convert value of type 'java.lang.String' to required type 'java.lang.Long'; For input string: "NaN"
[DEBUG]  :  Using @ExceptionHandler com.hexaware.HospitalManagement.exception.GlobalExceptionHandler#handleIllegalArgument(IllegalArgumentException)
[DEBUG]  :  Using 'application/json', given [application/json, text/plain, */*] and supported [text/plain, */*, application/json, application/*+json]
[DEBUG]  :  Writing ["For input string: "NaN""]
[DEBUG]  :  Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Method parameter 'id': Failed to convert value of type 'java.lang.String' to required type 'java.lang.Long'; For input string: "NaN"]
[DEBUG]  :  Completed 400 BAD_REQUEST
[DEBUG]  :  Securing OPTIONS /api/users/getById/9
[DEBUG]  :  Securing GET /api/users/getById/9
[INFO]  :  Checking path for skipping JWT filter: /api/users/getById/9
[INFO]  :  Skip JWT filter? false
[INFO]  :  JwtAuthFilter is processing the request: /api/users/getById/9
[INFO]  :  Authorization header: Bearer eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiRE9DVE9SIiwiaWQiOjksInN1YiI6Im5laGEuZG9jdG9yQGdtYWlsLmNvbSIsImlhdCI6MTc1MDM5MjE3MCwiZXhwIjoxNzUwNDc4NTcwfQ.QyPK0LVdSM2A63N6ZB0ZP0fFr0wRaF9qLChWIlAYWnA
[INFO]  :  Extracted username: neha.doctor@gmail.com
[INFO]  :  Authenticated user: neha.doctor@gmail.com
[INFO]  :  Authorities: [ROLE_DOCTOR]
[INFO]  :  Authenticated user: neha.doctor@gmail.com
[INFO]  :  Authorities: [ROLE_DOCTOR]
[DEBUG]  :  Secured GET /api/users/getById/9
[INFO]  :  Checking path for skipping JWT filter: /api/users/getById/9
[INFO]  :  Skip JWT filter? false
[DEBUG]  :  GET "/api/users/getById/9", parameters={}
[DEBUG]  :  Mapped to com.hexaware.HospitalManagement.restController.UserController#getUserById(Long)
[DEBUG]  :  Authorizing method invocation ReflectiveMethodInvocation: public com.hexaware.HospitalManagement.entity.User com.hexaware.HospitalManagement.restController.UserController.getUserById(java.lang.Long) throws com.hexaware.HospitalManagement.exception.UserNotFoundException; target is of class [com.hexaware.HospitalManagement.restController.UserController]
[DEBUG]  :  Authorized method invocation ReflectiveMethodInvocation: public com.hexaware.HospitalManagement.entity.User com.hexaware.HospitalManagement.restController.UserController.getUserById(java.lang.Long) throws com.hexaware.HospitalManagement.exception.UserNotFoundException; target is of class [com.hexaware.HospitalManagement.restController.UserController]
[INFO]  :  Fetching user with ID: 9
[INFO]  :  User fetched successfully: neha.doctor@gmail.com
[DEBUG]  :  Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[DEBUG]  :  Writing [User [userId=9, name=Neha, email=neha.doctor@gmail.com, password=$2a$10$eNFOXWRUfenM0Ls3mynfseQ0bqbf (truncated)...]
[DEBUG]  :  Completed 200 OK
[DEBUG]  :  Securing OPTIONS /api/users/login/authenticate
[DEBUG]  :  Securing POST /api/users/login/authenticate
[INFO]  :  Checking path for skipping JWT filter: /api/users/login/authenticate
[INFO]  :  Skip JWT filter? true
[DEBUG]  :  Set SecurityContextHolder to anonymous SecurityContext
[DEBUG]  :  Secured POST /api/users/login/authenticate
[INFO]  :  Checking path for skipping JWT filter: /api/users/login/authenticate
[INFO]  :  Skip JWT filter? true
[DEBUG]  :  POST "/api/users/login/authenticate", parameters={}
[DEBUG]  :  Mapped to com.hexaware.HospitalManagement.restController.AuthController#authenticateAndGetToken(AuthRequestDTO)
[DEBUG]  :  Read "application/json;charset=UTF-8" to [AuthRequestDTO(userName=neha.doctor@gmail.com, password=pass@123)]
[DEBUG]  :  Authenticated user
[INFO]  :  Token :eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiRE9DVE9SIiwiaWQiOjksInN1YiI6Im5laGEuZG9jdG9yQGdtYWlsLmNvbSIsImlhdCI6MTc1MDM5NTAyMywiZXhwIjoxNzUwNDgxNDIzfQ.MdCS925BfyGkJ0W4GrfjV-gCnlz95zkyQwokSqLu33A
[DEBUG]  :  Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[DEBUG]  :  Writing [{token=eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiRE9DVE9SIiwiaWQiOjksInN1YiI6Im5laGEuZG9jdG9yQGdtYWlsLmNvbSIs (truncated)...]
[DEBUG]  :  Completed 200 OK
[DEBUG]  :  Securing OPTIONS /api/patients/getall
[DEBUG]  :  Securing GET /api/patients/getall
[INFO]  :  Checking path for skipping JWT filter: /api/patients/getall
[INFO]  :  Skip JWT filter? false
[INFO]  :  JwtAuthFilter is processing the request: /api/patients/getall
[INFO]  :  Authorization header: Bearer eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiRE9DVE9SIiwiaWQiOjksInN1YiI6Im5laGEuZG9jdG9yQGdtYWlsLmNvbSIsImlhdCI6MTc1MDM5NTAyMywiZXhwIjoxNzUwNDgxNDIzfQ.MdCS925BfyGkJ0W4GrfjV-gCnlz95zkyQwokSqLu33A
[INFO]  :  Extracted username: neha.doctor@gmail.com
[INFO]  :  Authenticated user: neha.doctor@gmail.com
[INFO]  :  Authorities: [ROLE_DOCTOR]
[INFO]  :  Authenticated user: neha.doctor@gmail.com
[INFO]  :  Authorities: [ROLE_DOCTOR]
[DEBUG]  :  Secured GET /api/patients/getall
[INFO]  :  Checking path for skipping JWT filter: /api/patients/getall
[INFO]  :  Skip JWT filter? false
[DEBUG]  :  GET "/api/patients/getall", parameters={}
[DEBUG]  :  Mapped to com.hexaware.HospitalManagement.restController.PatientController#getAllPatients()
[DEBUG]  :  Authorizing method invocation ReflectiveMethodInvocation: public java.util.List com.hexaware.HospitalManagement.restController.PatientController.getAllPatients(); target is of class [com.hexaware.HospitalManagement.restController.PatientController]
[DEBUG]  :  Authorized method invocation ReflectiveMethodInvocation: public java.util.List com.hexaware.HospitalManagement.restController.PatientController.getAllPatients(); target is of class [com.hexaware.HospitalManagement.restController.PatientController]
[INFO]  :  Fetching all patients
[DEBUG]  :  Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[DEBUG]  :  Writing [[Patient [patientId=1, user=User [userId=1, name=Arvindkumar, email=arvind.patient@gmail.com, passwo (truncated)...]
[DEBUG]  :  Completed 200 OK
[DEBUG]  :  Securing OPTIONS /api/doctors/byuserId/9
[DEBUG]  :  Securing GET /api/doctors/byuserId/9
[INFO]  :  Checking path for skipping JWT filter: /api/doctors/byuserId/9
[INFO]  :  Skip JWT filter? false
[INFO]  :  JwtAuthFilter is processing the request: /api/doctors/byuserId/9
[INFO]  :  Authorization header: Bearer eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiRE9DVE9SIiwiaWQiOjksInN1YiI6Im5laGEuZG9jdG9yQGdtYWlsLmNvbSIsImlhdCI6MTc1MDM5NTAyMywiZXhwIjoxNzUwNDgxNDIzfQ.MdCS925BfyGkJ0W4GrfjV-gCnlz95zkyQwokSqLu33A
[INFO]  :  Extracted username: neha.doctor@gmail.com
[INFO]  :  Authenticated user: neha.doctor@gmail.com
[INFO]  :  Authorities: [ROLE_DOCTOR]
[INFO]  :  Authenticated user: neha.doctor@gmail.com
[INFO]  :  Authorities: [ROLE_DOCTOR]
[DEBUG]  :  Secured GET /api/doctors/byuserId/9
[INFO]  :  Checking path for skipping JWT filter: /api/doctors/byuserId/9
[INFO]  :  Skip JWT filter? false
[DEBUG]  :  GET "/api/doctors/byuserId/9", parameters={}
[DEBUG]  :  Mapped to com.hexaware.HospitalManagement.restController.DoctorController#getDoctorByUserId(Long)
[DEBUG]  :  Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[DEBUG]  :  Writing [Doctor [doctorId=4, user=User [userId=9, name=Neha, email=neha.doctor@gmail.com, password=$2a$10$eNF (truncated)...]
[DEBUG]  :  Completed 200 OK
[DEBUG]  :  Securing OPTIONS /api/doctors/messages/4/3
[DEBUG]  :  Securing GET /api/doctors/messages/4/3
[INFO]  :  Checking path for skipping JWT filter: /api/doctors/messages/4/3
[INFO]  :  Skip JWT filter? false
[INFO]  :  JwtAuthFilter is processing the request: /api/doctors/messages/4/3
[INFO]  :  Authorization header: Bearer eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiRE9DVE9SIiwiaWQiOjksInN1YiI6Im5laGEuZG9jdG9yQGdtYWlsLmNvbSIsImlhdCI6MTc1MDM5NTAyMywiZXhwIjoxNzUwNDgxNDIzfQ.MdCS925BfyGkJ0W4GrfjV-gCnlz95zkyQwokSqLu33A
[INFO]  :  Extracted username: neha.doctor@gmail.com
[INFO]  :  Authenticated user: neha.doctor@gmail.com
[INFO]  :  Authorities: [ROLE_DOCTOR]
[INFO]  :  Authenticated user: neha.doctor@gmail.com
[INFO]  :  Authorities: [ROLE_DOCTOR]
[DEBUG]  :  Secured GET /api/doctors/messages/4/3
[INFO]  :  Checking path for skipping JWT filter: /api/doctors/messages/4/3
[INFO]  :  Skip JWT filter? false
[DEBUG]  :  GET "/api/doctors/messages/4/3", parameters={}
[DEBUG]  :  Mapped to com.hexaware.HospitalManagement.restController.DoctorController#getMessagesBetweenDoctorAndPatient(int, int)
[DEBUG]  :  Authorizing method invocation ReflectiveMethodInvocation: public java.util.List com.hexaware.HospitalManagement.restController.DoctorController.getMessagesBetweenDoctorAndPatient(int,int); target is of class [com.hexaware.HospitalManagement.restController.DoctorController]
[DEBUG]  :  Authorized method invocation ReflectiveMethodInvocation: public java.util.List com.hexaware.HospitalManagement.restController.DoctorController.getMessagesBetweenDoctorAndPatient(int,int); target is of class [com.hexaware.HospitalManagement.restController.DoctorController]
[DEBUG]  :  HTTP GET http://localhost:8282/api/messages/messageBetween/doctor/4/patient/3
[DEBUG]  :  Accept=[application/json, application/*+json]
[INFO]  :  Credentials from SecurityContext: eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiRE9DVE9SIiwiaWQiOjksInN1YiI6Im5laGEuZG9jdG9yQGdtYWlsLmNvbSIsImlhdCI6MTc1MDM5NTAyMywiZXhwIjoxNzUwNDgxNDIzfQ.MdCS925BfyGkJ0W4GrfjV-gCnlz95zkyQwokSqLu33A
[INFO]  :   Added token to header: Bearer eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiRE9DVE9SIiwiaWQiOjksInN1YiI6Im5laGEuZG9jdG9yQGdtYWlsLmNvbSIsImlhdCI6MTc1MDM5NTAyMywiZXhwIjoxNzUwNDgxNDIzfQ.MdCS925BfyGkJ0W4GrfjV-gCnlz95zkyQwokSqLu33A
[DEBUG]  :  Response 200 OK
[DEBUG]  :  Reading to [com.hexaware.HospitalManagement.entity.Message[]]
[DEBUG]  :  Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[DEBUG]  :  Writing [[com.hexaware.HospitalManagement.DTO.MessageDTO@6b715da5, com.hexaware.HospitalManagement.DTO.Messag (truncated)...]
[DEBUG]  :  Completed 200 OK
[DEBUG]  :  Securing OPTIONS /api/doctors/sendMessage
[DEBUG]  :  Securing POST /api/doctors/sendMessage
[INFO]  :  Checking path for skipping JWT filter: /api/doctors/sendMessage
[INFO]  :  Skip JWT filter? false
[INFO]  :  JwtAuthFilter is processing the request: /api/doctors/sendMessage
[INFO]  :  Authorization header: Bearer eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiRE9DVE9SIiwiaWQiOjksInN1YiI6Im5laGEuZG9jdG9yQGdtYWlsLmNvbSIsImlhdCI6MTc1MDM5NTAyMywiZXhwIjoxNzUwNDgxNDIzfQ.MdCS925BfyGkJ0W4GrfjV-gCnlz95zkyQwokSqLu33A
[INFO]  :  Extracted username: neha.doctor@gmail.com
[INFO]  :  Authenticated user: neha.doctor@gmail.com
[INFO]  :  Authorities: [ROLE_DOCTOR]
[INFO]  :  Authenticated user: neha.doctor@gmail.com
[INFO]  :  Authorities: [ROLE_DOCTOR]
[DEBUG]  :  Secured POST /api/doctors/sendMessage
[INFO]  :  Checking path for skipping JWT filter: /api/doctors/sendMessage
[INFO]  :  Skip JWT filter? false
[DEBUG]  :  POST "/api/doctors/sendMessage", parameters={}
[DEBUG]  :  Mapped to com.hexaware.HospitalManagement.restController.DoctorController#sendMessage(MessageDTO)
[DEBUG]  :  Read "application/json;charset=UTF-8" to [com.hexaware.HospitalManagement.DTO.MessageDTO@68460ef8]
[DEBUG]  :  Authorizing method invocation ReflectiveMethodInvocation: public com.hexaware.HospitalManagement.DTO.MessageDTO com.hexaware.HospitalManagement.restController.DoctorController.sendMessage(com.hexaware.HospitalManagement.DTO.MessageDTO); target is of class [com.hexaware.HospitalManagement.restController.DoctorController]
[DEBUG]  :  Authorized method invocation ReflectiveMethodInvocation: public com.hexaware.HospitalManagement.DTO.MessageDTO com.hexaware.HospitalManagement.restController.DoctorController.sendMessage(com.hexaware.HospitalManagement.DTO.MessageDTO); target is of class [com.hexaware.HospitalManagement.restController.DoctorController]
[DEBUG]  :  HTTP POST http://localhost:8282/api/messages/send
[DEBUG]  :  Accept=[application/json, application/*+json]
[DEBUG]  :  Writing [com.hexaware.HospitalManagement.DTO.MessageDTO@68460ef8] with org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
[INFO]  :  Credentials from SecurityContext: eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiRE9DVE9SIiwiaWQiOjksInN1YiI6Im5laGEuZG9jdG9yQGdtYWlsLmNvbSIsImlhdCI6MTc1MDM5NTAyMywiZXhwIjoxNzUwNDgxNDIzfQ.MdCS925BfyGkJ0W4GrfjV-gCnlz95zkyQwokSqLu33A
[INFO]  :   Added token to header: Bearer eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiRE9DVE9SIiwiaWQiOjksInN1YiI6Im5laGEuZG9jdG9yQGdtYWlsLmNvbSIsImlhdCI6MTc1MDM5NTAyMywiZXhwIjoxNzUwNDgxNDIzfQ.MdCS925BfyGkJ0W4GrfjV-gCnlz95zkyQwokSqLu33A
[DEBUG]  :  Response 200 OK
[DEBUG]  :  Reading to [com.hexaware.HospitalManagement.entity.Message]
[DEBUG]  :  Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[DEBUG]  :  Writing [com.hexaware.HospitalManagement.DTO.MessageDTO@29bc4a1b]
[DEBUG]  :  Completed 200 OK
[DEBUG]  :  Securing GET /api/doctors/messages/4/3
[INFO]  :  Checking path for skipping JWT filter: /api/doctors/messages/4/3
[INFO]  :  Skip JWT filter? false
[INFO]  :  JwtAuthFilter is processing the request: /api/doctors/messages/4/3
[INFO]  :  Authorization header: Bearer eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiRE9DVE9SIiwiaWQiOjksInN1YiI6Im5laGEuZG9jdG9yQGdtYWlsLmNvbSIsImlhdCI6MTc1MDM5NTAyMywiZXhwIjoxNzUwNDgxNDIzfQ.MdCS925BfyGkJ0W4GrfjV-gCnlz95zkyQwokSqLu33A
[INFO]  :  Extracted username: neha.doctor@gmail.com
[INFO]  :  Authenticated user: neha.doctor@gmail.com
[INFO]  :  Authorities: [ROLE_DOCTOR]
[INFO]  :  Authenticated user: neha.doctor@gmail.com
[INFO]  :  Authorities: [ROLE_DOCTOR]
[DEBUG]  :  Secured GET /api/doctors/messages/4/3
[INFO]  :  Checking path for skipping JWT filter: /api/doctors/messages/4/3
[INFO]  :  Skip JWT filter? false
[DEBUG]  :  GET "/api/doctors/messages/4/3", parameters={}
[DEBUG]  :  Mapped to com.hexaware.HospitalManagement.restController.DoctorController#getMessagesBetweenDoctorAndPatient(int, int)
[DEBUG]  :  Authorizing method invocation ReflectiveMethodInvocation: public java.util.List com.hexaware.HospitalManagement.restController.DoctorController.getMessagesBetweenDoctorAndPatient(int,int); target is of class [com.hexaware.HospitalManagement.restController.DoctorController]
[DEBUG]  :  Authorized method invocation ReflectiveMethodInvocation: public java.util.List com.hexaware.HospitalManagement.restController.DoctorController.getMessagesBetweenDoctorAndPatient(int,int); target is of class [com.hexaware.HospitalManagement.restController.DoctorController]
[DEBUG]  :  HTTP GET http://localhost:8282/api/messages/messageBetween/doctor/4/patient/3
[DEBUG]  :  Accept=[application/json, application/*+json]
[INFO]  :  Credentials from SecurityContext: eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiRE9DVE9SIiwiaWQiOjksInN1YiI6Im5laGEuZG9jdG9yQGdtYWlsLmNvbSIsImlhdCI6MTc1MDM5NTAyMywiZXhwIjoxNzUwNDgxNDIzfQ.MdCS925BfyGkJ0W4GrfjV-gCnlz95zkyQwokSqLu33A
[INFO]  :   Added token to header: Bearer eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiRE9DVE9SIiwiaWQiOjksInN1YiI6Im5laGEuZG9jdG9yQGdtYWlsLmNvbSIsImlhdCI6MTc1MDM5NTAyMywiZXhwIjoxNzUwNDgxNDIzfQ.MdCS925BfyGkJ0W4GrfjV-gCnlz95zkyQwokSqLu33A
[DEBUG]  :  Response 200 OK
[DEBUG]  :  Reading to [com.hexaware.HospitalManagement.entity.Message[]]
[DEBUG]  :  Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[DEBUG]  :  Writing [[com.hexaware.HospitalManagement.DTO.MessageDTO@7017b7a6, com.hexaware.HospitalManagement.DTO.Messag (truncated)...]
[DEBUG]  :  Completed 200 OK
[DEBUG]  :  Securing GET /api/patients/getall
[INFO]  :  Checking path for skipping JWT filter: /api/patients/getall
[INFO]  :  Skip JWT filter? false
[INFO]  :  JwtAuthFilter is processing the request: /api/patients/getall
[INFO]  :  Authorization header: Bearer eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiRE9DVE9SIiwiaWQiOjksInN1YiI6Im5laGEuZG9jdG9yQGdtYWlsLmNvbSIsImlhdCI6MTc1MDM5NTAyMywiZXhwIjoxNzUwNDgxNDIzfQ.MdCS925BfyGkJ0W4GrfjV-gCnlz95zkyQwokSqLu33A
[INFO]  :  Extracted username: neha.doctor@gmail.com
[INFO]  :  Authenticated user: neha.doctor@gmail.com
[INFO]  :  Authorities: [ROLE_DOCTOR]
[INFO]  :  Authenticated user: neha.doctor@gmail.com
[INFO]  :  Authorities: [ROLE_DOCTOR]
[DEBUG]  :  Secured GET /api/patients/getall
[INFO]  :  Checking path for skipping JWT filter: /api/patients/getall
[INFO]  :  Skip JWT filter? false
[DEBUG]  :  GET "/api/patients/getall", parameters={}
[DEBUG]  :  Mapped to com.hexaware.HospitalManagement.restController.PatientController#getAllPatients()
[DEBUG]  :  Authorizing method invocation ReflectiveMethodInvocation: public java.util.List com.hexaware.HospitalManagement.restController.PatientController.getAllPatients(); target is of class [com.hexaware.HospitalManagement.restController.PatientController]
[DEBUG]  :  Authorized method invocation ReflectiveMethodInvocation: public java.util.List com.hexaware.HospitalManagement.restController.PatientController.getAllPatients(); target is of class [com.hexaware.HospitalManagement.restController.PatientController]
[INFO]  :  Fetching all patients
[DEBUG]  :  Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[DEBUG]  :  Writing [[Patient [patientId=1, user=User [userId=1, name=Arvindkumar, email=arvind.patient@gmail.com, passwo (truncated)...]
[DEBUG]  :  Completed 200 OK
[DEBUG]  :  Securing POST /api/users/login/authenticate
[INFO]  :  Checking path for skipping JWT filter: /api/users/login/authenticate
[INFO]  :  Skip JWT filter? true
[DEBUG]  :  Set SecurityContextHolder to anonymous SecurityContext
[DEBUG]  :  Secured POST /api/users/login/authenticate
[INFO]  :  Checking path for skipping JWT filter: /api/users/login/authenticate
[INFO]  :  Skip JWT filter? true
[DEBUG]  :  POST "/api/users/login/authenticate", parameters={}
[DEBUG]  :  Mapped to com.hexaware.HospitalManagement.restController.AuthController#authenticateAndGetToken(AuthRequestDTO)
[DEBUG]  :  Read "application/json;charset=UTF-8" to [AuthRequestDTO(userName=suresh.patient@gmail.com, password=pass@123)]
[DEBUG]  :  Authenticated user
[INFO]  :  Token :eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiUEFUSUVOVCIsImlkIjozLCJzdWIiOiJzdXJlc2gucGF0aWVudEBnbWFpbC5jb20iLCJpYXQiOjE3NTAzOTUwNzgsImV4cCI6MTc1MDQ4MTQ3OH0.mNzw8u5CobFsO5nZ5wF_tPQVqUchdFgCCiJSMO3T48w
[DEBUG]  :  Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[DEBUG]  :  Writing [{token=eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiUEFUSUVOVCIsImlkIjozLCJzdWIiOiJzdXJlc2gucGF0aWVudEBnbWFpbC5j (truncated)...]
[DEBUG]  :  Completed 200 OK
[DEBUG]  :  Securing OPTIONS /api/patients/byuserId/3
[DEBUG]  :  Securing GET /api/patients/byuserId/3
[INFO]  :  Checking path for skipping JWT filter: /api/patients/byuserId/3
[INFO]  :  Skip JWT filter? false
[INFO]  :  JwtAuthFilter is processing the request: /api/patients/byuserId/3
[INFO]  :  Authorization header: Bearer eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiUEFUSUVOVCIsImlkIjozLCJzdWIiOiJzdXJlc2gucGF0aWVudEBnbWFpbC5jb20iLCJpYXQiOjE3NTAzOTUwNzgsImV4cCI6MTc1MDQ4MTQ3OH0.mNzw8u5CobFsO5nZ5wF_tPQVqUchdFgCCiJSMO3T48w
[INFO]  :  Extracted username: suresh.patient@gmail.com
[INFO]  :  Authenticated user: suresh.patient@gmail.com
[INFO]  :  Authorities: [ROLE_PATIENT]
[INFO]  :  Authenticated user: suresh.patient@gmail.com
[INFO]  :  Authorities: [ROLE_PATIENT]
[DEBUG]  :  Secured GET /api/patients/byuserId/3
[INFO]  :  Checking path for skipping JWT filter: /api/patients/byuserId/3
[INFO]  :  Skip JWT filter? false
[DEBUG]  :  GET "/api/patients/byuserId/3", parameters={}
[DEBUG]  :  Mapped to com.hexaware.HospitalManagement.restController.PatientController#getPatientByUserId(Long)
[DEBUG]  :  Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[DEBUG]  :  Writing [Patient [patientId=3, user=User [userId=3, name=Suresh, email=suresh.patient@gmail.com, password=$2a (truncated)...]
[DEBUG]  :  Completed 200 OK
[DEBUG]  :  Securing OPTIONS /api/doctors/getAll
[DEBUG]  :  Securing GET /api/doctors/getAll
[INFO]  :  Checking path for skipping JWT filter: /api/doctors/getAll
[INFO]  :  Skip JWT filter? false
[INFO]  :  JwtAuthFilter is processing the request: /api/doctors/getAll
[INFO]  :  Authorization header: Bearer eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiUEFUSUVOVCIsImlkIjozLCJzdWIiOiJzdXJlc2gucGF0aWVudEBnbWFpbC5jb20iLCJpYXQiOjE3NTAzOTUwNzgsImV4cCI6MTc1MDQ4MTQ3OH0.mNzw8u5CobFsO5nZ5wF_tPQVqUchdFgCCiJSMO3T48w
[INFO]  :  Extracted username: suresh.patient@gmail.com
[INFO]  :  Authenticated user: suresh.patient@gmail.com
[INFO]  :  Authorities: [ROLE_PATIENT]
[INFO]  :  Authenticated user: suresh.patient@gmail.com
[INFO]  :  Authorities: [ROLE_PATIENT]
[DEBUG]  :  Secured GET /api/doctors/getAll
[INFO]  :  Checking path for skipping JWT filter: /api/doctors/getAll
[INFO]  :  Skip JWT filter? false
[DEBUG]  :  GET "/api/doctors/getAll", parameters={}
[DEBUG]  :  Mapped to com.hexaware.HospitalManagement.restController.DoctorController#getAllDoctors()
[DEBUG]  :  Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[DEBUG]  :  Writing [[Doctor [doctorId=1, user=User [userId=6, name=ManojKumar, email=manoj.doctor@gmail.com, password=$2 (truncated)...]
[DEBUG]  :  Completed 200 OK
[DEBUG]  :  Securing GET /api/patients/byuserId/3
[INFO]  :  Checking path for skipping JWT filter: /api/patients/byuserId/3
[INFO]  :  Skip JWT filter? false
[INFO]  :  JwtAuthFilter is processing the request: /api/patients/byuserId/3
[INFO]  :  Authorization header: Bearer eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiUEFUSUVOVCIsImlkIjozLCJzdWIiOiJzdXJlc2gucGF0aWVudEBnbWFpbC5jb20iLCJpYXQiOjE3NTAzOTUwNzgsImV4cCI6MTc1MDQ4MTQ3OH0.mNzw8u5CobFsO5nZ5wF_tPQVqUchdFgCCiJSMO3T48w
[INFO]  :  Extracted username: suresh.patient@gmail.com
[INFO]  :  Authenticated user: suresh.patient@gmail.com
[INFO]  :  Authorities: [ROLE_PATIENT]
[INFO]  :  Authenticated user: suresh.patient@gmail.com
[INFO]  :  Authorities: [ROLE_PATIENT]
[DEBUG]  :  Secured GET /api/patients/byuserId/3
[INFO]  :  Checking path for skipping JWT filter: /api/patients/byuserId/3
[INFO]  :  Skip JWT filter? false
[DEBUG]  :  GET "/api/patients/byuserId/3", parameters={}
[DEBUG]  :  Mapped to com.hexaware.HospitalManagement.restController.PatientController#getPatientByUserId(Long)
[DEBUG]  :  Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[DEBUG]  :  Writing [Patient [patientId=3, user=User [userId=3, name=Suresh, email=suresh.patient@gmail.com, password=$2a (truncated)...]
[DEBUG]  :  Completed 200 OK
[DEBUG]  :  Securing OPTIONS /api/patients/messages/between/4/3
[DEBUG]  :  Securing GET /api/patients/messages/between/4/3
[INFO]  :  Checking path for skipping JWT filter: /api/patients/messages/between/4/3
[INFO]  :  Skip JWT filter? false
[INFO]  :  JwtAuthFilter is processing the request: /api/patients/messages/between/4/3
[INFO]  :  Authorization header: Bearer eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiUEFUSUVOVCIsImlkIjozLCJzdWIiOiJzdXJlc2gucGF0aWVudEBnbWFpbC5jb20iLCJpYXQiOjE3NTAzOTUwNzgsImV4cCI6MTc1MDQ4MTQ3OH0.mNzw8u5CobFsO5nZ5wF_tPQVqUchdFgCCiJSMO3T48w
[INFO]  :  Extracted username: suresh.patient@gmail.com
[INFO]  :  Authenticated user: suresh.patient@gmail.com
[INFO]  :  Authorities: [ROLE_PATIENT]
[INFO]  :  Authenticated user: suresh.patient@gmail.com
[INFO]  :  Authorities: [ROLE_PATIENT]
[DEBUG]  :  Secured GET /api/patients/messages/between/4/3
[INFO]  :  Checking path for skipping JWT filter: /api/patients/messages/between/4/3
[INFO]  :  Skip JWT filter? false
[DEBUG]  :  GET "/api/patients/messages/between/4/3", parameters={}
[DEBUG]  :  Mapped to com.hexaware.HospitalManagement.restController.PatientController#getMessagesBetweenDoctorAndPatient(int, int)
[INFO]  :  Fetching messages between doctorId: 4 and patientId: 3
[DEBUG]  :  HTTP GET http://localhost:8282/api/messages/messageBetween/doctor/4/patient/3
[DEBUG]  :  Accept=[application/json, application/*+json]
[INFO]  :  Credentials from SecurityContext: eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiUEFUSUVOVCIsImlkIjozLCJzdWIiOiJzdXJlc2gucGF0aWVudEBnbWFpbC5jb20iLCJpYXQiOjE3NTAzOTUwNzgsImV4cCI6MTc1MDQ4MTQ3OH0.mNzw8u5CobFsO5nZ5wF_tPQVqUchdFgCCiJSMO3T48w
[INFO]  :   Added token to header: Bearer eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiUEFUSUVOVCIsImlkIjozLCJzdWIiOiJzdXJlc2gucGF0aWVudEBnbWFpbC5jb20iLCJpYXQiOjE3NTAzOTUwNzgsImV4cCI6MTc1MDQ4MTQ3OH0.mNzw8u5CobFsO5nZ5wF_tPQVqUchdFgCCiJSMO3T48w
[DEBUG]  :  Response 200 OK
[DEBUG]  :  Reading to [com.hexaware.HospitalManagement.entity.Message[]]
[DEBUG]  :  Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[DEBUG]  :  Writing [[com.hexaware.HospitalManagement.DTO.MessageDTO@2323fd8a, com.hexaware.HospitalManagement.DTO.Messag (truncated)...]
[DEBUG]  :  Completed 200 OK
[INFO]  :  Application shutdown requested.
[INFO]  :  Closing JPA EntityManagerFactory for persistence unit 'default'
[INFO]  :  HikariPool-1 - Shutdown initiated...
[INFO]  :  HikariPool-1 - Shutdown completed.
[INFO]  :  Starting HospitalManageSpringRestApplication using Java 21.0.6 with PID 18292 (D:\spring workspace\HospitalManage_SpringRest\target\classes started by admin in D:\spring workspace\HospitalManage_SpringRest)
[INFO]  :  No active profile set, falling back to 1 default profile: "default"
[INFO]  :  Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO]  :  Finished Spring Data repository scanning in 258 ms. Found 7 JPA repository interfaces.
[INFO]  :  Tomcat initialized with port 8080 (http)
[INFO]  :  Starting service [Tomcat]
[INFO]  :  Starting Servlet engine: [Apache Tomcat/10.1.40]
[INFO]  :  Initializing Spring embedded WebApplicationContext
[INFO]  :  Root WebApplicationContext: initialization completed in 6462 ms
[INFO]  :  HHH000204: Processing PersistenceUnitInfo [name: default]
[INFO]  :  HHH000412: Hibernate ORM core version 6.5.3.Final
[INFO]  :  HHH000026: Second-level cache disabled
[INFO]  :  No LoadTimeWeaver setup: ignoring JPA class transformer
[INFO]  :  HikariPool-1 - Starting...
[INFO]  :  HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@19e801b5
[INFO]  :  HikariPool-1 - Start completed.
[WARN]  :  HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
[INFO]  :  HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
[INFO]  :  Initialized JPA EntityManagerFactory for persistence unit 'default'
[INFO]  :  Hibernate is in classpath; If applicable, HQL parser will be used.
[INFO]  :  Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
[WARN]  :  Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider.
[WARN]  :  spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[DEBUG]  :  129 mappings in 'requestMappingHandlerMapping'
[DEBUG]  :  Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
[DEBUG]  :  Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
[DEBUG]  :  ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
[DEBUG]  :  ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice
[INFO]  :  Tomcat started on port 8080 (http) with context path '/'
[INFO]  :  Started HospitalManageSpringRestApplication in 23.614 seconds (process running for 32.704)
[INFO]  :  Application shutdown requested.
[INFO]  :  Closing JPA EntityManagerFactory for persistence unit 'default'
[INFO]  :  HikariPool-1 - Shutdown initiated...
[INFO]  :  HikariPool-1 - Shutdown completed.
[INFO]  :  Starting HospitalManageSpringRestApplication using Java 21.0.6 with PID 20252 (D:\spring workspace\HospitalManage_SpringRest\target\classes started by admin in D:\spring workspace\HospitalManage_SpringRest)
[INFO]  :  No active profile set, falling back to 1 default profile: "default"
[INFO]  :  Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO]  :  Finished Spring Data repository scanning in 163 ms. Found 7 JPA repository interfaces.
[INFO]  :  Tomcat initialized with port 8080 (http)
[INFO]  :  Starting service [Tomcat]
[INFO]  :  Starting Servlet engine: [Apache Tomcat/10.1.40]
[INFO]  :  Initializing Spring embedded WebApplicationContext
[INFO]  :  Root WebApplicationContext: initialization completed in 3229 ms
[INFO]  :  HHH000204: Processing PersistenceUnitInfo [name: default]
[INFO]  :  HHH000412: Hibernate ORM core version 6.5.3.Final
[INFO]  :  HHH000026: Second-level cache disabled
[INFO]  :  No LoadTimeWeaver setup: ignoring JPA class transformer
[INFO]  :  HikariPool-1 - Starting...
[INFO]  :  HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@61836cd9
[INFO]  :  HikariPool-1 - Start completed.
[WARN]  :  HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
[INFO]  :  HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
[INFO]  :  Initialized JPA EntityManagerFactory for persistence unit 'default'
[INFO]  :  Hibernate is in classpath; If applicable, HQL parser will be used.
[INFO]  :  Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
[WARN]  :  Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider.
[WARN]  :  spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[DEBUG]  :  129 mappings in 'requestMappingHandlerMapping'
[DEBUG]  :  Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
[DEBUG]  :  Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
[DEBUG]  :  ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
[DEBUG]  :  ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice
[INFO]  :  Tomcat started on port 8080 (http) with context path '/'
[INFO]  :  Started HospitalManageSpringRestApplication in 13.763 seconds (process running for 14.928)
[INFO]  :  Initializing Spring DispatcherServlet 'dispatcherServlet'
[INFO]  :  Initializing Servlet 'dispatcherServlet'
[DEBUG]  :  Detected StandardServletMultipartResolver
[DEBUG]  :  Detected AcceptHeaderLocaleResolver
[DEBUG]  :  Detected FixedThemeResolver
[DEBUG]  :  Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@5bddb619
[DEBUG]  :  Detected org.springframework.web.servlet.support.SessionFlashMapManager@6fad6743
[DEBUG]  :  enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
[INFO]  :  Completed initialization in 5 ms
[DEBUG]  :  Securing OPTIONS /api/doctors/getAll
[DEBUG]  :  Securing GET /api/doctors/getAll
[INFO]  :  Checking path for skipping JWT filter: /api/doctors/getAll
[INFO]  :  Skip JWT filter? false
[INFO]  :  JwtAuthFilter is processing the request: /api/doctors/getAll
[INFO]  :  Authorization header: Bearer eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiUEFUSUVOVCIsImlkIjozLCJzdWIiOiJzdXJlc2gucGF0aWVudEBnbWFpbC5jb20iLCJpYXQiOjE3NTAzOTUwNzgsImV4cCI6MTc1MDQ4MTQ3OH0.mNzw8u5CobFsO5nZ5wF_tPQVqUchdFgCCiJSMO3T48w
[INFO]  :  Extracted username: suresh.patient@gmail.com
[INFO]  :  Authenticated user: suresh.patient@gmail.com
[INFO]  :  Authorities: [ROLE_PATIENT]
[INFO]  :  Authenticated user: suresh.patient@gmail.com
[INFO]  :  Authorities: [ROLE_PATIENT]
[DEBUG]  :  Secured GET /api/doctors/getAll
[INFO]  :  Checking path for skipping JWT filter: /api/doctors/getAll
[INFO]  :  Skip JWT filter? false
[DEBUG]  :  GET "/api/doctors/getAll", parameters={}
[DEBUG]  :  Mapped to com.hexaware.HospitalManagement.restController.DoctorController#getAllDoctors()
[DEBUG]  :  Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[DEBUG]  :  Writing [[Doctor [doctorId=1, user=User [userId=6, name=ManojKumar, email=manoj.doctor@gmail.com, password=$2 (truncated)...]
[DEBUG]  :  Completed 200 OK
[DEBUG]  :  Securing OPTIONS /api/patients/byuserId/3
[DEBUG]  :  Securing GET /api/patients/byuserId/3
[INFO]  :  Checking path for skipping JWT filter: /api/patients/byuserId/3
[INFO]  :  Skip JWT filter? false
[INFO]  :  JwtAuthFilter is processing the request: /api/patients/byuserId/3
[INFO]  :  Authorization header: Bearer eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiUEFUSUVOVCIsImlkIjozLCJzdWIiOiJzdXJlc2gucGF0aWVudEBnbWFpbC5jb20iLCJpYXQiOjE3NTAzOTUwNzgsImV4cCI6MTc1MDQ4MTQ3OH0.mNzw8u5CobFsO5nZ5wF_tPQVqUchdFgCCiJSMO3T48w
[INFO]  :  Extracted username: suresh.patient@gmail.com
[INFO]  :  Authenticated user: suresh.patient@gmail.com
[INFO]  :  Authorities: [ROLE_PATIENT]
[INFO]  :  Authenticated user: suresh.patient@gmail.com
[INFO]  :  Authorities: [ROLE_PATIENT]
[DEBUG]  :  Secured GET /api/patients/byuserId/3
[INFO]  :  Checking path for skipping JWT filter: /api/patients/byuserId/3
[INFO]  :  Skip JWT filter? false
[DEBUG]  :  GET "/api/patients/byuserId/3", parameters={}
[DEBUG]  :  Mapped to com.hexaware.HospitalManagement.restController.PatientController#getPatientByUserId(Long)
[DEBUG]  :  Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[DEBUG]  :  Writing [Patient [patientId=3, user=User [userId=3, name=Suresh, email=suresh.patient@gmail.com, password=$2a (truncated)...]
[DEBUG]  :  Completed 200 OK
[DEBUG]  :  Securing OPTIONS /api/patients/messages/between/4/3
[DEBUG]  :  Securing GET /api/patients/messages/between/4/3
[INFO]  :  Checking path for skipping JWT filter: /api/patients/messages/between/4/3
[INFO]  :  Skip JWT filter? false
[INFO]  :  JwtAuthFilter is processing the request: /api/patients/messages/between/4/3
[INFO]  :  Authorization header: Bearer eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiUEFUSUVOVCIsImlkIjozLCJzdWIiOiJzdXJlc2gucGF0aWVudEBnbWFpbC5jb20iLCJpYXQiOjE3NTAzOTUwNzgsImV4cCI6MTc1MDQ4MTQ3OH0.mNzw8u5CobFsO5nZ5wF_tPQVqUchdFgCCiJSMO3T48w
[INFO]  :  Extracted username: suresh.patient@gmail.com
[INFO]  :  Authenticated user: suresh.patient@gmail.com
[INFO]  :  Authorities: [ROLE_PATIENT]
[INFO]  :  Authenticated user: suresh.patient@gmail.com
[INFO]  :  Authorities: [ROLE_PATIENT]
[DEBUG]  :  Secured GET /api/patients/messages/between/4/3
[INFO]  :  Checking path for skipping JWT filter: /api/patients/messages/between/4/3
[INFO]  :  Skip JWT filter? false
[DEBUG]  :  GET "/api/patients/messages/between/4/3", parameters={}
[DEBUG]  :  Mapped to com.hexaware.HospitalManagement.restController.PatientController#getMessagesBetweenDoctorAndPatient(int, int)
[INFO]  :  Fetching messages between doctorId: 4 and patientId: 3
[DEBUG]  :  HTTP GET http://localhost:8282/api/messages/messageBetween/doctor/4/patient/3
[DEBUG]  :  Accept=[application/json, application/*+json]
[INFO]  :  Credentials from SecurityContext: eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiUEFUSUVOVCIsImlkIjozLCJzdWIiOiJzdXJlc2gucGF0aWVudEBnbWFpbC5jb20iLCJpYXQiOjE3NTAzOTUwNzgsImV4cCI6MTc1MDQ4MTQ3OH0.mNzw8u5CobFsO5nZ5wF_tPQVqUchdFgCCiJSMO3T48w
[INFO]  :   Added token to header: Bearer eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiUEFUSUVOVCIsImlkIjozLCJzdWIiOiJzdXJlc2gucGF0aWVudEBnbWFpbC5jb20iLCJpYXQiOjE3NTAzOTUwNzgsImV4cCI6MTc1MDQ4MTQ3OH0.mNzw8u5CobFsO5nZ5wF_tPQVqUchdFgCCiJSMO3T48w
[DEBUG]  :  Response 200 OK
[DEBUG]  :  Reading to [com.hexaware.HospitalManagement.entity.Message[]]
[DEBUG]  :  Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[DEBUG]  :  Writing [[com.hexaware.HospitalManagement.DTO.MessageDTO@4e1f6e27, com.hexaware.HospitalManagement.DTO.Messag (truncated)...]
[DEBUG]  :  Completed 200 OK
[DEBUG]  :  Securing GET /api/doctors/getAll
[INFO]  :  Checking path for skipping JWT filter: /api/doctors/getAll
[INFO]  :  Skip JWT filter? false
[INFO]  :  JwtAuthFilter is processing the request: /api/doctors/getAll
[INFO]  :  Authorization header: Bearer eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiUEFUSUVOVCIsImlkIjozLCJzdWIiOiJzdXJlc2gucGF0aWVudEBnbWFpbC5jb20iLCJpYXQiOjE3NTAzOTUwNzgsImV4cCI6MTc1MDQ4MTQ3OH0.mNzw8u5CobFsO5nZ5wF_tPQVqUchdFgCCiJSMO3T48w
[INFO]  :  Extracted username: suresh.patient@gmail.com
[INFO]  :  Authenticated user: suresh.patient@gmail.com
[INFO]  :  Authorities: [ROLE_PATIENT]
[INFO]  :  Authenticated user: suresh.patient@gmail.com
[INFO]  :  Authorities: [ROLE_PATIENT]
[DEBUG]  :  Secured GET /api/doctors/getAll
[INFO]  :  Checking path for skipping JWT filter: /api/doctors/getAll
[INFO]  :  Skip JWT filter? false
[DEBUG]  :  GET "/api/doctors/getAll", parameters={}
[DEBUG]  :  Mapped to com.hexaware.HospitalManagement.restController.DoctorController#getAllDoctors()
[DEBUG]  :  Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[DEBUG]  :  Writing [[Doctor [doctorId=1, user=User [userId=6, name=ManojKumar, email=manoj.doctor@gmail.com, password=$2 (truncated)...]
[DEBUG]  :  Completed 200 OK
[INFO]  :  Application shutdown requested.
[INFO]  :  Closing JPA EntityManagerFactory for persistence unit 'default'
[INFO]  :  HikariPool-1 - Shutdown initiated...
[INFO]  :  HikariPool-1 - Shutdown completed.
[INFO]  :  Starting HospitalManageSpringRestApplication using Java 21.0.6 with PID 21116 (D:\spring workspace\HospitalManage_SpringRest\target\classes started by admin in D:\spring workspace\HospitalManage_SpringRest)
[INFO]  :  No active profile set, falling back to 1 default profile: "default"
[INFO]  :  Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO]  :  Finished Spring Data repository scanning in 77 ms. Found 7 JPA repository interfaces.
[INFO]  :  Tomcat initialized with port 8080 (http)
[INFO]  :  Starting service [Tomcat]
[INFO]  :  Starting Servlet engine: [Apache Tomcat/10.1.40]
[INFO]  :  Initializing Spring embedded WebApplicationContext
[INFO]  :  Root WebApplicationContext: initialization completed in 2978 ms
[INFO]  :  HHH000204: Processing PersistenceUnitInfo [name: default]
[INFO]  :  HHH000412: Hibernate ORM core version 6.5.3.Final
[INFO]  :  HHH000026: Second-level cache disabled
[INFO]  :  No LoadTimeWeaver setup: ignoring JPA class transformer
[INFO]  :  HikariPool-1 - Starting...
[INFO]  :  HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@1b632442
[INFO]  :  HikariPool-1 - Start completed.
[WARN]  :  HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
[INFO]  :  HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
[INFO]  :  Initialized JPA EntityManagerFactory for persistence unit 'default'
[INFO]  :  Hibernate is in classpath; If applicable, HQL parser will be used.
[INFO]  :  Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
[WARN]  :  Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider.
[WARN]  :  spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[DEBUG]  :  129 mappings in 'requestMappingHandlerMapping'
[DEBUG]  :  Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
[DEBUG]  :  Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
[DEBUG]  :  ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
[DEBUG]  :  ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice
[INFO]  :  Tomcat started on port 8080 (http) with context path '/'
[INFO]  :  Started HospitalManageSpringRestApplication in 12.725 seconds (process running for 13.706)
[INFO]  :  Initializing Spring DispatcherServlet 'dispatcherServlet'
[INFO]  :  Initializing Servlet 'dispatcherServlet'
[DEBUG]  :  Detected StandardServletMultipartResolver
[DEBUG]  :  Detected AcceptHeaderLocaleResolver
[DEBUG]  :  Detected FixedThemeResolver
[DEBUG]  :  Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@c3fd72
[DEBUG]  :  Detected org.springframework.web.servlet.support.SessionFlashMapManager@2411cf8b
[DEBUG]  :  enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
[INFO]  :  Completed initialization in 66 ms
[DEBUG]  :  Securing OPTIONS /api/users/login/authenticate
[DEBUG]  :  Securing POST /api/users/login/authenticate
[INFO]  :  Checking path for skipping JWT filter: /api/users/login/authenticate
[INFO]  :  Skip JWT filter? true
[DEBUG]  :  Set SecurityContextHolder to anonymous SecurityContext
[DEBUG]  :  Secured POST /api/users/login/authenticate
[INFO]  :  Checking path for skipping JWT filter: /api/users/login/authenticate
[INFO]  :  Skip JWT filter? true
[DEBUG]  :  POST "/api/users/login/authenticate", parameters={}
[DEBUG]  :  Mapped to com.hexaware.hospitalmanagement.restcontroller.AuthController#authenticateAndGetToken(AuthRequestDTO)
[DEBUG]  :  Read "application/json;charset=UTF-8" to [AuthRequestDTO(userName=neha.doctor@gmail.com, password=pass@123)]
[DEBUG]  :  Authenticated user
[INFO]  :  Token :eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiRE9DVE9SIiwiaWQiOjksInN1YiI6Im5laGEuZG9jdG9yQGdtYWlsLmNvbSIsImlhdCI6MTc1MDQxMDczOCwiZXhwIjoxNzUwNDk3MTM4fQ.N9WqwNMVl0Twxce7ra7WLwqUUNslc_-PpeOzYV5F958
[DEBUG]  :  Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[DEBUG]  :  Writing [{token=eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiRE9DVE9SIiwiaWQiOjksInN1YiI6Im5laGEuZG9jdG9yQGdtYWlsLmNvbSIs (truncated)...]
[DEBUG]  :  Completed 200 OK
[DEBUG]  :  Securing OPTIONS /api/patients/getall
[DEBUG]  :  Securing GET /api/patients/getall
[INFO]  :  Checking path for skipping JWT filter: /api/patients/getall
[INFO]  :  Skip JWT filter? false
[INFO]  :  JwtAuthFilter is processing the request: /api/patients/getall
[INFO]  :  Authorization header: Bearer eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiRE9DVE9SIiwiaWQiOjksInN1YiI6Im5laGEuZG9jdG9yQGdtYWlsLmNvbSIsImlhdCI6MTc1MDQxMDczOCwiZXhwIjoxNzUwNDk3MTM4fQ.N9WqwNMVl0Twxce7ra7WLwqUUNslc_-PpeOzYV5F958
[INFO]  :  Extracted username: neha.doctor@gmail.com
[INFO]  :  Authenticated user: neha.doctor@gmail.com
[INFO]  :  Authorities: [ROLE_DOCTOR]
[INFO]  :  Authenticated user: neha.doctor@gmail.com
[INFO]  :  Authorities: [ROLE_DOCTOR]
[DEBUG]  :  Secured GET /api/patients/getall
[INFO]  :  Checking path for skipping JWT filter: /api/patients/getall
[INFO]  :  Skip JWT filter? false
[DEBUG]  :  GET "/api/patients/getall", parameters={}
[DEBUG]  :  Mapped to com.hexaware.hospitalmanagement.restcontroller.PatientController#getAllPatients()
[DEBUG]  :  Authorizing method invocation ReflectiveMethodInvocation: public java.util.List com.hexaware.hospitalmanagement.restcontroller.PatientController.getAllPatients(); target is of class [com.hexaware.hospitalmanagement.restcontroller.PatientController]
[DEBUG]  :  Authorized method invocation ReflectiveMethodInvocation: public java.util.List com.hexaware.hospitalmanagement.restcontroller.PatientController.getAllPatients(); target is of class [com.hexaware.hospitalmanagement.restcontroller.PatientController]
[INFO]  :  Fetching all patients
[DEBUG]  :  Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[DEBUG]  :  Writing [[Patient [patientId=1, user=User [userId=1, name=Arvindkumar, email=arvind.patient@gmail.com, passwo (truncated)...]
[DEBUG]  :  Completed 200 OK
[DEBUG]  :  Securing OPTIONS /api/doctors/byuserId/9
[DEBUG]  :  Securing GET /api/doctors/byuserId/9
[INFO]  :  Checking path for skipping JWT filter: /api/doctors/byuserId/9
[INFO]  :  Skip JWT filter? false
[INFO]  :  JwtAuthFilter is processing the request: /api/doctors/byuserId/9
[INFO]  :  Authorization header: Bearer eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiRE9DVE9SIiwiaWQiOjksInN1YiI6Im5laGEuZG9jdG9yQGdtYWlsLmNvbSIsImlhdCI6MTc1MDQxMDczOCwiZXhwIjoxNzUwNDk3MTM4fQ.N9WqwNMVl0Twxce7ra7WLwqUUNslc_-PpeOzYV5F958
[INFO]  :  Extracted username: neha.doctor@gmail.com
[INFO]  :  Authenticated user: neha.doctor@gmail.com
[INFO]  :  Authorities: [ROLE_DOCTOR]
[INFO]  :  Authenticated user: neha.doctor@gmail.com
[INFO]  :  Authorities: [ROLE_DOCTOR]
[DEBUG]  :  Secured GET /api/doctors/byuserId/9
[INFO]  :  Checking path for skipping JWT filter: /api/doctors/byuserId/9
[INFO]  :  Skip JWT filter? false
[DEBUG]  :  GET "/api/doctors/byuserId/9", parameters={}
[DEBUG]  :  Mapped to com.hexaware.hospitalmanagement.restcontroller.DoctorController#getDoctorByUserId(Long)
[DEBUG]  :  Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[DEBUG]  :  Writing [Doctor [doctorId=4, user=User [userId=9, name=Neha, email=neha.doctor@gmail.com, password=$2a$10$eNF (truncated)...]
[DEBUG]  :  Completed 200 OK
[DEBUG]  :  Securing OPTIONS /api/doctors/messages/4/3
[DEBUG]  :  Securing GET /api/doctors/messages/4/3
[INFO]  :  Checking path for skipping JWT filter: /api/doctors/messages/4/3
[INFO]  :  Skip JWT filter? false
[INFO]  :  JwtAuthFilter is processing the request: /api/doctors/messages/4/3
[INFO]  :  Authorization header: Bearer eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiRE9DVE9SIiwiaWQiOjksInN1YiI6Im5laGEuZG9jdG9yQGdtYWlsLmNvbSIsImlhdCI6MTc1MDQxMDczOCwiZXhwIjoxNzUwNDk3MTM4fQ.N9WqwNMVl0Twxce7ra7WLwqUUNslc_-PpeOzYV5F958
[INFO]  :  Extracted username: neha.doctor@gmail.com
[INFO]  :  Authenticated user: neha.doctor@gmail.com
[INFO]  :  Authorities: [ROLE_DOCTOR]
[INFO]  :  Authenticated user: neha.doctor@gmail.com
[INFO]  :  Authorities: [ROLE_DOCTOR]
[DEBUG]  :  Secured GET /api/doctors/messages/4/3
[INFO]  :  Checking path for skipping JWT filter: /api/doctors/messages/4/3
[INFO]  :  Skip JWT filter? false
[DEBUG]  :  GET "/api/doctors/messages/4/3", parameters={}
[DEBUG]  :  Mapped to com.hexaware.hospitalmanagement.restcontroller.DoctorController#getMessagesBetweenDoctorAndPatient(int, int)
[DEBUG]  :  Authorizing method invocation ReflectiveMethodInvocation: public java.util.List com.hexaware.hospitalmanagement.restcontroller.DoctorController.getMessagesBetweenDoctorAndPatient(int,int); target is of class [com.hexaware.hospitalmanagement.restcontroller.DoctorController]
[DEBUG]  :  Authorized method invocation ReflectiveMethodInvocation: public java.util.List com.hexaware.hospitalmanagement.restcontroller.DoctorController.getMessagesBetweenDoctorAndPatient(int,int); target is of class [com.hexaware.hospitalmanagement.restcontroller.DoctorController]
[DEBUG]  :  HTTP GET http://localhost:8282/api/messages/messageBetween/doctor/4/patient/3
[DEBUG]  :  Accept=[application/json, application/*+json]
[INFO]  :  Credentials from SecurityContext: eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiRE9DVE9SIiwiaWQiOjksInN1YiI6Im5laGEuZG9jdG9yQGdtYWlsLmNvbSIsImlhdCI6MTc1MDQxMDczOCwiZXhwIjoxNzUwNDk3MTM4fQ.N9WqwNMVl0Twxce7ra7WLwqUUNslc_-PpeOzYV5F958
[INFO]  :   Added token to header: Bearer eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiRE9DVE9SIiwiaWQiOjksInN1YiI6Im5laGEuZG9jdG9yQGdtYWlsLmNvbSIsImlhdCI6MTc1MDQxMDczOCwiZXhwIjoxNzUwNDk3MTM4fQ.N9WqwNMVl0Twxce7ra7WLwqUUNslc_-PpeOzYV5F958
[DEBUG]  :  Response 200 OK
[DEBUG]  :  Reading to [com.hexaware.hospitalmanagement.entity.Message[]]
[DEBUG]  :  Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[DEBUG]  :  Writing [[com.hexaware.hospitalmanagement.DTO.MessageDTO@1d8e043e, com.hexaware.hospitalmanagement.DTO.Messag (truncated)...]
[DEBUG]  :  Completed 200 OK
[DEBUG]  :  Securing OPTIONS /api/doctors/sendMessage
[DEBUG]  :  Securing POST /api/doctors/sendMessage
[INFO]  :  Checking path for skipping JWT filter: /api/doctors/sendMessage
[INFO]  :  Skip JWT filter? false
[INFO]  :  JwtAuthFilter is processing the request: /api/doctors/sendMessage
[INFO]  :  Authorization header: Bearer eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiRE9DVE9SIiwiaWQiOjksInN1YiI6Im5laGEuZG9jdG9yQGdtYWlsLmNvbSIsImlhdCI6MTc1MDQxMDczOCwiZXhwIjoxNzUwNDk3MTM4fQ.N9WqwNMVl0Twxce7ra7WLwqUUNslc_-PpeOzYV5F958
[INFO]  :  Extracted username: neha.doctor@gmail.com
[INFO]  :  Authenticated user: neha.doctor@gmail.com
[INFO]  :  Authorities: [ROLE_DOCTOR]
[INFO]  :  Authenticated user: neha.doctor@gmail.com
[INFO]  :  Authorities: [ROLE_DOCTOR]
[DEBUG]  :  Secured POST /api/doctors/sendMessage
[INFO]  :  Checking path for skipping JWT filter: /api/doctors/sendMessage
[INFO]  :  Skip JWT filter? false
[DEBUG]  :  POST "/api/doctors/sendMessage", parameters={}
[DEBUG]  :  Mapped to com.hexaware.hospitalmanagement.restcontroller.DoctorController#sendMessage(MessageDTO)
[DEBUG]  :  Read "application/json;charset=UTF-8" to [com.hexaware.hospitalmanagement.DTO.MessageDTO@1c4a9030]
[DEBUG]  :  Authorizing method invocation ReflectiveMethodInvocation: public com.hexaware.hospitalmanagement.DTO.MessageDTO com.hexaware.hospitalmanagement.restcontroller.DoctorController.sendMessage(com.hexaware.hospitalmanagement.DTO.MessageDTO); target is of class [com.hexaware.hospitalmanagement.restcontroller.DoctorController]
[DEBUG]  :  Authorized method invocation ReflectiveMethodInvocation: public com.hexaware.hospitalmanagement.DTO.MessageDTO com.hexaware.hospitalmanagement.restcontroller.DoctorController.sendMessage(com.hexaware.hospitalmanagement.DTO.MessageDTO); target is of class [com.hexaware.hospitalmanagement.restcontroller.DoctorController]
[DEBUG]  :  HTTP POST http://localhost:8282/api/messages/send
[DEBUG]  :  Accept=[application/json, application/*+json]
[DEBUG]  :  Writing [com.hexaware.hospitalmanagement.DTO.MessageDTO@1c4a9030] with org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
[INFO]  :  Credentials from SecurityContext: eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiRE9DVE9SIiwiaWQiOjksInN1YiI6Im5laGEuZG9jdG9yQGdtYWlsLmNvbSIsImlhdCI6MTc1MDQxMDczOCwiZXhwIjoxNzUwNDk3MTM4fQ.N9WqwNMVl0Twxce7ra7WLwqUUNslc_-PpeOzYV5F958
[INFO]  :   Added token to header: Bearer eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiRE9DVE9SIiwiaWQiOjksInN1YiI6Im5laGEuZG9jdG9yQGdtYWlsLmNvbSIsImlhdCI6MTc1MDQxMDczOCwiZXhwIjoxNzUwNDk3MTM4fQ.N9WqwNMVl0Twxce7ra7WLwqUUNslc_-PpeOzYV5F958
[DEBUG]  :  Response 200 OK
[DEBUG]  :  Reading to [com.hexaware.hospitalmanagement.entity.Message]
[DEBUG]  :  Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[DEBUG]  :  Writing [com.hexaware.hospitalmanagement.DTO.MessageDTO@294f5d3]
[DEBUG]  :  Completed 200 OK
[DEBUG]  :  Securing GET /api/doctors/messages/4/3
[INFO]  :  Checking path for skipping JWT filter: /api/doctors/messages/4/3
[INFO]  :  Skip JWT filter? false
[INFO]  :  JwtAuthFilter is processing the request: /api/doctors/messages/4/3
[INFO]  :  Authorization header: Bearer eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiRE9DVE9SIiwiaWQiOjksInN1YiI6Im5laGEuZG9jdG9yQGdtYWlsLmNvbSIsImlhdCI6MTc1MDQxMDczOCwiZXhwIjoxNzUwNDk3MTM4fQ.N9WqwNMVl0Twxce7ra7WLwqUUNslc_-PpeOzYV5F958
[INFO]  :  Extracted username: neha.doctor@gmail.com
[INFO]  :  Authenticated user: neha.doctor@gmail.com
[INFO]  :  Authorities: [ROLE_DOCTOR]
[INFO]  :  Authenticated user: neha.doctor@gmail.com
[INFO]  :  Authorities: [ROLE_DOCTOR]
[DEBUG]  :  Secured GET /api/doctors/messages/4/3
[INFO]  :  Checking path for skipping JWT filter: /api/doctors/messages/4/3
[INFO]  :  Skip JWT filter? false
[DEBUG]  :  GET "/api/doctors/messages/4/3", parameters={}
[DEBUG]  :  Mapped to com.hexaware.hospitalmanagement.restcontroller.DoctorController#getMessagesBetweenDoctorAndPatient(int, int)
[DEBUG]  :  Authorizing method invocation ReflectiveMethodInvocation: public java.util.List com.hexaware.hospitalmanagement.restcontroller.DoctorController.getMessagesBetweenDoctorAndPatient(int,int); target is of class [com.hexaware.hospitalmanagement.restcontroller.DoctorController]
[DEBUG]  :  Authorized method invocation ReflectiveMethodInvocation: public java.util.List com.hexaware.hospitalmanagement.restcontroller.DoctorController.getMessagesBetweenDoctorAndPatient(int,int); target is of class [com.hexaware.hospitalmanagement.restcontroller.DoctorController]
[DEBUG]  :  HTTP GET http://localhost:8282/api/messages/messageBetween/doctor/4/patient/3
[DEBUG]  :  Accept=[application/json, application/*+json]
[INFO]  :  Credentials from SecurityContext: eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiRE9DVE9SIiwiaWQiOjksInN1YiI6Im5laGEuZG9jdG9yQGdtYWlsLmNvbSIsImlhdCI6MTc1MDQxMDczOCwiZXhwIjoxNzUwNDk3MTM4fQ.N9WqwNMVl0Twxce7ra7WLwqUUNslc_-PpeOzYV5F958
[INFO]  :   Added token to header: Bearer eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiRE9DVE9SIiwiaWQiOjksInN1YiI6Im5laGEuZG9jdG9yQGdtYWlsLmNvbSIsImlhdCI6MTc1MDQxMDczOCwiZXhwIjoxNzUwNDk3MTM4fQ.N9WqwNMVl0Twxce7ra7WLwqUUNslc_-PpeOzYV5F958
[DEBUG]  :  Response 200 OK
[DEBUG]  :  Reading to [com.hexaware.hospitalmanagement.entity.Message[]]
[DEBUG]  :  Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[DEBUG]  :  Writing [[com.hexaware.hospitalmanagement.DTO.MessageDTO@225ce5f7, com.hexaware.hospitalmanagement.DTO.Messag (truncated)...]
[DEBUG]  :  Completed 200 OK
[DEBUG]  :  Securing GET /api/patients/getall
[INFO]  :  Checking path for skipping JWT filter: /api/patients/getall
[INFO]  :  Skip JWT filter? false
[INFO]  :  JwtAuthFilter is processing the request: /api/patients/getall
[INFO]  :  Authorization header: Bearer eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiRE9DVE9SIiwiaWQiOjksInN1YiI6Im5laGEuZG9jdG9yQGdtYWlsLmNvbSIsImlhdCI6MTc1MDQxMDczOCwiZXhwIjoxNzUwNDk3MTM4fQ.N9WqwNMVl0Twxce7ra7WLwqUUNslc_-PpeOzYV5F958
[INFO]  :  Extracted username: neha.doctor@gmail.com
[INFO]  :  Authenticated user: neha.doctor@gmail.com
[INFO]  :  Authorities: [ROLE_DOCTOR]
[INFO]  :  Authenticated user: neha.doctor@gmail.com
[INFO]  :  Authorities: [ROLE_DOCTOR]
[DEBUG]  :  Secured GET /api/patients/getall
[INFO]  :  Checking path for skipping JWT filter: /api/patients/getall
[INFO]  :  Skip JWT filter? false
[DEBUG]  :  GET "/api/patients/getall", parameters={}
[DEBUG]  :  Mapped to com.hexaware.hospitalmanagement.restcontroller.PatientController#getAllPatients()
[DEBUG]  :  Authorizing method invocation ReflectiveMethodInvocation: public java.util.List com.hexaware.hospitalmanagement.restcontroller.PatientController.getAllPatients(); target is of class [com.hexaware.hospitalmanagement.restcontroller.PatientController]
[DEBUG]  :  Authorized method invocation ReflectiveMethodInvocation: public java.util.List com.hexaware.hospitalmanagement.restcontroller.PatientController.getAllPatients(); target is of class [com.hexaware.hospitalmanagement.restcontroller.PatientController]
[INFO]  :  Fetching all patients
[DEBUG]  :  Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[DEBUG]  :  Writing [[Patient [patientId=1, user=User [userId=1, name=Arvindkumar, email=arvind.patient@gmail.com, passwo (truncated)...]
[DEBUG]  :  Completed 200 OK
[DEBUG]  :  Securing GET /api/doctors/byuserId/9
[INFO]  :  Checking path for skipping JWT filter: /api/doctors/byuserId/9
[INFO]  :  Skip JWT filter? false
[INFO]  :  JwtAuthFilter is processing the request: /api/doctors/byuserId/9
[INFO]  :  Authorization header: Bearer eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiRE9DVE9SIiwiaWQiOjksInN1YiI6Im5laGEuZG9jdG9yQGdtYWlsLmNvbSIsImlhdCI6MTc1MDQxMDczOCwiZXhwIjoxNzUwNDk3MTM4fQ.N9WqwNMVl0Twxce7ra7WLwqUUNslc_-PpeOzYV5F958
[INFO]  :  Extracted username: neha.doctor@gmail.com
[INFO]  :  Authenticated user: neha.doctor@gmail.com
[INFO]  :  Authorities: [ROLE_DOCTOR]
[INFO]  :  Authenticated user: neha.doctor@gmail.com
[INFO]  :  Authorities: [ROLE_DOCTOR]
[DEBUG]  :  Secured GET /api/doctors/byuserId/9
[INFO]  :  Checking path for skipping JWT filter: /api/doctors/byuserId/9
[INFO]  :  Skip JWT filter? false
[DEBUG]  :  GET "/api/doctors/byuserId/9", parameters={}
[DEBUG]  :  Mapped to com.hexaware.hospitalmanagement.restcontroller.DoctorController#getDoctorByUserId(Long)
[DEBUG]  :  Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[DEBUG]  :  Writing [Doctor [doctorId=4, user=User [userId=9, name=Neha, email=neha.doctor@gmail.com, password=$2a$10$eNF (truncated)...]
[DEBUG]  :  Completed 200 OK
[DEBUG]  :  Securing OPTIONS /api/appointments/doctor/4
[DEBUG]  :  Securing GET /api/appointments/doctor/4
[INFO]  :  Checking path for skipping JWT filter: /api/appointments/doctor/4
[INFO]  :  Skip JWT filter? false
[INFO]  :  JwtAuthFilter is processing the request: /api/appointments/doctor/4
[INFO]  :  Authorization header: Bearer eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiRE9DVE9SIiwiaWQiOjksInN1YiI6Im5laGEuZG9jdG9yQGdtYWlsLmNvbSIsImlhdCI6MTc1MDQxMDczOCwiZXhwIjoxNzUwNDk3MTM4fQ.N9WqwNMVl0Twxce7ra7WLwqUUNslc_-PpeOzYV5F958
[INFO]  :  Extracted username: neha.doctor@gmail.com
[INFO]  :  Authenticated user: neha.doctor@gmail.com
[INFO]  :  Authorities: [ROLE_DOCTOR]
[INFO]  :  Authenticated user: neha.doctor@gmail.com
[INFO]  :  Authorities: [ROLE_DOCTOR]
[DEBUG]  :  Secured GET /api/appointments/doctor/4
[INFO]  :  Checking path for skipping JWT filter: /api/appointments/doctor/4
[INFO]  :  Skip JWT filter? false
[DEBUG]  :  GET "/api/appointments/doctor/4", parameters={}
[DEBUG]  :  Mapped to com.hexaware.hospitalmanagement.restcontroller.AppointmentController#getAppointmentsByDoctorId(Long)
[INFO]  :  Fetching appointments for doctorId: 4
[DEBUG]  :  Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[DEBUG]  :  Writing [[Appointment [appointmentId=12, patient=Patient [patientId=12, user=User [userId=38, name=Renuka, em (truncated)...]
[DEBUG]  :  Completed 200 OK
[DEBUG]  :  Securing POST /api/users/login/authenticate
[INFO]  :  Checking path for skipping JWT filter: /api/users/login/authenticate
[INFO]  :  Skip JWT filter? true
[DEBUG]  :  Set SecurityContextHolder to anonymous SecurityContext
[DEBUG]  :  Secured POST /api/users/login/authenticate
[INFO]  :  Checking path for skipping JWT filter: /api/users/login/authenticate
[INFO]  :  Skip JWT filter? true
[DEBUG]  :  POST "/api/users/login/authenticate", parameters={}
[DEBUG]  :  Mapped to com.hexaware.hospitalmanagement.restcontroller.AuthController#authenticateAndGetToken(AuthRequestDTO)
[DEBUG]  :  Read "application/json;charset=UTF-8" to [AuthRequestDTO(userName=suresh.patient@gmail.com, password=pass@12)]
[DEBUG]  :  Failed to authenticate since password does not match stored value
[DEBUG]  :  Failed to complete request: org.springframework.security.authentication.BadCredentialsException: Bad credentials
[DEBUG]  :  Pre-authenticated entry point called. Rejecting access
[DEBUG]  :  Securing POST /error
[DEBUG]  :  Secured POST /error
[DEBUG]  :  "ERROR" dispatch for POST "/error", parameters={}
[DEBUG]  :  Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
[DEBUG]  :  Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[DEBUG]  :  Writing [{timestamp=Fri Jun 20 14:43:46 IST 2025, status=403, error=Forbidden, message=Access Denied, path=/a (truncated)...]
[DEBUG]  :  Exiting from "ERROR" dispatch, status 403
[DEBUG]  :  Set SecurityContextHolder to anonymous SecurityContext
[DEBUG]  :  Securing POST /api/users/login/authenticate
[INFO]  :  Checking path for skipping JWT filter: /api/users/login/authenticate
[INFO]  :  Skip JWT filter? true
[DEBUG]  :  Set SecurityContextHolder to anonymous SecurityContext
[DEBUG]  :  Secured POST /api/users/login/authenticate
[INFO]  :  Checking path for skipping JWT filter: /api/users/login/authenticate
[INFO]  :  Skip JWT filter? true
[DEBUG]  :  POST "/api/users/login/authenticate", parameters={}
[DEBUG]  :  Mapped to com.hexaware.hospitalmanagement.restcontroller.AuthController#authenticateAndGetToken(AuthRequestDTO)
[DEBUG]  :  Read "application/json;charset=UTF-8" to [AuthRequestDTO(userName=suresh.patient@gmail.com, password=pass@123)]
[DEBUG]  :  Authenticated user
[INFO]  :  Token :eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiUEFUSUVOVCIsImlkIjozLCJzdWIiOiJzdXJlc2gucGF0aWVudEBnbWFpbC5jb20iLCJpYXQiOjE3NTA0MTA4MzQsImV4cCI6MTc1MDQ5NzIzNH0.LPE1DvKE0ae6rS1UM86U4IGcbyAiTgRPebJkJSWntuk
[DEBUG]  :  Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[DEBUG]  :  Writing [{token=eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiUEFUSUVOVCIsImlkIjozLCJzdWIiOiJzdXJlc2gucGF0aWVudEBnbWFpbC5j (truncated)...]
[DEBUG]  :  Completed 200 OK
[DEBUG]  :  Securing OPTIONS /api/patients/byuserId/3
[DEBUG]  :  Securing GET /api/patients/byuserId/3
[INFO]  :  Checking path for skipping JWT filter: /api/patients/byuserId/3
[INFO]  :  Skip JWT filter? false
[INFO]  :  JwtAuthFilter is processing the request: /api/patients/byuserId/3
[INFO]  :  Authorization header: Bearer eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiUEFUSUVOVCIsImlkIjozLCJzdWIiOiJzdXJlc2gucGF0aWVudEBnbWFpbC5jb20iLCJpYXQiOjE3NTA0MTA4MzQsImV4cCI6MTc1MDQ5NzIzNH0.LPE1DvKE0ae6rS1UM86U4IGcbyAiTgRPebJkJSWntuk
[INFO]  :  Extracted username: suresh.patient@gmail.com
[INFO]  :  Authenticated user: suresh.patient@gmail.com
[INFO]  :  Authorities: [ROLE_PATIENT]
[INFO]  :  Authenticated user: suresh.patient@gmail.com
[INFO]  :  Authorities: [ROLE_PATIENT]
[DEBUG]  :  Secured GET /api/patients/byuserId/3
[INFO]  :  Checking path for skipping JWT filter: /api/patients/byuserId/3
[INFO]  :  Skip JWT filter? false
[DEBUG]  :  GET "/api/patients/byuserId/3", parameters={}
[DEBUG]  :  Mapped to com.hexaware.hospitalmanagement.restcontroller.PatientController#getPatientByUserId(Long)
[DEBUG]  :  Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[DEBUG]  :  Writing [Patient [patientId=3, user=User [userId=3, name=Suresh, email=suresh.patient@gmail.com, password=$2a (truncated)...]
[DEBUG]  :  Completed 200 OK
[DEBUG]  :  Securing GET /api/patients/byuserId/3
[INFO]  :  Checking path for skipping JWT filter: /api/patients/byuserId/3
[INFO]  :  Skip JWT filter? false
[INFO]  :  JwtAuthFilter is processing the request: /api/patients/byuserId/3
[INFO]  :  Authorization header: Bearer eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiUEFUSUVOVCIsImlkIjozLCJzdWIiOiJzdXJlc2gucGF0aWVudEBnbWFpbC5jb20iLCJpYXQiOjE3NTA0MTA4MzQsImV4cCI6MTc1MDQ5NzIzNH0.LPE1DvKE0ae6rS1UM86U4IGcbyAiTgRPebJkJSWntuk
[INFO]  :  Extracted username: suresh.patient@gmail.com
[INFO]  :  Authenticated user: suresh.patient@gmail.com
[INFO]  :  Authorities: [ROLE_PATIENT]
[INFO]  :  Authenticated user: suresh.patient@gmail.com
[INFO]  :  Authorities: [ROLE_PATIENT]
[DEBUG]  :  Secured GET /api/patients/byuserId/3
[INFO]  :  Checking path for skipping JWT filter: /api/patients/byuserId/3
[INFO]  :  Skip JWT filter? false
[DEBUG]  :  GET "/api/patients/byuserId/3", parameters={}
[DEBUG]  :  Mapped to com.hexaware.hospitalmanagement.restcontroller.PatientController#getPatientByUserId(Long)
[DEBUG]  :  Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[DEBUG]  :  Writing [Patient [patientId=3, user=User [userId=3, name=Suresh, email=suresh.patient@gmail.com, password=$2a (truncated)...]
[DEBUG]  :  Completed 200 OK
[DEBUG]  :  Securing OPTIONS /api/appointments/patient/3
[DEBUG]  :  Securing GET /api/appointments/patient/3
[INFO]  :  Checking path for skipping JWT filter: /api/appointments/patient/3
[INFO]  :  Skip JWT filter? false
[INFO]  :  JwtAuthFilter is processing the request: /api/appointments/patient/3
[INFO]  :  Authorization header: Bearer eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiUEFUSUVOVCIsImlkIjozLCJzdWIiOiJzdXJlc2gucGF0aWVudEBnbWFpbC5jb20iLCJpYXQiOjE3NTA0MTA4MzQsImV4cCI6MTc1MDQ5NzIzNH0.LPE1DvKE0ae6rS1UM86U4IGcbyAiTgRPebJkJSWntuk
[INFO]  :  Extracted username: suresh.patient@gmail.com
[INFO]  :  Authenticated user: suresh.patient@gmail.com
[INFO]  :  Authorities: [ROLE_PATIENT]
[INFO]  :  Authenticated user: suresh.patient@gmail.com
[INFO]  :  Authorities: [ROLE_PATIENT]
[DEBUG]  :  Secured GET /api/appointments/patient/3
[INFO]  :  Checking path for skipping JWT filter: /api/appointments/patient/3
[INFO]  :  Skip JWT filter? false
[DEBUG]  :  GET "/api/appointments/patient/3", parameters={}
[DEBUG]  :  Mapped to com.hexaware.hospitalmanagement.restcontroller.AppointmentController#getAppointmentsByPatientId(Long)
[INFO]  :  Fetching appointments for patientId: 3
[DEBUG]  :  Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[DEBUG]  :  Writing [[Appointment [appointmentId=13, patient=Patient [patientId=3, user=User [userId=3, name=Suresh, emai (truncated)...]
[DEBUG]  :  Completed 200 OK
[DEBUG]  :  Securing GET /api/patients/byuserId/3
[INFO]  :  Checking path for skipping JWT filter: /api/patients/byuserId/3
[INFO]  :  Skip JWT filter? false
[INFO]  :  JwtAuthFilter is processing the request: /api/patients/byuserId/3
[INFO]  :  Authorization header: Bearer eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiUEFUSUVOVCIsImlkIjozLCJzdWIiOiJzdXJlc2gucGF0aWVudEBnbWFpbC5jb20iLCJpYXQiOjE3NTA0MTA4MzQsImV4cCI6MTc1MDQ5NzIzNH0.LPE1DvKE0ae6rS1UM86U4IGcbyAiTgRPebJkJSWntuk
[INFO]  :  Extracted username: suresh.patient@gmail.com
[INFO]  :  Authenticated user: suresh.patient@gmail.com
[INFO]  :  Authorities: [ROLE_PATIENT]
[INFO]  :  Authenticated user: suresh.patient@gmail.com
[INFO]  :  Authorities: [ROLE_PATIENT]
[DEBUG]  :  Secured GET /api/patients/byuserId/3
[INFO]  :  Checking path for skipping JWT filter: /api/patients/byuserId/3
[INFO]  :  Skip JWT filter? false
[DEBUG]  :  GET "/api/patients/byuserId/3", parameters={}
[DEBUG]  :  Mapped to com.hexaware.hospitalmanagement.restcontroller.PatientController#getPatientByUserId(Long)
[DEBUG]  :  Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[DEBUG]  :  Writing [Patient [patientId=3, user=User [userId=3, name=Suresh, email=suresh.patient@gmail.com, password=$2a (truncated)...]
[DEBUG]  :  Completed 200 OK
[DEBUG]  :  Securing POST /api/users/login/authenticate
[INFO]  :  Checking path for skipping JWT filter: /api/users/login/authenticate
[INFO]  :  Skip JWT filter? true
[DEBUG]  :  Set SecurityContextHolder to anonymous SecurityContext
[DEBUG]  :  Secured POST /api/users/login/authenticate
[INFO]  :  Checking path for skipping JWT filter: /api/users/login/authenticate
[INFO]  :  Skip JWT filter? true
[DEBUG]  :  POST "/api/users/login/authenticate", parameters={}
[DEBUG]  :  Mapped to com.hexaware.hospitalmanagement.restcontroller.AuthController#authenticateAndGetToken(AuthRequestDTO)
[DEBUG]  :  Read "application/json;charset=UTF-8" to [AuthRequestDTO(userName=neela.patient@gmail.com, password=pass@123)]
[DEBUG]  :  Authenticated user
[INFO]  :  Token :eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiUEFUSUVOVCIsImlkIjoyLCJzdWIiOiJuZWVsYS5wYXRpZW50QGdtYWlsLmNvbSIsImlhdCI6MTc1MDQxMDg2NiwiZXhwIjoxNzUwNDk3MjY2fQ.8s4theali_M3DQuz2h5IDHae40jmMXhIezyg0OUvcOI
[DEBUG]  :  Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[DEBUG]  :  Writing [{token=eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiUEFUSUVOVCIsImlkIjoyLCJzdWIiOiJuZWVsYS5wYXRpZW50QGdtYWlsLmNv (truncated)...]
[DEBUG]  :  Completed 200 OK
[DEBUG]  :  Securing OPTIONS /api/patients/byuserId/2
[DEBUG]  :  Securing GET /api/patients/byuserId/2
[INFO]  :  Checking path for skipping JWT filter: /api/patients/byuserId/2
[INFO]  :  Skip JWT filter? false
[INFO]  :  JwtAuthFilter is processing the request: /api/patients/byuserId/2
[INFO]  :  Authorization header: Bearer eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiUEFUSUVOVCIsImlkIjoyLCJzdWIiOiJuZWVsYS5wYXRpZW50QGdtYWlsLmNvbSIsImlhdCI6MTc1MDQxMDg2NiwiZXhwIjoxNzUwNDk3MjY2fQ.8s4theali_M3DQuz2h5IDHae40jmMXhIezyg0OUvcOI
[INFO]  :  Extracted username: neela.patient@gmail.com
[INFO]  :  Authenticated user: neela.patient@gmail.com
[INFO]  :  Authorities: [ROLE_PATIENT]
[INFO]  :  Authenticated user: neela.patient@gmail.com
[INFO]  :  Authorities: [ROLE_PATIENT]
[DEBUG]  :  Secured GET /api/patients/byuserId/2
[INFO]  :  Checking path for skipping JWT filter: /api/patients/byuserId/2
[INFO]  :  Skip JWT filter? false
[DEBUG]  :  GET "/api/patients/byuserId/2", parameters={}
[DEBUG]  :  Mapped to com.hexaware.hospitalmanagement.restcontroller.PatientController#getPatientByUserId(Long)
[DEBUG]  :  Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[DEBUG]  :  Writing [Patient [patientId=2, user=User [userId=2, name=Neelavathi, email=neela.patient@gmail.com, password= (truncated)...]
[DEBUG]  :  Completed 200 OK
[DEBUG]  :  Securing OPTIONS /api/doctors/getAll
[DEBUG]  :  Securing GET /api/patients/byuserId/2
[INFO]  :  Checking path for skipping JWT filter: /api/patients/byuserId/2
[INFO]  :  Skip JWT filter? false
[INFO]  :  JwtAuthFilter is processing the request: /api/patients/byuserId/2
[INFO]  :  Authorization header: Bearer eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiUEFUSUVOVCIsImlkIjoyLCJzdWIiOiJuZWVsYS5wYXRpZW50QGdtYWlsLmNvbSIsImlhdCI6MTc1MDQxMDg2NiwiZXhwIjoxNzUwNDk3MjY2fQ.8s4theali_M3DQuz2h5IDHae40jmMXhIezyg0OUvcOI
[DEBUG]  :  Securing GET /api/doctors/getAll
[INFO]  :  Checking path for skipping JWT filter: /api/doctors/getAll
[INFO]  :  Skip JWT filter? false
[INFO]  :  JwtAuthFilter is processing the request: /api/doctors/getAll
[INFO]  :  Authorization header: Bearer eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiUEFUSUVOVCIsImlkIjoyLCJzdWIiOiJuZWVsYS5wYXRpZW50QGdtYWlsLmNvbSIsImlhdCI6MTc1MDQxMDg2NiwiZXhwIjoxNzUwNDk3MjY2fQ.8s4theali_M3DQuz2h5IDHae40jmMXhIezyg0OUvcOI
[INFO]  :  Extracted username: neela.patient@gmail.com
[INFO]  :  Extracted username: neela.patient@gmail.com
[INFO]  :  Authenticated user: neela.patient@gmail.com
[INFO]  :  Authorities: [ROLE_PATIENT]
[INFO]  :  Authenticated user: neela.patient@gmail.com
[INFO]  :  Authorities: [ROLE_PATIENT]
[DEBUG]  :  Secured GET /api/patients/byuserId/2
[INFO]  :  Checking path for skipping JWT filter: /api/patients/byuserId/2
[INFO]  :  Skip JWT filter? false
[DEBUG]  :  GET "/api/patients/byuserId/2", parameters={}
[DEBUG]  :  Mapped to com.hexaware.hospitalmanagement.restcontroller.PatientController#getPatientByUserId(Long)
[DEBUG]  :  Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[DEBUG]  :  Writing [Patient [patientId=2, user=User [userId=2, name=Neelavathi, email=neela.patient@gmail.com, password= (truncated)...]
[INFO]  :  Authenticated user: neela.patient@gmail.com
[INFO]  :  Authorities: [ROLE_PATIENT]
[INFO]  :  Authenticated user: neela.patient@gmail.com
[INFO]  :  Authorities: [ROLE_PATIENT]
[DEBUG]  :  Secured GET /api/doctors/getAll
[INFO]  :  Checking path for skipping JWT filter: /api/doctors/getAll
[INFO]  :  Skip JWT filter? false
[DEBUG]  :  GET "/api/doctors/getAll", parameters={}
[DEBUG]  :  Mapped to com.hexaware.hospitalmanagement.restcontroller.DoctorController#getAllDoctors()
[DEBUG]  :  Completed 200 OK
[DEBUG]  :  Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[DEBUG]  :  Writing [[Doctor [doctorId=1, user=User [userId=6, name=ManojKumar, email=manoj.doctor@gmail.com, password=$2 (truncated)...]
[DEBUG]  :  Completed 200 OK
[DEBUG]  :  Securing GET /api/patients/byuserId/2
[INFO]  :  Checking path for skipping JWT filter: /api/patients/byuserId/2
[INFO]  :  Skip JWT filter? false
[INFO]  :  JwtAuthFilter is processing the request: /api/patients/byuserId/2
[INFO]  :  Authorization header: Bearer eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiUEFUSUVOVCIsImlkIjoyLCJzdWIiOiJuZWVsYS5wYXRpZW50QGdtYWlsLmNvbSIsImlhdCI6MTc1MDQxMDg2NiwiZXhwIjoxNzUwNDk3MjY2fQ.8s4theali_M3DQuz2h5IDHae40jmMXhIezyg0OUvcOI
[INFO]  :  Extracted username: neela.patient@gmail.com
[INFO]  :  Authenticated user: neela.patient@gmail.com
[INFO]  :  Authorities: [ROLE_PATIENT]
[INFO]  :  Authenticated user: neela.patient@gmail.com
[INFO]  :  Authorities: [ROLE_PATIENT]
[DEBUG]  :  Secured GET /api/patients/byuserId/2
[INFO]  :  Checking path for skipping JWT filter: /api/patients/byuserId/2
[INFO]  :  Skip JWT filter? false
[DEBUG]  :  GET "/api/patients/byuserId/2", parameters={}
[DEBUG]  :  Mapped to com.hexaware.hospitalmanagement.restcontroller.PatientController#getPatientByUserId(Long)
[DEBUG]  :  Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[DEBUG]  :  Writing [Patient [patientId=2, user=User [userId=2, name=Neelavathi, email=neela.patient@gmail.com, password= (truncated)...]
[DEBUG]  :  Completed 200 OK
[DEBUG]  :  Securing GET /api/patients/byuserId/2
[INFO]  :  Checking path for skipping JWT filter: /api/patients/byuserId/2
[INFO]  :  Skip JWT filter? false
[INFO]  :  JwtAuthFilter is processing the request: /api/patients/byuserId/2
[INFO]  :  Authorization header: Bearer eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiUEFUSUVOVCIsImlkIjoyLCJzdWIiOiJuZWVsYS5wYXRpZW50QGdtYWlsLmNvbSIsImlhdCI6MTc1MDQxMDg2NiwiZXhwIjoxNzUwNDk3MjY2fQ.8s4theali_M3DQuz2h5IDHae40jmMXhIezyg0OUvcOI
[INFO]  :  Extracted username: neela.patient@gmail.com
[INFO]  :  Authenticated user: neela.patient@gmail.com
[INFO]  :  Authorities: [ROLE_PATIENT]
[INFO]  :  Authenticated user: neela.patient@gmail.com
[INFO]  :  Authorities: [ROLE_PATIENT]
[DEBUG]  :  Secured GET /api/patients/byuserId/2
[INFO]  :  Checking path for skipping JWT filter: /api/patients/byuserId/2
[INFO]  :  Skip JWT filter? false
[DEBUG]  :  GET "/api/patients/byuserId/2", parameters={}
[DEBUG]  :  Mapped to com.hexaware.hospitalmanagement.restcontroller.PatientController#getPatientByUserId(Long)
[DEBUG]  :  Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[DEBUG]  :  Writing [Patient [patientId=2, user=User [userId=2, name=Neelavathi, email=neela.patient@gmail.com, password= (truncated)...]
[DEBUG]  :  Completed 200 OK
[DEBUG]  :  Securing OPTIONS /api/appointments/patient/2
[DEBUG]  :  Securing GET /api/appointments/patient/2
[INFO]  :  Checking path for skipping JWT filter: /api/appointments/patient/2
[INFO]  :  Skip JWT filter? false
[INFO]  :  JwtAuthFilter is processing the request: /api/appointments/patient/2
[INFO]  :  Authorization header: Bearer eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiUEFUSUVOVCIsImlkIjoyLCJzdWIiOiJuZWVsYS5wYXRpZW50QGdtYWlsLmNvbSIsImlhdCI6MTc1MDQxMDg2NiwiZXhwIjoxNzUwNDk3MjY2fQ.8s4theali_M3DQuz2h5IDHae40jmMXhIezyg0OUvcOI
[INFO]  :  Extracted username: neela.patient@gmail.com
[INFO]  :  Authenticated user: neela.patient@gmail.com
[INFO]  :  Authorities: [ROLE_PATIENT]
[INFO]  :  Authenticated user: neela.patient@gmail.com
[INFO]  :  Authorities: [ROLE_PATIENT]
[DEBUG]  :  Secured GET /api/appointments/patient/2
[INFO]  :  Checking path for skipping JWT filter: /api/appointments/patient/2
[INFO]  :  Skip JWT filter? false
[DEBUG]  :  GET "/api/appointments/patient/2", parameters={}
[DEBUG]  :  Mapped to com.hexaware.hospitalmanagement.restcontroller.AppointmentController#getAppointmentsByPatientId(Long)
[INFO]  :  Fetching appointments for patientId: 2
[DEBUG]  :  Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[DEBUG]  :  Writing [[Appointment [appointmentId=2, patient=Patient [patientId=2, user=User [userId=2, name=Neelavathi, e (truncated)...]
[DEBUG]  :  Completed 200 OK
[DEBUG]  :  Securing OPTIONS /api/appointments/cancel/15
[DEBUG]  :  Securing PUT /api/appointments/cancel/15
[INFO]  :  Checking path for skipping JWT filter: /api/appointments/cancel/15
[INFO]  :  Skip JWT filter? false
[INFO]  :  JwtAuthFilter is processing the request: /api/appointments/cancel/15
[INFO]  :  Authorization header: Bearer eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiUEFUSUVOVCIsImlkIjoyLCJzdWIiOiJuZWVsYS5wYXRpZW50QGdtYWlsLmNvbSIsImlhdCI6MTc1MDQxMDg2NiwiZXhwIjoxNzUwNDk3MjY2fQ.8s4theali_M3DQuz2h5IDHae40jmMXhIezyg0OUvcOI
[INFO]  :  Extracted username: neela.patient@gmail.com
[INFO]  :  Authenticated user: neela.patient@gmail.com
[INFO]  :  Authorities: [ROLE_PATIENT]
[INFO]  :  Authenticated user: neela.patient@gmail.com
[INFO]  :  Authorities: [ROLE_PATIENT]
[DEBUG]  :  Secured PUT /api/appointments/cancel/15
[INFO]  :  Checking path for skipping JWT filter: /api/appointments/cancel/15
[INFO]  :  Skip JWT filter? false
[DEBUG]  :  PUT "/api/appointments/cancel/15", parameters={}
[DEBUG]  :  Mapped to com.hexaware.hospitalmanagement.restcontroller.AppointmentController#cancelAppointment(Long)
[INFO]  :  Cancelling appointment id: 15
[DEBUG]  :  Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[DEBUG]  :  Writing [Appointment [appointmentId=15, patient=Patient [patientId=2, user=User [userId=2, name=Neelavathi, e (truncated)...]
[DEBUG]  :  Completed 200 OK
[DEBUG]  :  Securing GET /api/appointments/patient/2
[INFO]  :  Checking path for skipping JWT filter: /api/appointments/patient/2
[INFO]  :  Skip JWT filter? false
[INFO]  :  JwtAuthFilter is processing the request: /api/appointments/patient/2
[INFO]  :  Authorization header: Bearer eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiUEFUSUVOVCIsImlkIjoyLCJzdWIiOiJuZWVsYS5wYXRpZW50QGdtYWlsLmNvbSIsImlhdCI6MTc1MDQxMDg2NiwiZXhwIjoxNzUwNDk3MjY2fQ.8s4theali_M3DQuz2h5IDHae40jmMXhIezyg0OUvcOI
[INFO]  :  Extracted username: neela.patient@gmail.com
[INFO]  :  Authenticated user: neela.patient@gmail.com
[INFO]  :  Authorities: [ROLE_PATIENT]
[INFO]  :  Authenticated user: neela.patient@gmail.com
[INFO]  :  Authorities: [ROLE_PATIENT]
[DEBUG]  :  Secured GET /api/appointments/patient/2
[INFO]  :  Checking path for skipping JWT filter: /api/appointments/patient/2
[INFO]  :  Skip JWT filter? false
[DEBUG]  :  GET "/api/appointments/patient/2", parameters={}
[DEBUG]  :  Mapped to com.hexaware.hospitalmanagement.restcontroller.AppointmentController#getAppointmentsByPatientId(Long)
[INFO]  :  Fetching appointments for patientId: 2
[DEBUG]  :  Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[DEBUG]  :  Writing [[Appointment [appointmentId=2, patient=Patient [patientId=2, user=User [userId=2, name=Neelavathi, e (truncated)...]
[DEBUG]  :  Completed 200 OK
[DEBUG]  :  Securing GET /api/patients/byuserId/2
[INFO]  :  Checking path for skipping JWT filter: /api/patients/byuserId/2
[INFO]  :  Skip JWT filter? false
[INFO]  :  JwtAuthFilter is processing the request: /api/patients/byuserId/2
[INFO]  :  Authorization header: Bearer eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiUEFUSUVOVCIsImlkIjoyLCJzdWIiOiJuZWVsYS5wYXRpZW50QGdtYWlsLmNvbSIsImlhdCI6MTc1MDQxMDg2NiwiZXhwIjoxNzUwNDk3MjY2fQ.8s4theali_M3DQuz2h5IDHae40jmMXhIezyg0OUvcOI
[INFO]  :  Extracted username: neela.patient@gmail.com
[INFO]  :  Authenticated user: neela.patient@gmail.com
[INFO]  :  Authorities: [ROLE_PATIENT]
[INFO]  :  Authenticated user: neela.patient@gmail.com
[INFO]  :  Authorities: [ROLE_PATIENT]
[DEBUG]  :  Secured GET /api/patients/byuserId/2
[INFO]  :  Checking path for skipping JWT filter: /api/patients/byuserId/2
[INFO]  :  Skip JWT filter? false
[DEBUG]  :  GET "/api/patients/byuserId/2", parameters={}
[DEBUG]  :  Mapped to com.hexaware.hospitalmanagement.restcontroller.PatientController#getPatientByUserId(Long)
[DEBUG]  :  Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[DEBUG]  :  Writing [Patient [patientId=2, user=User [userId=2, name=Neelavathi, email=neela.patient@gmail.com, password= (truncated)...]
[DEBUG]  :  Completed 200 OK
[DEBUG]  :  Securing GET /api/appointments/patient/2
[INFO]  :  Checking path for skipping JWT filter: /api/appointments/patient/2
[INFO]  :  Skip JWT filter? false
[INFO]  :  JwtAuthFilter is processing the request: /api/appointments/patient/2
[INFO]  :  Authorization header: Bearer eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiUEFUSUVOVCIsImlkIjoyLCJzdWIiOiJuZWVsYS5wYXRpZW50QGdtYWlsLmNvbSIsImlhdCI6MTc1MDQxMDg2NiwiZXhwIjoxNzUwNDk3MjY2fQ.8s4theali_M3DQuz2h5IDHae40jmMXhIezyg0OUvcOI
[INFO]  :  Extracted username: neela.patient@gmail.com
[INFO]  :  Authenticated user: neela.patient@gmail.com
[INFO]  :  Authorities: [ROLE_PATIENT]
[INFO]  :  Authenticated user: neela.patient@gmail.com
[INFO]  :  Authorities: [ROLE_PATIENT]
[DEBUG]  :  Secured GET /api/appointments/patient/2
[INFO]  :  Checking path for skipping JWT filter: /api/appointments/patient/2
[INFO]  :  Skip JWT filter? false
[DEBUG]  :  GET "/api/appointments/patient/2", parameters={}
[DEBUG]  :  Mapped to com.hexaware.hospitalmanagement.restcontroller.AppointmentController#getAppointmentsByPatientId(Long)
[INFO]  :  Fetching appointments for patientId: 2
[DEBUG]  :  Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[DEBUG]  :  Writing [[Appointment [appointmentId=2, patient=Patient [patientId=2, user=User [userId=2, name=Neelavathi, e (truncated)...]
[DEBUG]  :  Completed 200 OK
[DEBUG]  :  Securing OPTIONS /api/appointments/getById/15
[DEBUG]  :  Securing GET /api/appointments/getById/15
[INFO]  :  Checking path for skipping JWT filter: /api/appointments/getById/15
[INFO]  :  Skip JWT filter? false
[INFO]  :  JwtAuthFilter is processing the request: /api/appointments/getById/15
[INFO]  :  Authorization header: Bearer eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiUEFUSUVOVCIsImlkIjoyLCJzdWIiOiJuZWVsYS5wYXRpZW50QGdtYWlsLmNvbSIsImlhdCI6MTc1MDQxMDg2NiwiZXhwIjoxNzUwNDk3MjY2fQ.8s4theali_M3DQuz2h5IDHae40jmMXhIezyg0OUvcOI
[INFO]  :  Extracted username: neela.patient@gmail.com
[INFO]  :  Authenticated user: neela.patient@gmail.com
[INFO]  :  Authorities: [ROLE_PATIENT]
[INFO]  :  Authenticated user: neela.patient@gmail.com
[INFO]  :  Authorities: [ROLE_PATIENT]
[DEBUG]  :  Secured GET /api/appointments/getById/15
[INFO]  :  Checking path for skipping JWT filter: /api/appointments/getById/15
[INFO]  :  Skip JWT filter? false
[DEBUG]  :  GET "/api/appointments/getById/15", parameters={}
[DEBUG]  :  Mapped to com.hexaware.hospitalmanagement.restcontroller.AppointmentController#getAppointmentById(Long)
[INFO]  :  Fetching appointment by id: 15
[DEBUG]  :  Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[DEBUG]  :  Writing [Appointment [appointmentId=15, patient=Patient [patientId=2, user=User [userId=2, name=Neelavathi, e (truncated)...]
[DEBUG]  :  Completed 200 OK
[DEBUG]  :  Securing GET /api/appointments/getById/15
[INFO]  :  Checking path for skipping JWT filter: /api/appointments/getById/15
[INFO]  :  Skip JWT filter? false
[INFO]  :  JwtAuthFilter is processing the request: /api/appointments/getById/15
[INFO]  :  Authorization header: Bearer eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiUEFUSUVOVCIsImlkIjoyLCJzdWIiOiJuZWVsYS5wYXRpZW50QGdtYWlsLmNvbSIsImlhdCI6MTc1MDQxMDg2NiwiZXhwIjoxNzUwNDk3MjY2fQ.8s4theali_M3DQuz2h5IDHae40jmMXhIezyg0OUvcOI
[INFO]  :  Extracted username: neela.patient@gmail.com
[INFO]  :  Authenticated user: neela.patient@gmail.com
[INFO]  :  Authorities: [ROLE_PATIENT]
[INFO]  :  Authenticated user: neela.patient@gmail.com
[INFO]  :  Authorities: [ROLE_PATIENT]
[DEBUG]  :  Secured GET /api/appointments/getById/15
[INFO]  :  Checking path for skipping JWT filter: /api/appointments/getById/15
[INFO]  :  Skip JWT filter? false
[DEBUG]  :  GET "/api/appointments/getById/15", parameters={}
[DEBUG]  :  Mapped to com.hexaware.hospitalmanagement.restcontroller.AppointmentController#getAppointmentById(Long)
[INFO]  :  Fetching appointment by id: 15
[DEBUG]  :  Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[DEBUG]  :  Writing [Appointment [appointmentId=15, patient=Patient [patientId=2, user=User [userId=2, name=Neelavathi, e (truncated)...]
[DEBUG]  :  Completed 200 OK
[DEBUG]  :  Securing OPTIONS /api/prescriptions/appointment/14
[DEBUG]  :  Securing GET /api/prescriptions/appointment/14
[INFO]  :  Checking path for skipping JWT filter: /api/prescriptions/appointment/14
[INFO]  :  Skip JWT filter? false
[INFO]  :  JwtAuthFilter is processing the request: /api/prescriptions/appointment/14
[INFO]  :  Authorization header: Bearer eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiUEFUSUVOVCIsImlkIjoyLCJzdWIiOiJuZWVsYS5wYXRpZW50QGdtYWlsLmNvbSIsImlhdCI6MTc1MDQxMDg2NiwiZXhwIjoxNzUwNDk3MjY2fQ.8s4theali_M3DQuz2h5IDHae40jmMXhIezyg0OUvcOI
[INFO]  :  Extracted username: neela.patient@gmail.com
[INFO]  :  Authenticated user: neela.patient@gmail.com
[INFO]  :  Authorities: [ROLE_PATIENT]
[INFO]  :  Authenticated user: neela.patient@gmail.com
[INFO]  :  Authorities: [ROLE_PATIENT]
[DEBUG]  :  Secured GET /api/prescriptions/appointment/14
[INFO]  :  Checking path for skipping JWT filter: /api/prescriptions/appointment/14
[INFO]  :  Skip JWT filter? false
[DEBUG]  :  GET "/api/prescriptions/appointment/14", parameters={}
[DEBUG]  :  Mapped to com.hexaware.hospitalmanagement.restcontroller.PrescriptionController#getPrescriptionsByAppointmentId(Long)
[INFO]  :  Fetching prescriptions for appointmentId: 14
[DEBUG]  :  Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[DEBUG]  :  Writing [[]]
[DEBUG]  :  Completed 200 OK
[DEBUG]  :  Securing GET /api/patients/byuserId/2
[INFO]  :  Checking path for skipping JWT filter: /api/patients/byuserId/2
[INFO]  :  Skip JWT filter? false
[INFO]  :  JwtAuthFilter is processing the request: /api/patients/byuserId/2
[INFO]  :  Authorization header: Bearer eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiUEFUSUVOVCIsImlkIjoyLCJzdWIiOiJuZWVsYS5wYXRpZW50QGdtYWlsLmNvbSIsImlhdCI6MTc1MDQxMDg2NiwiZXhwIjoxNzUwNDk3MjY2fQ.8s4theali_M3DQuz2h5IDHae40jmMXhIezyg0OUvcOI
[INFO]  :  Extracted username: neela.patient@gmail.com
[INFO]  :  Authenticated user: neela.patient@gmail.com
[INFO]  :  Authorities: [ROLE_PATIENT]
[INFO]  :  Authenticated user: neela.patient@gmail.com
[INFO]  :  Authorities: [ROLE_PATIENT]
[DEBUG]  :  Secured GET /api/patients/byuserId/2
[INFO]  :  Checking path for skipping JWT filter: /api/patients/byuserId/2
[INFO]  :  Skip JWT filter? false
[DEBUG]  :  GET "/api/patients/byuserId/2", parameters={}
[DEBUG]  :  Mapped to com.hexaware.hospitalmanagement.restcontroller.PatientController#getPatientByUserId(Long)
[DEBUG]  :  Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[DEBUG]  :  Writing [Patient [patientId=2, user=User [userId=2, name=Neelavathi, email=neela.patient@gmail.com, password= (truncated)...]
[DEBUG]  :  Completed 200 OK
[DEBUG]  :  Securing GET /api/appointments/patient/2
[INFO]  :  Checking path for skipping JWT filter: /api/appointments/patient/2
[INFO]  :  Skip JWT filter? false
[INFO]  :  JwtAuthFilter is processing the request: /api/appointments/patient/2
[INFO]  :  Authorization header: Bearer eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiUEFUSUVOVCIsImlkIjoyLCJzdWIiOiJuZWVsYS5wYXRpZW50QGdtYWlsLmNvbSIsImlhdCI6MTc1MDQxMDg2NiwiZXhwIjoxNzUwNDk3MjY2fQ.8s4theali_M3DQuz2h5IDHae40jmMXhIezyg0OUvcOI
[INFO]  :  Extracted username: neela.patient@gmail.com
[INFO]  :  Authenticated user: neela.patient@gmail.com
[INFO]  :  Authorities: [ROLE_PATIENT]
[INFO]  :  Authenticated user: neela.patient@gmail.com
[INFO]  :  Authorities: [ROLE_PATIENT]
[DEBUG]  :  Secured GET /api/appointments/patient/2
[INFO]  :  Checking path for skipping JWT filter: /api/appointments/patient/2
[INFO]  :  Skip JWT filter? false
[DEBUG]  :  GET "/api/appointments/patient/2", parameters={}
[DEBUG]  :  Mapped to com.hexaware.hospitalmanagement.restcontroller.AppointmentController#getAppointmentsByPatientId(Long)
[INFO]  :  Fetching appointments for patientId: 2
[DEBUG]  :  Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[DEBUG]  :  Writing [[Appointment [appointmentId=2, patient=Patient [patientId=2, user=User [userId=2, name=Neelavathi, e (truncated)...]
[DEBUG]  :  Completed 200 OK
[DEBUG]  :  Securing OPTIONS /api/medicalRecords/byAppointment/14
[DEBUG]  :  Securing GET /api/medicalRecords/byAppointment/14
[INFO]  :  Checking path for skipping JWT filter: /api/medicalRecords/byAppointment/14
[INFO]  :  Skip JWT filter? false
[INFO]  :  JwtAuthFilter is processing the request: /api/medicalRecords/byAppointment/14
[INFO]  :  Authorization header: Bearer eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiUEFUSUVOVCIsImlkIjoyLCJzdWIiOiJuZWVsYS5wYXRpZW50QGdtYWlsLmNvbSIsImlhdCI6MTc1MDQxMDg2NiwiZXhwIjoxNzUwNDk3MjY2fQ.8s4theali_M3DQuz2h5IDHae40jmMXhIezyg0OUvcOI
[INFO]  :  Extracted username: neela.patient@gmail.com
[INFO]  :  Authenticated user: neela.patient@gmail.com
[INFO]  :  Authorities: [ROLE_PATIENT]
[INFO]  :  Authenticated user: neela.patient@gmail.com
[INFO]  :  Authorities: [ROLE_PATIENT]
[DEBUG]  :  Secured GET /api/medicalRecords/byAppointment/14
[INFO]  :  Checking path for skipping JWT filter: /api/medicalRecords/byAppointment/14
[INFO]  :  Skip JWT filter? false
[DEBUG]  :  GET "/api/medicalRecords/byAppointment/14", parameters={}
[DEBUG]  :  Mapped to com.hexaware.hospitalmanagement.restcontroller.MedicalRecordController#getMedicalRecordByAppointmentId(Long)
[INFO]  :  Fetching medical record by appointmentId=14
[DEBUG]  :  Using @ExceptionHandler com.hexaware.hospitalmanagement.exception.GlobalExceptionHandler#medicalRecordNotFound(MedicalRecordNotFoundException)
[DEBUG]  :  Using 'application/json', given [application/json, text/plain, */*] and supported [text/plain, */*, application/json, application/*+json]
[DEBUG]  :  Writing ["Medical record not found for appointment id: 14"]
[DEBUG]  :  Resolved [com.hexaware.hospitalmanagement.exception.MedicalRecordNotFoundException: Medical record not found for appointment id: 14]
[DEBUG]  :  Completed 404 NOT_FOUND
[DEBUG]  :  Securing GET /api/patients/byuserId/2
[INFO]  :  Checking path for skipping JWT filter: /api/patients/byuserId/2
[INFO]  :  Skip JWT filter? false
[INFO]  :  JwtAuthFilter is processing the request: /api/patients/byuserId/2
[INFO]  :  Authorization header: Bearer eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiUEFUSUVOVCIsImlkIjoyLCJzdWIiOiJuZWVsYS5wYXRpZW50QGdtYWlsLmNvbSIsImlhdCI6MTc1MDQxMDg2NiwiZXhwIjoxNzUwNDk3MjY2fQ.8s4theali_M3DQuz2h5IDHae40jmMXhIezyg0OUvcOI
[INFO]  :  Extracted username: neela.patient@gmail.com
[INFO]  :  Authenticated user: neela.patient@gmail.com
[INFO]  :  Authorities: [ROLE_PATIENT]
[INFO]  :  Authenticated user: neela.patient@gmail.com
[INFO]  :  Authorities: [ROLE_PATIENT]
[DEBUG]  :  Secured GET /api/patients/byuserId/2
[INFO]  :  Checking path for skipping JWT filter: /api/patients/byuserId/2
[INFO]  :  Skip JWT filter? false
[DEBUG]  :  GET "/api/patients/byuserId/2", parameters={}
[DEBUG]  :  Mapped to com.hexaware.hospitalmanagement.restcontroller.PatientController#getPatientByUserId(Long)
[DEBUG]  :  Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[DEBUG]  :  Writing [Patient [patientId=2, user=User [userId=2, name=Neelavathi, email=neela.patient@gmail.com, password= (truncated)...]
[DEBUG]  :  Completed 200 OK
[DEBUG]  :  Securing GET /api/appointments/patient/2
[INFO]  :  Checking path for skipping JWT filter: /api/appointments/patient/2
[INFO]  :  Skip JWT filter? false
[INFO]  :  JwtAuthFilter is processing the request: /api/appointments/patient/2
[INFO]  :  Authorization header: Bearer eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiUEFUSUVOVCIsImlkIjoyLCJzdWIiOiJuZWVsYS5wYXRpZW50QGdtYWlsLmNvbSIsImlhdCI6MTc1MDQxMDg2NiwiZXhwIjoxNzUwNDk3MjY2fQ.8s4theali_M3DQuz2h5IDHae40jmMXhIezyg0OUvcOI
[INFO]  :  Extracted username: neela.patient@gmail.com
[INFO]  :  Authenticated user: neela.patient@gmail.com
[INFO]  :  Authorities: [ROLE_PATIENT]
[INFO]  :  Authenticated user: neela.patient@gmail.com
[INFO]  :  Authorities: [ROLE_PATIENT]
[DEBUG]  :  Secured GET /api/appointments/patient/2
[INFO]  :  Checking path for skipping JWT filter: /api/appointments/patient/2
[INFO]  :  Skip JWT filter? false
[DEBUG]  :  GET "/api/appointments/patient/2", parameters={}
[DEBUG]  :  Mapped to com.hexaware.hospitalmanagement.restcontroller.AppointmentController#getAppointmentsByPatientId(Long)
[INFO]  :  Fetching appointments for patientId: 2
[DEBUG]  :  Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[DEBUG]  :  Writing [[Appointment [appointmentId=2, patient=Patient [patientId=2, user=User [userId=2, name=Neelavathi, e (truncated)...]
[DEBUG]  :  Completed 200 OK
[DEBUG]  :  Securing OPTIONS /api/medicalRecords/byAppointment/2
[DEBUG]  :  Securing GET /api/medicalRecords/byAppointment/2
[INFO]  :  Checking path for skipping JWT filter: /api/medicalRecords/byAppointment/2
[INFO]  :  Skip JWT filter? false
[INFO]  :  JwtAuthFilter is processing the request: /api/medicalRecords/byAppointment/2
[INFO]  :  Authorization header: Bearer eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiUEFUSUVOVCIsImlkIjoyLCJzdWIiOiJuZWVsYS5wYXRpZW50QGdtYWlsLmNvbSIsImlhdCI6MTc1MDQxMDg2NiwiZXhwIjoxNzUwNDk3MjY2fQ.8s4theali_M3DQuz2h5IDHae40jmMXhIezyg0OUvcOI
[INFO]  :  Extracted username: neela.patient@gmail.com
[INFO]  :  Authenticated user: neela.patient@gmail.com
[INFO]  :  Authorities: [ROLE_PATIENT]
[INFO]  :  Authenticated user: neela.patient@gmail.com
[INFO]  :  Authorities: [ROLE_PATIENT]
[DEBUG]  :  Secured GET /api/medicalRecords/byAppointment/2
[INFO]  :  Checking path for skipping JWT filter: /api/medicalRecords/byAppointment/2
[INFO]  :  Skip JWT filter? false
[DEBUG]  :  GET "/api/medicalRecords/byAppointment/2", parameters={}
[DEBUG]  :  Mapped to com.hexaware.hospitalmanagement.restcontroller.MedicalRecordController#getMedicalRecordByAppointmentId(Long)
[INFO]  :  Fetching medical record by appointmentId=2
[DEBUG]  :  Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[DEBUG]  :  Writing [MedicalRecord [recordId=2, appointment=Appointment [appointmentId=2, patient=Patient [patientId=2, u (truncated)...]
[DEBUG]  :  Completed 200 OK
[DEBUG]  :  Securing GET /api/patients/byuserId/2
[INFO]  :  Checking path for skipping JWT filter: /api/patients/byuserId/2
[INFO]  :  Skip JWT filter? false
[INFO]  :  JwtAuthFilter is processing the request: /api/patients/byuserId/2
[INFO]  :  Authorization header: Bearer eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiUEFUSUVOVCIsImlkIjoyLCJzdWIiOiJuZWVsYS5wYXRpZW50QGdtYWlsLmNvbSIsImlhdCI6MTc1MDQxMDg2NiwiZXhwIjoxNzUwNDk3MjY2fQ.8s4theali_M3DQuz2h5IDHae40jmMXhIezyg0OUvcOI
[INFO]  :  Extracted username: neela.patient@gmail.com
[INFO]  :  Authenticated user: neela.patient@gmail.com
[INFO]  :  Authorities: [ROLE_PATIENT]
[INFO]  :  Authenticated user: neela.patient@gmail.com
[INFO]  :  Authorities: [ROLE_PATIENT]
[DEBUG]  :  Secured GET /api/patients/byuserId/2
[INFO]  :  Checking path for skipping JWT filter: /api/patients/byuserId/2
[INFO]  :  Skip JWT filter? false
[DEBUG]  :  GET "/api/patients/byuserId/2", parameters={}
[DEBUG]  :  Mapped to com.hexaware.hospitalmanagement.restcontroller.PatientController#getPatientByUserId(Long)
[DEBUG]  :  Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[DEBUG]  :  Writing [Patient [patientId=2, user=User [userId=2, name=Neelavathi, email=neela.patient@gmail.com, password= (truncated)...]
[DEBUG]  :  Completed 200 OK
[DEBUG]  :  Securing GET /api/appointments/patient/2
[INFO]  :  Checking path for skipping JWT filter: /api/appointments/patient/2
[INFO]  :  Skip JWT filter? false
[INFO]  :  JwtAuthFilter is processing the request: /api/appointments/patient/2
[INFO]  :  Authorization header: Bearer eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiUEFUSUVOVCIsImlkIjoyLCJzdWIiOiJuZWVsYS5wYXRpZW50QGdtYWlsLmNvbSIsImlhdCI6MTc1MDQxMDg2NiwiZXhwIjoxNzUwNDk3MjY2fQ.8s4theali_M3DQuz2h5IDHae40jmMXhIezyg0OUvcOI
[INFO]  :  Extracted username: neela.patient@gmail.com
[INFO]  :  Authenticated user: neela.patient@gmail.com
[INFO]  :  Authorities: [ROLE_PATIENT]
[INFO]  :  Authenticated user: neela.patient@gmail.com
[INFO]  :  Authorities: [ROLE_PATIENT]
[DEBUG]  :  Secured GET /api/appointments/patient/2
[INFO]  :  Checking path for skipping JWT filter: /api/appointments/patient/2
[INFO]  :  Skip JWT filter? false
[DEBUG]  :  GET "/api/appointments/patient/2", parameters={}
[DEBUG]  :  Mapped to com.hexaware.hospitalmanagement.restcontroller.AppointmentController#getAppointmentsByPatientId(Long)
[INFO]  :  Fetching appointments for patientId: 2
[DEBUG]  :  Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[DEBUG]  :  Writing [[Appointment [appointmentId=2, patient=Patient [patientId=2, user=User [userId=2, name=Neelavathi, e (truncated)...]
[DEBUG]  :  Completed 200 OK
[DEBUG]  :  Securing OPTIONS /api/prescriptions/appointment/2
[DEBUG]  :  Securing GET /api/prescriptions/appointment/2
[INFO]  :  Checking path for skipping JWT filter: /api/prescriptions/appointment/2
[INFO]  :  Skip JWT filter? false
[INFO]  :  JwtAuthFilter is processing the request: /api/prescriptions/appointment/2
[INFO]  :  Authorization header: Bearer eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiUEFUSUVOVCIsImlkIjoyLCJzdWIiOiJuZWVsYS5wYXRpZW50QGdtYWlsLmNvbSIsImlhdCI6MTc1MDQxMDg2NiwiZXhwIjoxNzUwNDk3MjY2fQ.8s4theali_M3DQuz2h5IDHae40jmMXhIezyg0OUvcOI
[INFO]  :  Extracted username: neela.patient@gmail.com
[INFO]  :  Authenticated user: neela.patient@gmail.com
[INFO]  :  Authorities: [ROLE_PATIENT]
[INFO]  :  Authenticated user: neela.patient@gmail.com
[INFO]  :  Authorities: [ROLE_PATIENT]
[DEBUG]  :  Secured GET /api/prescriptions/appointment/2
[INFO]  :  Checking path for skipping JWT filter: /api/prescriptions/appointment/2
[INFO]  :  Skip JWT filter? false
[DEBUG]  :  GET "/api/prescriptions/appointment/2", parameters={}
[DEBUG]  :  Mapped to com.hexaware.hospitalmanagement.restcontroller.PrescriptionController#getPrescriptionsByAppointmentId(Long)
[INFO]  :  Fetching prescriptions for appointmentId: 2
[DEBUG]  :  Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[DEBUG]  :  Writing [[PrescriptionDTO [medicalRecordId=2, medicineName=Ibuprofen 400mg, dosage=1 tablet twice a day, rema (truncated)...]
[DEBUG]  :  Completed 200 OK
[DEBUG]  :  Securing GET /api/patients/byuserId/2
[INFO]  :  Checking path for skipping JWT filter: /api/patients/byuserId/2
[INFO]  :  Skip JWT filter? false
[INFO]  :  JwtAuthFilter is processing the request: /api/patients/byuserId/2
[INFO]  :  Authorization header: Bearer eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiUEFUSUVOVCIsImlkIjoyLCJzdWIiOiJuZWVsYS5wYXRpZW50QGdtYWlsLmNvbSIsImlhdCI6MTc1MDQxMDg2NiwiZXhwIjoxNzUwNDk3MjY2fQ.8s4theali_M3DQuz2h5IDHae40jmMXhIezyg0OUvcOI
[INFO]  :  Extracted username: neela.patient@gmail.com
[INFO]  :  Authenticated user: neela.patient@gmail.com
[INFO]  :  Authorities: [ROLE_PATIENT]
[INFO]  :  Authenticated user: neela.patient@gmail.com
[INFO]  :  Authorities: [ROLE_PATIENT]
[DEBUG]  :  Secured GET /api/patients/byuserId/2
[INFO]  :  Checking path for skipping JWT filter: /api/patients/byuserId/2
[INFO]  :  Skip JWT filter? false
[DEBUG]  :  GET "/api/patients/byuserId/2", parameters={}
[DEBUG]  :  Mapped to com.hexaware.hospitalmanagement.restcontroller.PatientController#getPatientByUserId(Long)
[DEBUG]  :  Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[DEBUG]  :  Writing [Patient [patientId=2, user=User [userId=2, name=Neelavathi, email=neela.patient@gmail.com, password= (truncated)...]
[DEBUG]  :  Completed 200 OK
[DEBUG]  :  Securing GET /api/appointments/patient/2
[INFO]  :  Checking path for skipping JWT filter: /api/appointments/patient/2
[INFO]  :  Skip JWT filter? false
[INFO]  :  JwtAuthFilter is processing the request: /api/appointments/patient/2
[INFO]  :  Authorization header: Bearer eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiUEFUSUVOVCIsImlkIjoyLCJzdWIiOiJuZWVsYS5wYXRpZW50QGdtYWlsLmNvbSIsImlhdCI6MTc1MDQxMDg2NiwiZXhwIjoxNzUwNDk3MjY2fQ.8s4theali_M3DQuz2h5IDHae40jmMXhIezyg0OUvcOI
[INFO]  :  Extracted username: neela.patient@gmail.com
[INFO]  :  Authenticated user: neela.patient@gmail.com
[INFO]  :  Authorities: [ROLE_PATIENT]
[INFO]  :  Authenticated user: neela.patient@gmail.com
[INFO]  :  Authorities: [ROLE_PATIENT]
[DEBUG]  :  Secured GET /api/appointments/patient/2
[INFO]  :  Checking path for skipping JWT filter: /api/appointments/patient/2
[INFO]  :  Skip JWT filter? false
[DEBUG]  :  GET "/api/appointments/patient/2", parameters={}
[DEBUG]  :  Mapped to com.hexaware.hospitalmanagement.restcontroller.AppointmentController#getAppointmentsByPatientId(Long)
[INFO]  :  Fetching appointments for patientId: 2
[DEBUG]  :  Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[DEBUG]  :  Writing [[Appointment [appointmentId=2, patient=Patient [patientId=2, user=User [userId=2, name=Neelavathi, e (truncated)...]
[DEBUG]  :  Completed 200 OK
[DEBUG]  :  Securing OPTIONS /api/appointments/getById/18
[DEBUG]  :  Securing GET /api/appointments/getById/18
[INFO]  :  Checking path for skipping JWT filter: /api/appointments/getById/18
[INFO]  :  Skip JWT filter? false
[INFO]  :  JwtAuthFilter is processing the request: /api/appointments/getById/18
[INFO]  :  Authorization header: Bearer eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiUEFUSUVOVCIsImlkIjoyLCJzdWIiOiJuZWVsYS5wYXRpZW50QGdtYWlsLmNvbSIsImlhdCI6MTc1MDQxMDg2NiwiZXhwIjoxNzUwNDk3MjY2fQ.8s4theali_M3DQuz2h5IDHae40jmMXhIezyg0OUvcOI
[INFO]  :  Extracted username: neela.patient@gmail.com
[INFO]  :  Authenticated user: neela.patient@gmail.com
[INFO]  :  Authorities: [ROLE_PATIENT]
[INFO]  :  Authenticated user: neela.patient@gmail.com
[INFO]  :  Authorities: [ROLE_PATIENT]
[DEBUG]  :  Secured GET /api/appointments/getById/18
[INFO]  :  Checking path for skipping JWT filter: /api/appointments/getById/18
[INFO]  :  Skip JWT filter? false
[DEBUG]  :  GET "/api/appointments/getById/18", parameters={}
[DEBUG]  :  Mapped to com.hexaware.hospitalmanagement.restcontroller.AppointmentController#getAppointmentById(Long)
[INFO]  :  Fetching appointment by id: 18
[DEBUG]  :  Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[DEBUG]  :  Writing [Appointment [appointmentId=18, patient=Patient [patientId=2, user=User [userId=2, name=Neelavathi, e (truncated)...]
[DEBUG]  :  Completed 200 OK
[DEBUG]  :  Securing OPTIONS /api/appointments/getById/20
[DEBUG]  :  Securing GET /api/appointments/getById/20
[INFO]  :  Checking path for skipping JWT filter: /api/appointments/getById/20
[INFO]  :  Skip JWT filter? false
[INFO]  :  JwtAuthFilter is processing the request: /api/appointments/getById/20
[INFO]  :  Authorization header: Bearer eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiUEFUSUVOVCIsImlkIjoyLCJzdWIiOiJuZWVsYS5wYXRpZW50QGdtYWlsLmNvbSIsImlhdCI6MTc1MDQxMDg2NiwiZXhwIjoxNzUwNDk3MjY2fQ.8s4theali_M3DQuz2h5IDHae40jmMXhIezyg0OUvcOI
[INFO]  :  Extracted username: neela.patient@gmail.com
[INFO]  :  Authenticated user: neela.patient@gmail.com
[INFO]  :  Authorities: [ROLE_PATIENT]
[INFO]  :  Authenticated user: neela.patient@gmail.com
[INFO]  :  Authorities: [ROLE_PATIENT]
[DEBUG]  :  Secured GET /api/appointments/getById/20
[INFO]  :  Checking path for skipping JWT filter: /api/appointments/getById/20
[INFO]  :  Skip JWT filter? false
[DEBUG]  :  GET "/api/appointments/getById/20", parameters={}
[DEBUG]  :  Mapped to com.hexaware.hospitalmanagement.restcontroller.AppointmentController#getAppointmentById(Long)
[INFO]  :  Fetching appointment by id: 20
[DEBUG]  :  Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[DEBUG]  :  Writing [Appointment [appointmentId=20, patient=Patient [patientId=2, user=User [userId=2, name=Neelavathi, e (truncated)...]
[DEBUG]  :  Completed 200 OK
[DEBUG]  :  Securing OPTIONS /api/appointments/cancel/20
[DEBUG]  :  Securing PUT /api/appointments/cancel/20
[INFO]  :  Checking path for skipping JWT filter: /api/appointments/cancel/20
[INFO]  :  Skip JWT filter? false
[INFO]  :  JwtAuthFilter is processing the request: /api/appointments/cancel/20
[INFO]  :  Authorization header: Bearer eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiUEFUSUVOVCIsImlkIjoyLCJzdWIiOiJuZWVsYS5wYXRpZW50QGdtYWlsLmNvbSIsImlhdCI6MTc1MDQxMDg2NiwiZXhwIjoxNzUwNDk3MjY2fQ.8s4theali_M3DQuz2h5IDHae40jmMXhIezyg0OUvcOI
[INFO]  :  Extracted username: neela.patient@gmail.com
[INFO]  :  Authenticated user: neela.patient@gmail.com
[INFO]  :  Authorities: [ROLE_PATIENT]
[INFO]  :  Authenticated user: neela.patient@gmail.com
[INFO]  :  Authorities: [ROLE_PATIENT]
[DEBUG]  :  Secured PUT /api/appointments/cancel/20
[INFO]  :  Checking path for skipping JWT filter: /api/appointments/cancel/20
[INFO]  :  Skip JWT filter? false
[DEBUG]  :  PUT "/api/appointments/cancel/20", parameters={}
[DEBUG]  :  Mapped to com.hexaware.hospitalmanagement.restcontroller.AppointmentController#cancelAppointment(Long)
[INFO]  :  Cancelling appointment id: 20
[DEBUG]  :  Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[DEBUG]  :  Writing [Appointment [appointmentId=20, patient=Patient [patientId=2, user=User [userId=2, name=Neelavathi, e (truncated)...]
[DEBUG]  :  Completed 200 OK
[DEBUG]  :  Securing GET /api/appointments/patient/2
[INFO]  :  Checking path for skipping JWT filter: /api/appointments/patient/2
[INFO]  :  Skip JWT filter? false
[INFO]  :  JwtAuthFilter is processing the request: /api/appointments/patient/2
[INFO]  :  Authorization header: Bearer eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiUEFUSUVOVCIsImlkIjoyLCJzdWIiOiJuZWVsYS5wYXRpZW50QGdtYWlsLmNvbSIsImlhdCI6MTc1MDQxMDg2NiwiZXhwIjoxNzUwNDk3MjY2fQ.8s4theali_M3DQuz2h5IDHae40jmMXhIezyg0OUvcOI
[INFO]  :  Extracted username: neela.patient@gmail.com
[INFO]  :  Authenticated user: neela.patient@gmail.com
[INFO]  :  Authorities: [ROLE_PATIENT]
[INFO]  :  Authenticated user: neela.patient@gmail.com
[INFO]  :  Authorities: [ROLE_PATIENT]
[DEBUG]  :  Secured GET /api/appointments/patient/2
[INFO]  :  Checking path for skipping JWT filter: /api/appointments/patient/2
[INFO]  :  Skip JWT filter? false
[DEBUG]  :  GET "/api/appointments/patient/2", parameters={}
[DEBUG]  :  Mapped to com.hexaware.hospitalmanagement.restcontroller.AppointmentController#getAppointmentsByPatientId(Long)
[INFO]  :  Fetching appointments for patientId: 2
[DEBUG]  :  Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[DEBUG]  :  Writing [[Appointment [appointmentId=2, patient=Patient [patientId=2, user=User [userId=2, name=Neelavathi, e (truncated)...]
[DEBUG]  :  Completed 200 OK
[DEBUG]  :  Securing POST /api/users/login/authenticate
[INFO]  :  Checking path for skipping JWT filter: /api/users/login/authenticate
[INFO]  :  Skip JWT filter? true
[DEBUG]  :  Set SecurityContextHolder to anonymous SecurityContext
[DEBUG]  :  Secured POST /api/users/login/authenticate
[INFO]  :  Checking path for skipping JWT filter: /api/users/login/authenticate
[INFO]  :  Skip JWT filter? true
[DEBUG]  :  POST "/api/users/login/authenticate", parameters={}
[DEBUG]  :  Mapped to com.hexaware.hospitalmanagement.restcontroller.AuthController#authenticateAndGetToken(AuthRequestDTO)
[DEBUG]  :  Read "application/json;charset=UTF-8" to [AuthRequestDTO(userName=arun.admin@gmail.com, password=pass@123)]
[DEBUG]  :  Authenticated user
[INFO]  :  Token :eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiQURNSU4iLCJpZCI6MTYsInN1YiI6ImFydW4uYWRtaW5AZ21haWwuY29tIiwiaWF0IjoxNzUwNDExMzUxLCJleHAiOjE3NTA0OTc3NTF9.haV_FcXN_tudCK4DeD5Qhg7zc_7WzBqy6mCwK8goaAg
[DEBUG]  :  Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[DEBUG]  :  Writing [{token=eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiQURNSU4iLCJpZCI6MTYsInN1YiI6ImFydW4uYWRtaW5AZ21haWwuY29tIiwi (truncated)...]
[DEBUG]  :  Completed 200 OK
[DEBUG]  :  Securing OPTIONS /api/appointments/getAll
[DEBUG]  :  Securing GET /api/appointments/getAll
[INFO]  :  Checking path for skipping JWT filter: /api/appointments/getAll
[INFO]  :  Skip JWT filter? false
[INFO]  :  JwtAuthFilter is processing the request: /api/appointments/getAll
[INFO]  :  Authorization header: Bearer eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiQURNSU4iLCJpZCI6MTYsInN1YiI6ImFydW4uYWRtaW5AZ21haWwuY29tIiwiaWF0IjoxNzUwNDExMzUxLCJleHAiOjE3NTA0OTc3NTF9.haV_FcXN_tudCK4DeD5Qhg7zc_7WzBqy6mCwK8goaAg
[INFO]  :  Extracted username: arun.admin@gmail.com
[INFO]  :  Authenticated user: arun.admin@gmail.com
[INFO]  :  Authorities: [ROLE_ADMIN]
[INFO]  :  Authenticated user: arun.admin@gmail.com
[INFO]  :  Authorities: [ROLE_ADMIN]
[DEBUG]  :  Secured GET /api/appointments/getAll
[INFO]  :  Checking path for skipping JWT filter: /api/appointments/getAll
[INFO]  :  Skip JWT filter? false
[DEBUG]  :  GET "/api/appointments/getAll", parameters={}
[DEBUG]  :  Mapped to com.hexaware.hospitalmanagement.restcontroller.AppointmentController#getAllAppointments()
[INFO]  :  Fetching all appointments
[DEBUG]  :  Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[DEBUG]  :  Writing [[Appointment [appointmentId=2, patient=Patient [patientId=2, user=User [userId=2, name=Neelavathi, e (truncated)...]
[DEBUG]  :  Completed 200 OK
[DEBUG]  :  Securing OPTIONS /api/appointments/getById/5
[DEBUG]  :  Securing GET /api/doctors/getAll
[DEBUG]  :  Securing GET /api/appointments/getById/5
[INFO]  :  Checking path for skipping JWT filter: /api/appointments/getById/5
[INFO]  :  Skip JWT filter? false
[INFO]  :  JwtAuthFilter is processing the request: /api/appointments/getById/5
[INFO]  :  Authorization header: Bearer eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiQURNSU4iLCJpZCI6MTYsInN1YiI6ImFydW4uYWRtaW5AZ21haWwuY29tIiwiaWF0IjoxNzUwNDExMzUxLCJleHAiOjE3NTA0OTc3NTF9.haV_FcXN_tudCK4DeD5Qhg7zc_7WzBqy6mCwK8goaAg
[INFO]  :  Checking path for skipping JWT filter: /api/doctors/getAll
[INFO]  :  Skip JWT filter? false
[INFO]  :  JwtAuthFilter is processing the request: /api/doctors/getAll
[INFO]  :  Authorization header: Bearer eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiQURNSU4iLCJpZCI6MTYsInN1YiI6ImFydW4uYWRtaW5AZ21haWwuY29tIiwiaWF0IjoxNzUwNDExMzUxLCJleHAiOjE3NTA0OTc3NTF9.haV_FcXN_tudCK4DeD5Qhg7zc_7WzBqy6mCwK8goaAg
[INFO]  :  Extracted username: arun.admin@gmail.com
[INFO]  :  Extracted username: arun.admin@gmail.com
[INFO]  :  Authenticated user: arun.admin@gmail.com
[INFO]  :  Authorities: [ROLE_ADMIN]
[INFO]  :  Authenticated user: arun.admin@gmail.com
[INFO]  :  Authorities: [ROLE_ADMIN]
[INFO]  :  Authenticated user: arun.admin@gmail.com
[INFO]  :  Authorities: [ROLE_ADMIN]
[DEBUG]  :  Secured GET /api/appointments/getById/5
[INFO]  :  Checking path for skipping JWT filter: /api/appointments/getById/5
[INFO]  :  Skip JWT filter? false
[DEBUG]  :  GET "/api/appointments/getById/5", parameters={}
[DEBUG]  :  Mapped to com.hexaware.hospitalmanagement.restcontroller.AppointmentController#getAppointmentById(Long)
[INFO]  :  Fetching appointment by id: 5
[INFO]  :  Authenticated user: arun.admin@gmail.com
[INFO]  :  Authorities: [ROLE_ADMIN]
[DEBUG]  :  Secured GET /api/doctors/getAll
[INFO]  :  Checking path for skipping JWT filter: /api/doctors/getAll
[INFO]  :  Skip JWT filter? false
[DEBUG]  :  GET "/api/doctors/getAll", parameters={}
[DEBUG]  :  Mapped to com.hexaware.hospitalmanagement.restcontroller.DoctorController#getAllDoctors()
[DEBUG]  :  Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[DEBUG]  :  Writing [[Doctor [doctorId=1, user=User [userId=6, name=ManojKumar, email=manoj.doctor@gmail.com, password=$2 (truncated)...]
[DEBUG]  :  Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[DEBUG]  :  Writing [Appointment [appointmentId=5, patient=Patient [patientId=4, user=User [userId=4, name=Anita, email=a (truncated)...]
[DEBUG]  :  Completed 200 OK
[DEBUG]  :  Completed 200 OK
[DEBUG]  :  Securing GET /api/appointments/getAll
[INFO]  :  Checking path for skipping JWT filter: /api/appointments/getAll
[INFO]  :  Skip JWT filter? false
[INFO]  :  JwtAuthFilter is processing the request: /api/appointments/getAll
[INFO]  :  Authorization header: Bearer eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiQURNSU4iLCJpZCI6MTYsInN1YiI6ImFydW4uYWRtaW5AZ21haWwuY29tIiwiaWF0IjoxNzUwNDExMzUxLCJleHAiOjE3NTA0OTc3NTF9.haV_FcXN_tudCK4DeD5Qhg7zc_7WzBqy6mCwK8goaAg
[INFO]  :  Extracted username: arun.admin@gmail.com
[INFO]  :  Authenticated user: arun.admin@gmail.com
[INFO]  :  Authorities: [ROLE_ADMIN]
[INFO]  :  Authenticated user: arun.admin@gmail.com
[INFO]  :  Authorities: [ROLE_ADMIN]
[DEBUG]  :  Secured GET /api/appointments/getAll
[INFO]  :  Checking path for skipping JWT filter: /api/appointments/getAll
[INFO]  :  Skip JWT filter? false
[DEBUG]  :  GET "/api/appointments/getAll", parameters={}
[DEBUG]  :  Mapped to com.hexaware.hospitalmanagement.restcontroller.AppointmentController#getAllAppointments()
[INFO]  :  Fetching all appointments
[DEBUG]  :  Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[DEBUG]  :  Writing [[Appointment [appointmentId=2, patient=Patient [patientId=2, user=User [userId=2, name=Neelavathi, e (truncated)...]
[DEBUG]  :  Completed 200 OK
[DEBUG]  :  Securing GET /api/appointments/getAll
[INFO]  :  Checking path for skipping JWT filter: /api/appointments/getAll
[INFO]  :  Skip JWT filter? false
[INFO]  :  JwtAuthFilter is processing the request: /api/appointments/getAll
[INFO]  :  Authorization header: Bearer eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiQURNSU4iLCJpZCI6MTYsInN1YiI6ImFydW4uYWRtaW5AZ21haWwuY29tIiwiaWF0IjoxNzUwNDExMzUxLCJleHAiOjE3NTA0OTc3NTF9.haV_FcXN_tudCK4DeD5Qhg7zc_7WzBqy6mCwK8goaAg
[INFO]  :  Extracted username: arun.admin@gmail.com
[INFO]  :  Authenticated user: arun.admin@gmail.com
[INFO]  :  Authorities: [ROLE_ADMIN]
[INFO]  :  Authenticated user: arun.admin@gmail.com
[INFO]  :  Authorities: [ROLE_ADMIN]
[DEBUG]  :  Secured GET /api/appointments/getAll
[INFO]  :  Checking path for skipping JWT filter: /api/appointments/getAll
[INFO]  :  Skip JWT filter? false
[DEBUG]  :  GET "/api/appointments/getAll", parameters={}
[DEBUG]  :  Mapped to com.hexaware.hospitalmanagement.restcontroller.AppointmentController#getAllAppointments()
[INFO]  :  Fetching all appointments
[DEBUG]  :  Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[DEBUG]  :  Writing [[Appointment [appointmentId=2, patient=Patient [patientId=2, user=User [userId=2, name=Neelavathi, e (truncated)...]
[DEBUG]  :  Completed 200 OK
[DEBUG]  :  Securing OPTIONS /api/appointments/getById/4
[DEBUG]  :  Securing GET /api/doctors/getAll
[INFO]  :  Checking path for skipping JWT filter: /api/doctors/getAll
[INFO]  :  Skip JWT filter? false
[INFO]  :  JwtAuthFilter is processing the request: /api/doctors/getAll
[INFO]  :  Authorization header: Bearer eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiQURNSU4iLCJpZCI6MTYsInN1YiI6ImFydW4uYWRtaW5AZ21haWwuY29tIiwiaWF0IjoxNzUwNDExMzUxLCJleHAiOjE3NTA0OTc3NTF9.haV_FcXN_tudCK4DeD5Qhg7zc_7WzBqy6mCwK8goaAg
[DEBUG]  :  Securing GET /api/appointments/getById/4
[INFO]  :  Checking path for skipping JWT filter: /api/appointments/getById/4
[INFO]  :  Skip JWT filter? false
[INFO]  :  JwtAuthFilter is processing the request: /api/appointments/getById/4
[INFO]  :  Authorization header: Bearer eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiQURNSU4iLCJpZCI6MTYsInN1YiI6ImFydW4uYWRtaW5AZ21haWwuY29tIiwiaWF0IjoxNzUwNDExMzUxLCJleHAiOjE3NTA0OTc3NTF9.haV_FcXN_tudCK4DeD5Qhg7zc_7WzBqy6mCwK8goaAg
[INFO]  :  Extracted username: arun.admin@gmail.com
[INFO]  :  Extracted username: arun.admin@gmail.com
[INFO]  :  Authenticated user: arun.admin@gmail.com
[INFO]  :  Authorities: [ROLE_ADMIN]
[INFO]  :  Authenticated user: arun.admin@gmail.com
[INFO]  :  Authorities: [ROLE_ADMIN]
[DEBUG]  :  Secured GET /api/doctors/getAll
[INFO]  :  Checking path for skipping JWT filter: /api/doctors/getAll
[INFO]  :  Skip JWT filter? false
[DEBUG]  :  GET "/api/doctors/getAll", parameters={}
[INFO]  :  Authenticated user: arun.admin@gmail.com
[INFO]  :  Authorities: [ROLE_ADMIN]
[INFO]  :  Authenticated user: arun.admin@gmail.com
[INFO]  :  Authorities: [ROLE_ADMIN]
[DEBUG]  :  Mapped to com.hexaware.hospitalmanagement.restcontroller.DoctorController#getAllDoctors()
[DEBUG]  :  Secured GET /api/appointments/getById/4
[INFO]  :  Checking path for skipping JWT filter: /api/appointments/getById/4
[INFO]  :  Skip JWT filter? false
[DEBUG]  :  GET "/api/appointments/getById/4", parameters={}
[DEBUG]  :  Mapped to com.hexaware.hospitalmanagement.restcontroller.AppointmentController#getAppointmentById(Long)
[INFO]  :  Fetching appointment by id: 4
[DEBUG]  :  Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[DEBUG]  :  Writing [Appointment [appointmentId=4, patient=Patient [patientId=4, user=User [userId=4, name=Anita, email=a (truncated)...]
[DEBUG]  :  Completed 200 OK
[DEBUG]  :  Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[DEBUG]  :  Writing [[Doctor [doctorId=1, user=User [userId=6, name=ManojKumar, email=manoj.doctor@gmail.com, password=$2 (truncated)...]
[DEBUG]  :  Completed 200 OK
[DEBUG]  :  Securing GET /api/appointments/getAll
[INFO]  :  Checking path for skipping JWT filter: /api/appointments/getAll
[INFO]  :  Skip JWT filter? false
[INFO]  :  JwtAuthFilter is processing the request: /api/appointments/getAll
[INFO]  :  Authorization header: Bearer eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiQURNSU4iLCJpZCI6MTYsInN1YiI6ImFydW4uYWRtaW5AZ21haWwuY29tIiwiaWF0IjoxNzUwNDExMzUxLCJleHAiOjE3NTA0OTc3NTF9.haV_FcXN_tudCK4DeD5Qhg7zc_7WzBqy6mCwK8goaAg
[INFO]  :  Extracted username: arun.admin@gmail.com
[INFO]  :  Authenticated user: arun.admin@gmail.com
[INFO]  :  Authorities: [ROLE_ADMIN]
[INFO]  :  Authenticated user: arun.admin@gmail.com
[INFO]  :  Authorities: [ROLE_ADMIN]
[DEBUG]  :  Secured GET /api/appointments/getAll
[INFO]  :  Checking path for skipping JWT filter: /api/appointments/getAll
[INFO]  :  Skip JWT filter? false
[DEBUG]  :  GET "/api/appointments/getAll", parameters={}
[DEBUG]  :  Mapped to com.hexaware.hospitalmanagement.restcontroller.AppointmentController#getAllAppointments()
[INFO]  :  Fetching all appointments
[DEBUG]  :  Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[DEBUG]  :  Writing [[Appointment [appointmentId=2, patient=Patient [patientId=2, user=User [userId=2, name=Neelavathi, e (truncated)...]
[DEBUG]  :  Completed 200 OK
[DEBUG]  :  Securing GET /api/appointments/getAll
[INFO]  :  Checking path for skipping JWT filter: /api/appointments/getAll
[INFO]  :  Skip JWT filter? false
[INFO]  :  JwtAuthFilter is processing the request: /api/appointments/getAll
[INFO]  :  Authorization header: Bearer eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiQURNSU4iLCJpZCI6MTYsInN1YiI6ImFydW4uYWRtaW5AZ21haWwuY29tIiwiaWF0IjoxNzUwNDExMzUxLCJleHAiOjE3NTA0OTc3NTF9.haV_FcXN_tudCK4DeD5Qhg7zc_7WzBqy6mCwK8goaAg
[INFO]  :  Extracted username: arun.admin@gmail.com
[INFO]  :  Authenticated user: arun.admin@gmail.com
[INFO]  :  Authorities: [ROLE_ADMIN]
[INFO]  :  Authenticated user: arun.admin@gmail.com
[INFO]  :  Authorities: [ROLE_ADMIN]
[DEBUG]  :  Secured GET /api/appointments/getAll
[INFO]  :  Checking path for skipping JWT filter: /api/appointments/getAll
[INFO]  :  Skip JWT filter? false
[DEBUG]  :  GET "/api/appointments/getAll", parameters={}
[DEBUG]  :  Mapped to com.hexaware.hospitalmanagement.restcontroller.AppointmentController#getAllAppointments()
[INFO]  :  Fetching all appointments
[DEBUG]  :  Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[DEBUG]  :  Writing [[Appointment [appointmentId=2, patient=Patient [patientId=2, user=User [userId=2, name=Neelavathi, e (truncated)...]
[DEBUG]  :  Completed 200 OK
[DEBUG]  :  Securing GET /api/appointments/doctor/4
[INFO]  :  Checking path for skipping JWT filter: /api/appointments/doctor/4
[INFO]  :  Skip JWT filter? false
[INFO]  :  JwtAuthFilter is processing the request: /api/appointments/doctor/4
[INFO]  :  Authorization header: Bearer eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiQURNSU4iLCJpZCI6MTYsInN1YiI6ImFydW4uYWRtaW5AZ21haWwuY29tIiwiaWF0IjoxNzUwNDExMzUxLCJleHAiOjE3NTA0OTc3NTF9.haV_FcXN_tudCK4DeD5Qhg7zc_7WzBqy6mCwK8goaAg
[INFO]  :  Extracted username: arun.admin@gmail.com
[INFO]  :  Authenticated user: arun.admin@gmail.com
[INFO]  :  Authorities: [ROLE_ADMIN]
[INFO]  :  Authenticated user: arun.admin@gmail.com
[INFO]  :  Authorities: [ROLE_ADMIN]
[DEBUG]  :  Secured GET /api/appointments/doctor/4
[INFO]  :  Checking path for skipping JWT filter: /api/appointments/doctor/4
[INFO]  :  Skip JWT filter? false
[DEBUG]  :  GET "/api/appointments/doctor/4", parameters={}
[DEBUG]  :  Mapped to com.hexaware.hospitalmanagement.restcontroller.AppointmentController#getAppointmentsByDoctorId(Long)
[INFO]  :  Fetching appointments for doctorId: 4
[DEBUG]  :  Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[DEBUG]  :  Writing [[Appointment [appointmentId=12, patient=Patient [patientId=12, user=User [userId=38, name=Renuka, em (truncated)...]
[DEBUG]  :  Completed 200 OK
[DEBUG]  :  Securing OPTIONS /api/appointments/doctor/0
[DEBUG]  :  Securing GET /api/appointments/doctor/0
[INFO]  :  Checking path for skipping JWT filter: /api/appointments/doctor/0
[INFO]  :  Skip JWT filter? false
[INFO]  :  JwtAuthFilter is processing the request: /api/appointments/doctor/0
[INFO]  :  Authorization header: Bearer eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiQURNSU4iLCJpZCI6MTYsInN1YiI6ImFydW4uYWRtaW5AZ21haWwuY29tIiwiaWF0IjoxNzUwNDExMzUxLCJleHAiOjE3NTA0OTc3NTF9.haV_FcXN_tudCK4DeD5Qhg7zc_7WzBqy6mCwK8goaAg
[INFO]  :  Extracted username: arun.admin@gmail.com
[INFO]  :  Authenticated user: arun.admin@gmail.com
[INFO]  :  Authorities: [ROLE_ADMIN]
[INFO]  :  Authenticated user: arun.admin@gmail.com
[INFO]  :  Authorities: [ROLE_ADMIN]
[DEBUG]  :  Secured GET /api/appointments/doctor/0
[INFO]  :  Checking path for skipping JWT filter: /api/appointments/doctor/0
[INFO]  :  Skip JWT filter? false
[DEBUG]  :  GET "/api/appointments/doctor/0", parameters={}
[DEBUG]  :  Mapped to com.hexaware.hospitalmanagement.restcontroller.AppointmentController#getAppointmentsByDoctorId(Long)
[INFO]  :  Fetching appointments for doctorId: 0
[DEBUG]  :  Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[DEBUG]  :  Writing [[]]
[DEBUG]  :  Completed 200 OK
[DEBUG]  :  Securing GET /api/appointments/getAll
[INFO]  :  Checking path for skipping JWT filter: /api/appointments/getAll
[INFO]  :  Skip JWT filter? false
[INFO]  :  JwtAuthFilter is processing the request: /api/appointments/getAll
[INFO]  :  Authorization header: Bearer eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiQURNSU4iLCJpZCI6MTYsInN1YiI6ImFydW4uYWRtaW5AZ21haWwuY29tIiwiaWF0IjoxNzUwNDExMzUxLCJleHAiOjE3NTA0OTc3NTF9.haV_FcXN_tudCK4DeD5Qhg7zc_7WzBqy6mCwK8goaAg
[INFO]  :  Extracted username: arun.admin@gmail.com
[INFO]  :  Authenticated user: arun.admin@gmail.com
[INFO]  :  Authorities: [ROLE_ADMIN]
[INFO]  :  Authenticated user: arun.admin@gmail.com
[INFO]  :  Authorities: [ROLE_ADMIN]
[DEBUG]  :  Secured GET /api/appointments/getAll
[INFO]  :  Checking path for skipping JWT filter: /api/appointments/getAll
[INFO]  :  Skip JWT filter? false
[DEBUG]  :  GET "/api/appointments/getAll", parameters={}
[DEBUG]  :  Mapped to com.hexaware.hospitalmanagement.restcontroller.AppointmentController#getAllAppointments()
[INFO]  :  Fetching all appointments
[DEBUG]  :  Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[DEBUG]  :  Writing [[Appointment [appointmentId=2, patient=Patient [patientId=2, user=User [userId=2, name=Neelavathi, e (truncated)...]
[DEBUG]  :  Completed 200 OK
[DEBUG]  :  Securing OPTIONS /api/users/getById/16
[DEBUG]  :  Securing GET /api/users/getById/16
[INFO]  :  Checking path for skipping JWT filter: /api/users/getById/16
[INFO]  :  Skip JWT filter? false
[INFO]  :  JwtAuthFilter is processing the request: /api/users/getById/16
[INFO]  :  Authorization header: Bearer eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiQURNSU4iLCJpZCI6MTYsInN1YiI6ImFydW4uYWRtaW5AZ21haWwuY29tIiwiaWF0IjoxNzUwNDExMzUxLCJleHAiOjE3NTA0OTc3NTF9.haV_FcXN_tudCK4DeD5Qhg7zc_7WzBqy6mCwK8goaAg
[INFO]  :  Extracted username: arun.admin@gmail.com
[INFO]  :  Authenticated user: arun.admin@gmail.com
[INFO]  :  Authorities: [ROLE_ADMIN]
[INFO]  :  Authenticated user: arun.admin@gmail.com
[INFO]  :  Authorities: [ROLE_ADMIN]
[DEBUG]  :  Secured GET /api/users/getById/16
[INFO]  :  Checking path for skipping JWT filter: /api/users/getById/16
[INFO]  :  Skip JWT filter? false
[DEBUG]  :  GET "/api/users/getById/16", parameters={}
[DEBUG]  :  Mapped to com.hexaware.hospitalmanagement.restcontroller.UserController#getUserById(Long)
[DEBUG]  :  Authorizing method invocation ReflectiveMethodInvocation: public com.hexaware.hospitalmanagement.entity.User com.hexaware.hospitalmanagement.restcontroller.UserController.getUserById(java.lang.Long) throws com.hexaware.hospitalmanagement.exception.UserNotFoundException; target is of class [com.hexaware.hospitalmanagement.restcontroller.UserController]
[DEBUG]  :  Authorized method invocation ReflectiveMethodInvocation: public com.hexaware.hospitalmanagement.entity.User com.hexaware.hospitalmanagement.restcontroller.UserController.getUserById(java.lang.Long) throws com.hexaware.hospitalmanagement.exception.UserNotFoundException; target is of class [com.hexaware.hospitalmanagement.restcontroller.UserController]
[INFO]  :  Fetching user with ID: 16
[INFO]  :  User fetched successfully: arun.admin@gmail.com
[DEBUG]  :  Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[DEBUG]  :  Writing [User [userId=16, name=ArunRaj, email=arun.admin@gmail.com, password=$2a$10$ps1/omR4BicDzCPBdaHQrOJY1 (truncated)...]
[DEBUG]  :  Completed 200 OK
[DEBUG]  :  Securing GET /api/appointments/getAll
[INFO]  :  Checking path for skipping JWT filter: /api/appointments/getAll
[INFO]  :  Skip JWT filter? false
[INFO]  :  JwtAuthFilter is processing the request: /api/appointments/getAll
[INFO]  :  Authorization header: Bearer eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiQURNSU4iLCJpZCI6MTYsInN1YiI6ImFydW4uYWRtaW5AZ21haWwuY29tIiwiaWF0IjoxNzUwNDExMzUxLCJleHAiOjE3NTA0OTc3NTF9.haV_FcXN_tudCK4DeD5Qhg7zc_7WzBqy6mCwK8goaAg
[INFO]  :  Extracted username: arun.admin@gmail.com
[INFO]  :  Authenticated user: arun.admin@gmail.com
[INFO]  :  Authorities: [ROLE_ADMIN]
[INFO]  :  Authenticated user: arun.admin@gmail.com
[INFO]  :  Authorities: [ROLE_ADMIN]
[DEBUG]  :  Secured GET /api/appointments/getAll
[INFO]  :  Checking path for skipping JWT filter: /api/appointments/getAll
[INFO]  :  Skip JWT filter? false
[DEBUG]  :  GET "/api/appointments/getAll", parameters={}
[DEBUG]  :  Mapped to com.hexaware.hospitalmanagement.restcontroller.AppointmentController#getAllAppointments()
[INFO]  :  Fetching all appointments
[DEBUG]  :  Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[DEBUG]  :  Writing [[Appointment [appointmentId=2, patient=Patient [patientId=2, user=User [userId=2, name=Neelavathi, e (truncated)...]
[DEBUG]  :  Completed 200 OK
[DEBUG]  :  Securing OPTIONS /api/appointments/status/CANCELLED
[DEBUG]  :  Securing GET /api/appointments/status/CANCELLED
[INFO]  :  Checking path for skipping JWT filter: /api/appointments/status/CANCELLED
[INFO]  :  Skip JWT filter? false
[INFO]  :  JwtAuthFilter is processing the request: /api/appointments/status/CANCELLED
[INFO]  :  Authorization header: Bearer eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiQURNSU4iLCJpZCI6MTYsInN1YiI6ImFydW4uYWRtaW5AZ21haWwuY29tIiwiaWF0IjoxNzUwNDExMzUxLCJleHAiOjE3NTA0OTc3NTF9.haV_FcXN_tudCK4DeD5Qhg7zc_7WzBqy6mCwK8goaAg
[INFO]  :  Extracted username: arun.admin@gmail.com
[INFO]  :  Authenticated user: arun.admin@gmail.com
[INFO]  :  Authorities: [ROLE_ADMIN]
[INFO]  :  Authenticated user: arun.admin@gmail.com
[INFO]  :  Authorities: [ROLE_ADMIN]
[DEBUG]  :  Secured GET /api/appointments/status/CANCELLED
[INFO]  :  Checking path for skipping JWT filter: /api/appointments/status/CANCELLED
[INFO]  :  Skip JWT filter? false
[DEBUG]  :  GET "/api/appointments/status/CANCELLED", parameters={}
[DEBUG]  :  Mapped to com.hexaware.hospitalmanagement.restcontroller.AppointmentController#getAppointmentsByStatus(AppointmentStatus)
[INFO]  :  Fetching appointments by status: CANCELLED
[DEBUG]  :  Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[DEBUG]  :  Writing [[Appointment [appointmentId=4, patient=Patient [patientId=4, user=User [userId=4, name=Anita, email= (truncated)...]
[DEBUG]  :  Completed 200 OK
[DEBUG]  :  Securing GET /api/patients/getall
[INFO]  :  Checking path for skipping JWT filter: /api/patients/getall
[INFO]  :  Skip JWT filter? false
[INFO]  :  JwtAuthFilter is processing the request: /api/patients/getall
[INFO]  :  Authorization header: Bearer eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiQURNSU4iLCJpZCI6MTYsInN1YiI6ImFydW4uYWRtaW5AZ21haWwuY29tIiwiaWF0IjoxNzUwNDExMzUxLCJleHAiOjE3NTA0OTc3NTF9.haV_FcXN_tudCK4DeD5Qhg7zc_7WzBqy6mCwK8goaAg
[INFO]  :  Extracted username: arun.admin@gmail.com
[INFO]  :  Authenticated user: arun.admin@gmail.com
[INFO]  :  Authorities: [ROLE_ADMIN]
[INFO]  :  Authenticated user: arun.admin@gmail.com
[INFO]  :  Authorities: [ROLE_ADMIN]
[DEBUG]  :  Secured GET /api/patients/getall
[INFO]  :  Checking path for skipping JWT filter: /api/patients/getall
[INFO]  :  Skip JWT filter? false
[DEBUG]  :  GET "/api/patients/getall", parameters={}
[DEBUG]  :  Mapped to com.hexaware.hospitalmanagement.restcontroller.PatientController#getAllPatients()
[DEBUG]  :  Authorizing method invocation ReflectiveMethodInvocation: public java.util.List com.hexaware.hospitalmanagement.restcontroller.PatientController.getAllPatients(); target is of class [com.hexaware.hospitalmanagement.restcontroller.PatientController]
[DEBUG]  :  Authorized method invocation ReflectiveMethodInvocation: public java.util.List com.hexaware.hospitalmanagement.restcontroller.PatientController.getAllPatients(); target is of class [com.hexaware.hospitalmanagement.restcontroller.PatientController]
[INFO]  :  Fetching all patients
[DEBUG]  :  Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[DEBUG]  :  Writing [[Patient [patientId=1, user=User [userId=1, name=Arvindkumar, email=arvind.patient@gmail.com, passwo (truncated)...]
[DEBUG]  :  Completed 200 OK
[DEBUG]  :  Securing OPTIONS /api/doctors/getAll
[DEBUG]  :  Securing GET /api/doctors/getAll
[INFO]  :  Checking path for skipping JWT filter: /api/doctors/getAll
[INFO]  :  Skip JWT filter? false
[INFO]  :  JwtAuthFilter is processing the request: /api/doctors/getAll
[INFO]  :  Authorization header: Bearer eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiQURNSU4iLCJpZCI6MTYsInN1YiI6ImFydW4uYWRtaW5AZ21haWwuY29tIiwiaWF0IjoxNzUwNDExMzUxLCJleHAiOjE3NTA0OTc3NTF9.haV_FcXN_tudCK4DeD5Qhg7zc_7WzBqy6mCwK8goaAg
[INFO]  :  Extracted username: arun.admin@gmail.com
[INFO]  :  Authenticated user: arun.admin@gmail.com
[INFO]  :  Authorities: [ROLE_ADMIN]
[INFO]  :  Authenticated user: arun.admin@gmail.com
[INFO]  :  Authorities: [ROLE_ADMIN]
[DEBUG]  :  Secured GET /api/doctors/getAll
[INFO]  :  Checking path for skipping JWT filter: /api/doctors/getAll
[INFO]  :  Skip JWT filter? false
[DEBUG]  :  GET "/api/doctors/getAll", parameters={}
[DEBUG]  :  Mapped to com.hexaware.hospitalmanagement.restcontroller.DoctorController#getAllDoctors()
[DEBUG]  :  Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[DEBUG]  :  Writing [[Doctor [doctorId=1, user=User [userId=6, name=ManojKumar, email=manoj.doctor@gmail.com, password=$2 (truncated)...]
[DEBUG]  :  Completed 200 OK
[DEBUG]  :  Securing OPTIONS /api/users/registration/new
[DEBUG]  :  Securing POST /api/users/registration/new
[INFO]  :  Checking path for skipping JWT filter: /api/users/registration/new
[INFO]  :  Skip JWT filter? true
[DEBUG]  :  Set SecurityContextHolder to anonymous SecurityContext
[DEBUG]  :  Secured POST /api/users/registration/new
[INFO]  :  Checking path for skipping JWT filter: /api/users/registration/new
[INFO]  :  Skip JWT filter? true
[DEBUG]  :  POST "/api/users/registration/new", parameters={}
[DEBUG]  :  Mapped to com.hexaware.hospitalmanagement.restcontroller.AuthController#addNewUser(UserDTO)
[DEBUG]  :  Read "application/json;charset=UTF-8" to [UserDTO(userId=null, name=Aathi pranavika G S, email=neha.doctor@gmail.com, password=pass@123, role= (truncated)...]
[DEBUG]  :  Failed to complete request: jakarta.validation.ConstraintViolationException: Validation failed for classes [com.hexaware.hospitalmanagement.entity.User] during persist time for groups [jakarta.validation.groups.Default, ]
List of constraint violations:[
	ConstraintViolationImpl{interpolatedMessage='Date of birth must be a past date', propertyPath=dateOfBirth, rootBeanClass=class com.hexaware.hospitalmanagement.entity.User, messageTemplate='Date of birth must be a past date'}
]
[ERROR]  :  Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: jakarta.validation.ConstraintViolationException: Validation failed for classes [com.hexaware.hospitalmanagement.entity.User] during persist time for groups [jakarta.validation.groups.Default, ]
List of constraint violations:[
	ConstraintViolationImpl{interpolatedMessage='Date of birth must be a past date', propertyPath=dateOfBirth, rootBeanClass=class com.hexaware.hospitalmanagement.entity.User, messageTemplate='Date of birth must be a past date'}
]] with root cause
jakarta.validation.ConstraintViolationException: Validation failed for classes [com.hexaware.hospitalmanagement.entity.User] during persist time for groups [jakarta.validation.groups.Default, ]
List of constraint violations:[
	ConstraintViolationImpl{interpolatedMessage='Date of birth must be a past date', propertyPath=dateOfBirth, rootBeanClass=class com.hexaware.hospitalmanagement.entity.User, messageTemplate='Date of birth must be a past date'}
]
	at org.hibernate.boot.beanvalidation.BeanValidationEventListener.validate(BeanValidationEventListener.java:151)
	at org.hibernate.boot.beanvalidation.BeanValidationEventListener.onPreInsert(BeanValidationEventListener.java:81)
	at org.hibernate.action.internal.EntityIdentityInsertAction.preInsert(EntityIdentityInsertAction.java:201)
	at org.hibernate.action.internal.EntityIdentityInsertAction.execute(EntityIdentityInsertAction.java:79)
	at org.hibernate.engine.spi.ActionQueue.execute(ActionQueue.java:671)
	at org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:292)
	at org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:273)
	at org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:323)
	at org.hibernate.event.internal.AbstractSaveEventListener.addInsertAction(AbstractSaveEventListener.java:391)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:305)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:224)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:137)
	at org.hibernate.event.internal.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:175)
	at org.hibernate.event.internal.DefaultPersistEventListener.persist(DefaultPersistEventListener.java:93)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:77)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:54)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:757)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:741)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy146.persist(Unknown Source)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:319)
	at jdk.proxy2/jdk.proxy2.$Proxy146.persist(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:636)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:516)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:628)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:173)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:148)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:379)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:165)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy2/jdk.proxy2.$Proxy149.save(Unknown Source)
	at com.hexaware.hospitalmanagement.service.UserServiceImpl.registerUser(UserServiceImpl.java:38)
	at com.hexaware.hospitalmanagement.restcontroller.AuthController.addNewUser(AuthController.java:48)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
[DEBUG]  :  Securing POST /error
[DEBUG]  :  Secured POST /error
[DEBUG]  :  "ERROR" dispatch for POST "/error", parameters={}
[DEBUG]  :  Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
[DEBUG]  :  Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[DEBUG]  :  Writing [{timestamp=Fri Jun 20 15:25:18 IST 2025, status=500, error=Internal Server Error, message=Validation (truncated)...]
[DEBUG]  :  Exiting from "ERROR" dispatch, status 500
[DEBUG]  :  Set SecurityContextHolder to anonymous SecurityContext
[DEBUG]  :  Securing POST /api/users/registration/new
[INFO]  :  Checking path for skipping JWT filter: /api/users/registration/new
[INFO]  :  Skip JWT filter? true
[DEBUG]  :  Set SecurityContextHolder to anonymous SecurityContext
[DEBUG]  :  Secured POST /api/users/registration/new
[INFO]  :  Checking path for skipping JWT filter: /api/users/registration/new
[INFO]  :  Skip JWT filter? true
[DEBUG]  :  POST "/api/users/registration/new", parameters={}
[DEBUG]  :  Mapped to com.hexaware.hospitalmanagement.restcontroller.AuthController#addNewUser(UserDTO)
[DEBUG]  :  Read "application/json;charset=UTF-8" to [UserDTO(userId=null, name=Aathi pranavika G S, email=neha.doctor@gmail.com, password=pass@123, role= (truncated)...]
[WARN]  :  SQL Error: 1062, SQLState: 23000
[ERROR]  :  Duplicate entry 'neha.doctor@gmail.com' for key 'users.UK6dotkott2kjsp8vw4d0m25fb7'
[DEBUG]  :  Failed to complete request: org.springframework.dao.DataIntegrityViolationException: could not execute statement [Duplicate entry 'neha.doctor@gmail.com' for key 'users.UK6dotkott2kjsp8vw4d0m25fb7'] [insert into users (contact_number,created_at,date_of_birth,email,gender,name,password,role) values (?,?,?,?,?,?,?,?)]; SQL [insert into users (contact_number,created_at,date_of_birth,email,gender,name,password,role) values (?,?,?,?,?,?,?,?)]; constraint [users.UK6dotkott2kjsp8vw4d0m25fb7]
[ERROR]  :  Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.dao.DataIntegrityViolationException: could not execute statement [Duplicate entry 'neha.doctor@gmail.com' for key 'users.UK6dotkott2kjsp8vw4d0m25fb7'] [insert into users (contact_number,created_at,date_of_birth,email,gender,name,password,role) values (?,?,?,?,?,?,?,?)]; SQL [insert into users (contact_number,created_at,date_of_birth,email,gender,name,password,role) values (?,?,?,?,?,?,?,?)]; constraint [users.UK6dotkott2kjsp8vw4d0m25fb7]] with root cause
java.sql.SQLIntegrityConstraintViolationException: Duplicate entry 'neha.doctor@gmail.com' for key 'users.UK6dotkott2kjsp8vw4d0m25fb7'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:118)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:912)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1054)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1003)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeLargeUpdate(ClientPreparedStatement.java:1312)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdate(ClientPreparedStatement.java:988)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeUpdate(HikariProxyPreparedStatement.java)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:194)
	at org.hibernate.id.insert.GetGeneratedKeysDelegate.performMutation(GetGeneratedKeysDelegate.java:116)
	at org.hibernate.engine.jdbc.mutation.internal.MutationExecutorSingleNonBatched.performNonBatchedOperations(MutationExecutorSingleNonBatched.java:47)
	at org.hibernate.engine.jdbc.mutation.internal.AbstractMutationExecutor.execute(AbstractMutationExecutor.java:55)
	at org.hibernate.persister.entity.mutation.InsertCoordinatorStandard.doStaticInserts(InsertCoordinatorStandard.java:194)
	at org.hibernate.persister.entity.mutation.InsertCoordinatorStandard.coordinateInsert(InsertCoordinatorStandard.java:132)
	at org.hibernate.persister.entity.mutation.InsertCoordinatorStandard.insert(InsertCoordinatorStandard.java:95)
	at org.hibernate.action.internal.EntityIdentityInsertAction.execute(EntityIdentityInsertAction.java:85)
	at org.hibernate.engine.spi.ActionQueue.execute(ActionQueue.java:671)
	at org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:292)
	at org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:273)
	at org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:323)
	at org.hibernate.event.internal.AbstractSaveEventListener.addInsertAction(AbstractSaveEventListener.java:391)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:305)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:224)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:137)
	at org.hibernate.event.internal.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:175)
	at org.hibernate.event.internal.DefaultPersistEventListener.persist(DefaultPersistEventListener.java:93)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:77)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:54)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:757)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:741)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy146.persist(Unknown Source)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:319)
	at jdk.proxy2/jdk.proxy2.$Proxy146.persist(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:636)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:516)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:628)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:173)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:148)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:379)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:165)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy2/jdk.proxy2.$Proxy149.save(Unknown Source)
	at com.hexaware.hospitalmanagement.service.UserServiceImpl.registerUser(UserServiceImpl.java:38)
	at com.hexaware.hospitalmanagement.restcontroller.AuthController.addNewUser(AuthController.java:48)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
[DEBUG]  :  Securing POST /error
[DEBUG]  :  Secured POST /error
[DEBUG]  :  "ERROR" dispatch for POST "/error", parameters={}
[DEBUG]  :  Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
[DEBUG]  :  Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[DEBUG]  :  Writing [{timestamp=Fri Jun 20 15:25:34 IST 2025, status=500, error=Internal Server Error, message=could not  (truncated)...]
[DEBUG]  :  Exiting from "ERROR" dispatch, status 500
[DEBUG]  :  Set SecurityContextHolder to anonymous SecurityContext
[DEBUG]  :  Securing OPTIONS /api/appointments/getAll
[DEBUG]  :  Securing GET /api/appointments/getAll
[INFO]  :  Checking path for skipping JWT filter: /api/appointments/getAll
[INFO]  :  Skip JWT filter? false
[INFO]  :  JwtAuthFilter is processing the request: /api/appointments/getAll
[INFO]  :  Authorization header: Bearer eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiQURNSU4iLCJpZCI6MTYsInN1YiI6ImFydW4uYWRtaW5AZ21haWwuY29tIiwiaWF0IjoxNzUwNDExMzUxLCJleHAiOjE3NTA0OTc3NTF9.haV_FcXN_tudCK4DeD5Qhg7zc_7WzBqy6mCwK8goaAg
[INFO]  :  Extracted username: arun.admin@gmail.com
[INFO]  :  Authenticated user: arun.admin@gmail.com
[INFO]  :  Authorities: [ROLE_ADMIN]
[INFO]  :  Authenticated user: arun.admin@gmail.com
[INFO]  :  Authorities: [ROLE_ADMIN]
[DEBUG]  :  Secured GET /api/appointments/getAll
[INFO]  :  Checking path for skipping JWT filter: /api/appointments/getAll
[INFO]  :  Skip JWT filter? false
[DEBUG]  :  GET "/api/appointments/getAll", parameters={}
[DEBUG]  :  Mapped to com.hexaware.hospitalmanagement.restcontroller.AppointmentController#getAllAppointments()
[INFO]  :  Fetching all appointments
[DEBUG]  :  Securing GET /api/appointments/getAll
[INFO]  :  Checking path for skipping JWT filter: /api/appointments/getAll
[INFO]  :  Skip JWT filter? false
[INFO]  :  JwtAuthFilter is processing the request: /api/appointments/getAll
[INFO]  :  Authorization header: Bearer eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiQURNSU4iLCJpZCI6MTYsInN1YiI6ImFydW4uYWRtaW5AZ21haWwuY29tIiwiaWF0IjoxNzUwNDExMzUxLCJleHAiOjE3NTA0OTc3NTF9.haV_FcXN_tudCK4DeD5Qhg7zc_7WzBqy6mCwK8goaAg
[INFO]  :  Extracted username: arun.admin@gmail.com
[DEBUG]  :  Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[DEBUG]  :  Writing [[Appointment [appointmentId=2, patient=Patient [patientId=2, user=User [userId=2, name=Neelavathi, e (truncated)...]
[INFO]  :  Authenticated user: arun.admin@gmail.com
[INFO]  :  Authorities: [ROLE_ADMIN]
[INFO]  :  Authenticated user: arun.admin@gmail.com
[INFO]  :  Authorities: [ROLE_ADMIN]
[DEBUG]  :  Secured GET /api/appointments/getAll
[INFO]  :  Checking path for skipping JWT filter: /api/appointments/getAll
[INFO]  :  Skip JWT filter? false
[DEBUG]  :  GET "/api/appointments/getAll", parameters={}
[DEBUG]  :  Mapped to com.hexaware.hospitalmanagement.restcontroller.AppointmentController#getAllAppointments()
[INFO]  :  Fetching all appointments
[WARN]  :  Resolved [org.springframework.web.context.request.async.AsyncRequestNotUsableException: ServletOutputStream failed to flush: java.io.IOException: An established connection was aborted by the software in your host machine]
[DEBUG]  :  Completed 200 OK
[DEBUG]  :  Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[DEBUG]  :  Writing [[Appointment [appointmentId=2, patient=Patient [patientId=2, user=User [userId=2, name=Neelavathi, e (truncated)...]
[DEBUG]  :  Completed 200 OK
[INFO]  :  Application shutdown requested.
[INFO]  :  Closing JPA EntityManagerFactory for persistence unit 'default'
[INFO]  :  HikariPool-1 - Shutdown initiated...
[INFO]  :  HikariPool-1 - Shutdown completed.
[INFO]  :  Starting HospitalManageSpringRestApplication using Java 21.0.6 with PID 10624 (D:\spring workspace\HospitalManage_SpringRest\target\classes started by admin in D:\spring workspace\HospitalManage_SpringRest)
[INFO]  :  No active profile set, falling back to 1 default profile: "default"
[INFO]  :  Starting HospitalManageSpringRestApplication using Java 21.0.6 with PID 14936 (D:\spring workspace\HospitalManage_SpringRest\target\classes started by admin in D:\spring workspace\HospitalManage_SpringRest)
[INFO]  :  No active profile set, falling back to 1 default profile: "default"
[INFO]  :  Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO]  :  Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO]  :  Finished Spring Data repository scanning in 146 ms. Found 7 JPA repository interfaces.
[INFO]  :  Finished Spring Data repository scanning in 183 ms. Found 7 JPA repository interfaces.
[INFO]  :  Tomcat initialized with port 8080 (http)
[INFO]  :  Tomcat initialized with port 8080 (http)
[INFO]  :  Starting service [Tomcat]
[INFO]  :  Starting Servlet engine: [Apache Tomcat/10.1.40]
[INFO]  :  Starting service [Tomcat]
[INFO]  :  Starting Servlet engine: [Apache Tomcat/10.1.40]
[INFO]  :  Initializing Spring embedded WebApplicationContext
[INFO]  :  Root WebApplicationContext: initialization completed in 5439 ms
[INFO]  :  Initializing Spring embedded WebApplicationContext
[INFO]  :  Root WebApplicationContext: initialization completed in 5637 ms
[INFO]  :  HHH000204: Processing PersistenceUnitInfo [name: default]
[INFO]  :  HHH000204: Processing PersistenceUnitInfo [name: default]
[INFO]  :  Starting HospitalManageSpringRestApplication using Java 21.0.6 with PID 10108 (D:\spring workspace\HospitalManage_SpringRest\target\classes started by admin in D:\spring workspace\HospitalManage_SpringRest)
[INFO]  :  No active profile set, falling back to 1 default profile: "default"
[INFO]  :  Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO]  :  Finished Spring Data repository scanning in 115 ms. Found 7 JPA repository interfaces.
[INFO]  :  Tomcat initialized with port 8080 (http)
[INFO]  :  Starting service [Tomcat]
[INFO]  :  Starting Servlet engine: [Apache Tomcat/10.1.40]
[INFO]  :  Initializing Spring embedded WebApplicationContext
[INFO]  :  Root WebApplicationContext: initialization completed in 3155 ms
[INFO]  :  HHH000204: Processing PersistenceUnitInfo [name: default]
[INFO]  :  HHH000412: Hibernate ORM core version 6.5.3.Final
[INFO]  :  HHH000026: Second-level cache disabled
[INFO]  :  No LoadTimeWeaver setup: ignoring JPA class transformer
[INFO]  :  HikariPool-1 - Starting...
[INFO]  :  HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@3f908bc0
[INFO]  :  HikariPool-1 - Start completed.
[WARN]  :  HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
[INFO]  :  HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
[INFO]  :  Initialized JPA EntityManagerFactory for persistence unit 'default'
[INFO]  :  Hibernate is in classpath; If applicable, HQL parser will be used.
[INFO]  :  Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
[WARN]  :  Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider.
[WARN]  :  spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[DEBUG]  :  129 mappings in 'requestMappingHandlerMapping'
[DEBUG]  :  Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
[DEBUG]  :  Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
[DEBUG]  :  ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
[DEBUG]  :  ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice
[INFO]  :  Tomcat started on port 8080 (http) with context path '/'
[INFO]  :  Started HospitalManageSpringRestApplication in 14.806 seconds (process running for 17.959)
[INFO]  :  Initializing Spring DispatcherServlet 'dispatcherServlet'
[INFO]  :  Initializing Servlet 'dispatcherServlet'
[DEBUG]  :  Detected StandardServletMultipartResolver
[DEBUG]  :  Detected AcceptHeaderLocaleResolver
[DEBUG]  :  Detected FixedThemeResolver
[DEBUG]  :  Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@7940d27b
[DEBUG]  :  Detected org.springframework.web.servlet.support.SessionFlashMapManager@428943a4
[DEBUG]  :  enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
[INFO]  :  Completed initialization in 2 ms
[DEBUG]  :  Securing OPTIONS /api/users/login/authenticate
[DEBUG]  :  Securing POST /api/users/login/authenticate
[INFO]  :  Checking path for skipping JWT filter: /api/users/login/authenticate
[INFO]  :  Skip JWT filter? true
[DEBUG]  :  Set SecurityContextHolder to anonymous SecurityContext
[DEBUG]  :  Secured POST /api/users/login/authenticate
[INFO]  :  Checking path for skipping JWT filter: /api/users/login/authenticate
[INFO]  :  Skip JWT filter? true
[DEBUG]  :  POST "/api/users/login/authenticate", parameters={}
[DEBUG]  :  Mapped to com.hexaware.hospitalmanagement.restcontroller.AuthController#authenticateAndGetToken(AuthRequestDTO)
[DEBUG]  :  Read "application/json;charset=UTF-8" to [AuthRequestDTO(userName=arjun.admin@gmail.com, password=pass@123)]
[DEBUG]  :  Authenticated user
[INFO]  :  Token :eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiQURNSU4iLCJpZCI6MTcsInN1YiI6ImFyanVuLmFkbWluQGdtYWlsLmNvbSIsImlhdCI6MTc1MDQyMDUxNywiZXhwIjoxNzUwNTA2OTE3fQ.JzF0nLqfuaKOoQREKkH57oOljqGdahl-SZ85y8Agq_0
[DEBUG]  :  Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[DEBUG]  :  Writing [{token=eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiQURNSU4iLCJpZCI6MTcsInN1YiI6ImFyanVuLmFkbWluQGdtYWlsLmNvbSIs (truncated)...]
[DEBUG]  :  Completed 200 OK
[DEBUG]  :  Securing POST /api/users/login/authenticate
[INFO]  :  Checking path for skipping JWT filter: /api/users/login/authenticate
[INFO]  :  Skip JWT filter? true
[DEBUG]  :  Set SecurityContextHolder to anonymous SecurityContext
[DEBUG]  :  Secured POST /api/users/login/authenticate
[INFO]  :  Checking path for skipping JWT filter: /api/users/login/authenticate
[INFO]  :  Skip JWT filter? true
[DEBUG]  :  POST "/api/users/login/authenticate", parameters={}
[DEBUG]  :  Mapped to com.hexaware.hospitalmanagement.restcontroller.AuthController#authenticateAndGetToken(AuthRequestDTO)
[DEBUG]  :  Read "application/json;charset=UTF-8" to [AuthRequestDTO(userName=neha.doctor@gmail.com, password=pass@123)]
[DEBUG]  :  Authenticated user
[INFO]  :  Token :eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiRE9DVE9SIiwiaWQiOjksInN1YiI6Im5laGEuZG9jdG9yQGdtYWlsLmNvbSIsImlhdCI6MTc1MDQyMDYwOSwiZXhwIjoxNzUwNTA3MDA5fQ.12wpbb4U9lKkW58L6MCHwwNbj_aqUVfPo5S3i8MGY5g
[DEBUG]  :  Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[DEBUG]  :  Writing [{token=eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiRE9DVE9SIiwiaWQiOjksInN1YiI6Im5laGEuZG9jdG9yQGdtYWlsLmNvbSIs (truncated)...]
[DEBUG]  :  Completed 200 OK
[DEBUG]  :  Securing POST /api/users/login/authenticate
[INFO]  :  Checking path for skipping JWT filter: /api/users/login/authenticate
[INFO]  :  Skip JWT filter? true
[DEBUG]  :  Set SecurityContextHolder to anonymous SecurityContext
[DEBUG]  :  Secured POST /api/users/login/authenticate
[INFO]  :  Checking path for skipping JWT filter: /api/users/login/authenticate
[INFO]  :  Skip JWT filter? true
[DEBUG]  :  POST "/api/users/login/authenticate", parameters={}
[DEBUG]  :  Mapped to com.hexaware.hospitalmanagement.restcontroller.AuthController#authenticateAndGetToken(AuthRequestDTO)
[DEBUG]  :  Read "application/json;charset=UTF-8" to [AuthRequestDTO(userName=neela.patient@gmail.com, password=pass@123)]
[DEBUG]  :  Authenticated user
[INFO]  :  Token :eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiUEFUSUVOVCIsImlkIjoyLCJzdWIiOiJuZWVsYS5wYXRpZW50QGdtYWlsLmNvbSIsImlhdCI6MTc1MDQyMDcyMCwiZXhwIjoxNzUwNTA3MTIwfQ.VRWw_Dozl5xbFz1A1phvGqpJFa-HsoedC03U7kyO-8U
[DEBUG]  :  Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[DEBUG]  :  Writing [{token=eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiUEFUSUVOVCIsImlkIjoyLCJzdWIiOiJuZWVsYS5wYXRpZW50QGdtYWlsLmNv (truncated)...]
[DEBUG]  :  Completed 200 OK
[DEBUG]  :  Securing OPTIONS /api/patients/byuserId/2
[DEBUG]  :  Securing GET /api/patients/byuserId/2
[INFO]  :  Checking path for skipping JWT filter: /api/patients/byuserId/2
[INFO]  :  Skip JWT filter? false
[INFO]  :  JwtAuthFilter is processing the request: /api/patients/byuserId/2
[INFO]  :  Authorization header: Bearer eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiUEFUSUVOVCIsImlkIjoyLCJzdWIiOiJuZWVsYS5wYXRpZW50QGdtYWlsLmNvbSIsImlhdCI6MTc1MDQyMDcyMCwiZXhwIjoxNzUwNTA3MTIwfQ.VRWw_Dozl5xbFz1A1phvGqpJFa-HsoedC03U7kyO-8U
[INFO]  :  Extracted username: neela.patient@gmail.com
[INFO]  :  Authenticated user: neela.patient@gmail.com
[INFO]  :  Authorities: [ROLE_PATIENT]
[INFO]  :  Authenticated user: neela.patient@gmail.com
[INFO]  :  Authorities: [ROLE_PATIENT]
[DEBUG]  :  Secured GET /api/patients/byuserId/2
[INFO]  :  Checking path for skipping JWT filter: /api/patients/byuserId/2
[INFO]  :  Skip JWT filter? false
[DEBUG]  :  GET "/api/patients/byuserId/2", parameters={}
[DEBUG]  :  Mapped to com.hexaware.hospitalmanagement.restcontroller.PatientController#getPatientByUserId(Long)
[DEBUG]  :  Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[DEBUG]  :  Writing [Patient [patientId=2, user=User [userId=2, name=Neelavathi, email=neela.patient@gmail.com, password= (truncated)...]
[DEBUG]  :  Completed 200 OK
[DEBUG]  :  Securing OPTIONS /api/doctors/getAll
[DEBUG]  :  Securing GET /api/patients/byuserId/2
[INFO]  :  Checking path for skipping JWT filter: /api/patients/byuserId/2
[INFO]  :  Skip JWT filter? false
[INFO]  :  JwtAuthFilter is processing the request: /api/patients/byuserId/2
[INFO]  :  Authorization header: Bearer eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiUEFUSUVOVCIsImlkIjoyLCJzdWIiOiJuZWVsYS5wYXRpZW50QGdtYWlsLmNvbSIsImlhdCI6MTc1MDQyMDcyMCwiZXhwIjoxNzUwNTA3MTIwfQ.VRWw_Dozl5xbFz1A1phvGqpJFa-HsoedC03U7kyO-8U
[DEBUG]  :  Securing GET /api/doctors/getAll
[INFO]  :  Checking path for skipping JWT filter: /api/doctors/getAll
[INFO]  :  Skip JWT filter? false
[INFO]  :  Extracted username: neela.patient@gmail.com
[INFO]  :  JwtAuthFilter is processing the request: /api/doctors/getAll
[INFO]  :  Authorization header: Bearer eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiUEFUSUVOVCIsImlkIjoyLCJzdWIiOiJuZWVsYS5wYXRpZW50QGdtYWlsLmNvbSIsImlhdCI6MTc1MDQyMDcyMCwiZXhwIjoxNzUwNTA3MTIwfQ.VRWw_Dozl5xbFz1A1phvGqpJFa-HsoedC03U7kyO-8U
[INFO]  :  Extracted username: neela.patient@gmail.com
[INFO]  :  Authenticated user: neela.patient@gmail.com
[INFO]  :  Authorities: [ROLE_PATIENT]
[INFO]  :  Authenticated user: neela.patient@gmail.com
[INFO]  :  Authorities: [ROLE_PATIENT]
[DEBUG]  :  Secured GET /api/doctors/getAll
[INFO]  :  Checking path for skipping JWT filter: /api/doctors/getAll
[INFO]  :  Skip JWT filter? false
[DEBUG]  :  GET "/api/doctors/getAll", parameters={}
[DEBUG]  :  Mapped to com.hexaware.hospitalmanagement.restcontroller.DoctorController#getAllDoctors()
[INFO]  :  Authenticated user: neela.patient@gmail.com
[INFO]  :  Authorities: [ROLE_PATIENT]
[INFO]  :  Authenticated user: neela.patient@gmail.com
[INFO]  :  Authorities: [ROLE_PATIENT]
[DEBUG]  :  Secured GET /api/patients/byuserId/2
[INFO]  :  Checking path for skipping JWT filter: /api/patients/byuserId/2
[INFO]  :  Skip JWT filter? false
[DEBUG]  :  GET "/api/patients/byuserId/2", parameters={}
[DEBUG]  :  Mapped to com.hexaware.hospitalmanagement.restcontroller.PatientController#getPatientByUserId(Long)
[DEBUG]  :  Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[DEBUG]  :  Writing [Patient [patientId=2, user=User [userId=2, name=Neelavathi, email=neela.patient@gmail.com, password= (truncated)...]
[DEBUG]  :  Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[DEBUG]  :  Completed 200 OK
[DEBUG]  :  Writing [[Doctor [doctorId=1, user=User [userId=6, name=ManojKumar, email=manoj.doctor@gmail.com, password=$2 (truncated)...]
[DEBUG]  :  Completed 200 OK
[DEBUG]  :  Securing GET /api/patients/byuserId/2
[INFO]  :  Checking path for skipping JWT filter: /api/patients/byuserId/2
[INFO]  :  Skip JWT filter? false
[INFO]  :  JwtAuthFilter is processing the request: /api/patients/byuserId/2
[INFO]  :  Authorization header: Bearer eyJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiUEFUSUVOVCIsImlkIjoyLCJzdWIiOiJuZWVsYS5wYXRpZW50QGdtYWlsLmNvbSIsImlhdCI6MTc1MDQyMDcyMCwiZXhwIjoxNzUwNTA3MTIwfQ.VRWw_Dozl5xbFz1A1phvGqpJFa-HsoedC03U7kyO-8U
[INFO]  :  Extracted username: neela.patient@gmail.com
[INFO]  :  Authenticated user: neela.patient@gmail.com
[INFO]  :  Authorities: [ROLE_PATIENT]
[INFO]  :  Authenticated user: neela.patient@gmail.com
[INFO]  :  Authorities: [ROLE_PATIENT]
[DEBUG]  :  Secured GET /api/patients/byuserId/2
[INFO]  :  Checking path for skipping JWT filter: /api/patients/byuserId/2
[INFO]  :  Skip JWT filter? false
[DEBUG]  :  GET "/api/patients/byuserId/2", parameters={}
[DEBUG]  :  Mapped to com.hexaware.hospitalmanagement.restcontroller.PatientController#getPatientByUserId(Long)
[DEBUG]  :  Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[DEBUG]  :  Writing [Patient [patientId=2, user=User [userId=2, name=Neelavathi, email=neela.patient@gmail.com, password= (truncated)...]
[DEBUG]  :  Completed 200 OK
[INFO]  :  Application shutdown requested.
[INFO]  :  Closing JPA EntityManagerFactory for persistence unit 'default'
[INFO]  :  HikariPool-1 - Shutdown initiated...
[INFO]  :  HikariPool-1 - Shutdown completed.
